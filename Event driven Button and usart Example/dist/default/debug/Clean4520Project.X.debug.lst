

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 00:09:23 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.05
    61                           ; Generated 20/12/2018 GMT
    62                           ; 
    63                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4520 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     
    95 ;; Function _USARTReadByte is unused but had its address taken
    96  0000                     
    97                           	psect	nvCOMRAM
    98  000064                     __pnvCOMRAM:
    99                           	opt callstack 0
   100  000064                     _bUsart:
   101                           	opt callstack 0
   102  000064                     	ds	2
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISB	set	3987
   105  0000                     _OSCCON	set	4051
   106  0000                     _SPBRG	set	4015
   107  0000                     _TXREG	set	4013
   108  0000                     _RCREG	set	4014
   109  0000                     _PIR1bits	set	3998
   110  0000                     _PORTDbits	set	3971
   111  0000                     _LATB	set	3978
   112  0000                     _CREN	set	32092
   113  0000                     _TXEN	set	32101
   114  0000                     _TRISC7	set	31911
   115  0000                     _TRISC6	set	31910
   116  0000                     _SPEN	set	32095
   117  0000                     _SYNC	set	32100
   118  0000                     _BRGH	set	32098
   119  0000                     _RCIE	set	31981
   120  0000                     _PEIE	set	32662
   121  0000                     _GIE	set	32663
   122  0000                     _TXIF	set	31988
   123  0000                     _RCIF	set	31989
   124                           
   125                           	psect	smallconst
   126  000600                     __psmallconst:
   127                           	opt callstack 0
   128  000600  00                 	db	0
   129  000601                     STR_2:
   130  000601  50                 	db	80	;'P'
   131  000602  4F                 	db	79	;'O'
   132  000603  52                 	db	82	;'R'
   133  000604  54                 	db	84	;'T'
   134  000605  44                 	db	68	;'D'
   135  000606  62                 	db	98	;'b'
   136  000607  69                 	db	105	;'i'
   137  000608  74                 	db	116	;'t'
   138  000609  73                 	db	115	;'s'
   139  00060A  2E                 	db	46
   140  00060B  52                 	db	82	;'R'
   141  00060C  44                 	db	68	;'D'
   142  00060D  30                 	db	48	;'0'
   143  00060E  00                 	db	0
   144  00060F                     STR_3:
   145  00060F  50                 	db	80	;'P'
   146  000610  4F                 	db	79	;'O'
   147  000611  52                 	db	82	;'R'
   148  000612  54                 	db	84	;'T'
   149  000613  44                 	db	68	;'D'
   150  000614  62                 	db	98	;'b'
   151  000615  69                 	db	105	;'i'
   152  000616  74                 	db	116	;'t'
   153  000617  73                 	db	115	;'s'
   154  000618  2E                 	db	46
   155  000619  52                 	db	82	;'R'
   156  00061A  44                 	db	68	;'D'
   157  00061B  31                 	db	49	;'1'
   158  00061C  00                 	db	0
   159  00061D                     STR_1:
   160  00061D  0D                 	db	13
   161  00061E  0A                 	db	10
   162  00061F  00                 	db	0
   163  0000                     
   164                           ; #config settings
   165  000620  00                 	db	0	; dummy byte at the end
   166  0000                     
   167                           	psect	cinit
   168  0012B0                     __pcinit:
   169                           	opt callstack 0
   170  0012B0                     start_initialization:
   171                           	opt callstack 0
   172  0012B0                     __initialization:
   173                           	opt callstack 0
   174                           
   175                           ; Clear objects allocated to BANK0 (23 bytes)
   176  0012B0  EE00  F0E5         	lfsr	0,__pbssBANK0
   177  0012B4  0E17               	movlw	23
   178  0012B6                     clear_0:
   179  0012B6  6AEE               	clrf	postinc0,c
   180  0012B8  06E8               	decf	wreg,f,c
   181  0012BA  E1FD               	bnz	clear_0
   182                           
   183                           ; Clear objects allocated to COMRAM (43 bytes)
   184  0012BC  EE00  F039         	lfsr	0,__pbssCOMRAM
   185  0012C0  0E2B               	movlw	43
   186  0012C2                     clear_1:
   187  0012C2  6AEE               	clrf	postinc0,c
   188  0012C4  06E8               	decf	wreg,f,c
   189  0012C6  E1FD               	bnz	clear_1
   190  0012C8                     end_of_initialization:
   191                           	opt callstack 0
   192  0012C8                     __end_of__initialization:
   193                           	opt callstack 0
   194  0012C8  9066               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   195  0012CA  9266               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   196  0012CC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   197  0012CE  6EF8               	movwf	tblptru,c
   198  0012D0  0100               	movlb	0
   199  0012D2  EFB6  F009         	goto	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMRAM
   202  000039                     __pbssCOMRAM:
   203                           	opt callstack 0
   204  000039                     usartOccured@F3074:
   205                           	opt callstack 0
   206  000039                     	ds	20
   207  00004D                     USARTWriteInt@F2999:
   208                           	opt callstack 0
   209  00004D                     	ds	5
   210  000052                     _usart:
   211                           	opt callstack 0
   212  000052                     	ds	18
   213                           
   214                           	psect	bssBANK0
   215  0000E5                     __pbssBANK0:
   216                           	opt callstack 0
   217  0000E5                     _controller:
   218                           	opt callstack 0
   219  0000E5                     	ds	23
   220                           
   221                           	psect	cstackBANK0
   222  000080                     __pcstackBANK0:
   223                           	opt callstack 0
   224  000080                     ?_btn1getValue:
   225                           	opt callstack 0
   226  000080                     ?_btn2getValue:
   227                           	opt callstack 0
   228  000080                     ?___awdiv:
   229                           	opt callstack 0
   230  000080                     ?___awmod:
   231                           	opt callstack 0
   232  000080                     ?___aldiv:
   233                           	opt callstack 0
   234  000080                     ?_initButton:
   235                           	opt callstack 0
   236  000080                     USARTWriteByte@ch:
   237                           	opt callstack 0
   238  000080                     initButton@portName:
   239                           	opt callstack 0
   240  000080                     setButton1Usart@_usart:
   241                           	opt callstack 0
   242  000080                     addButton@controller:
   243                           	opt callstack 0
   244  000080                     USARTWriteString@str:
   245                           	opt callstack 0
   246  000080                     setupFunctions@usart:
   247                           	opt callstack 0
   248  000080                     setProcessor@_processor:
   249                           	opt callstack 0
   250  000080                     ___awdiv@dividend:
   251                           	opt callstack 0
   252  000080                     ___awmod@dividend:
   253                           	opt callstack 0
   254  000080                     ___aldiv@dividend:
   255                           	opt callstack 0
   256                           
   257                           ; 4 bytes @ 0x0
   258  000080                     	ds	2
   259  000082                     ??_btn1getValue:
   260  000082                     ??_btn2getValue:
   261  000082                     initButton@getValue:
   262                           	opt callstack 0
   263  000082                     addButton@button:
   264                           	opt callstack 0
   265  000082                     ___awdiv@divisor:
   266                           	opt callstack 0
   267  000082                     ___awmod@divisor:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x2
   271  000082                     	ds	2
   272  000084                     ??_addButton:
   273  000084                     ___awdiv@counter:
   274                           	opt callstack 0
   275  000084                     ___awmod@counter:
   276                           	opt callstack 0
   277  000084                     initButton@onPressed:
   278                           	opt callstack 0
   279  000084                     ___aldiv@divisor:
   280                           	opt callstack 0
   281                           
   282                           ; 4 bytes @ 0x4
   283  000084                     	ds	1
   284  000085                     ___awdiv@sign:
   285                           	opt callstack 0
   286  000085                     ___awmod@sign:
   287                           	opt callstack 0
   288                           
   289                           ; 1 bytes @ 0x5
   290  000085                     	ds	1
   291  000086                     ___awdiv@quotient:
   292                           	opt callstack 0
   293                           
   294                           ; 2 bytes @ 0x6
   295  000086                     	ds	2
   296  000088                     ___aldiv@counter:
   297                           	opt callstack 0
   298  000088                     USARTWriteInt@val:
   299                           	opt callstack 0
   300  000088                     initButton@buton:
   301                           	opt callstack 0
   302                           
   303                           ; 8 bytes @ 0x8
   304  000088                     	ds	1
   305  000089                     ___aldiv@sign:
   306                           	opt callstack 0
   307                           
   308                           ; 1 bytes @ 0x9
   309  000089                     	ds	1
   310  00008A                     USARTWriteInt@field_length:
   311                           	opt callstack 0
   312  00008A                     ___aldiv@quotient:
   313                           	opt callstack 0
   314                           
   315                           ; 4 bytes @ 0xA
   316  00008A                     	ds	1
   317  00008B                     USARTWriteInt@str:
   318                           	opt callstack 0
   319                           
   320                           ; 5 bytes @ 0xB
   321  00008B                     	ds	3
   322  00008E                     ?_calculateSpbrg:
   323                           	opt callstack 0
   324  00008E                     calculateSpbrg@baudRate:
   325                           	opt callstack 0
   326                           
   327                           ; 4 bytes @ 0xE
   328  00008E                     	ds	2
   329  000090                     ?_initInputController:
   330                           	opt callstack 0
   331  000090                     initInputController@_chectButtons:
   332                           	opt callstack 0
   333  000090                     USARTWriteInt@j:
   334                           	opt callstack 0
   335                           
   336                           ; 2 bytes @ 0x10
   337  000090                     	ds	2
   338  000092                     ??_calculateSpbrg:
   339  000092                     USARTWriteInt@i:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x12
   343  000092                     	ds	2
   344  000094                     btn1Func@deger:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x14
   348  000094                     	ds	2
   349  000096                     handleButtonEvents@buton:
   350                           	opt callstack 0
   351  000096                     calculateSpbrg@bolum:
   352                           	opt callstack 0
   353                           
   354                           ; 4 bytes @ 0x16
   355  000096                     	ds	2
   356  000098                     
   357                           ; 1 bytes @ 0x18
   358  000098                     	ds	2
   359  00009A                     chectButtons@controller:
   360                           	opt callstack 0
   361  00009A                     USARTInit@usart:
   362                           	opt callstack 0
   363                           
   364                           ; 2 bytes @ 0x1A
   365  00009A                     	ds	2
   366  00009C                     ??_chectButtons:
   367  00009C                     USARTInit@baudRate:
   368                           	opt callstack 0
   369                           
   370                           ; 4 bytes @ 0x1C
   371  00009C                     	ds	4
   372  0000A0                     chectButtons@buton:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0x20
   376  0000A0                     	ds	2
   377  0000A2                     chectButtons@i:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x22
   381  0000A2                     	ds	2
   382  0000A4                     
   383                           ; 1 bytes @ 0x24
   384  0000A4                     	ds	3
   385  0000A7                     initInputController@button1:
   386                           	opt callstack 0
   387                           
   388                           ; 8 bytes @ 0x27
   389  0000A7                     	ds	8
   390  0000AF                     initInputController@button2:
   391                           	opt callstack 0
   392                           
   393                           ; 8 bytes @ 0x2F
   394  0000AF                     	ds	8
   395  0000B7                     initInputController@controller:
   396                           	opt callstack 0
   397                           
   398                           ; 23 bytes @ 0x37
   399  0000B7                     	ds	23
   400  0000CE                     ?_initInputControllerDefaultFunction:
   401                           	opt callstack 0
   402                           
   403                           ; 23 bytes @ 0x4E
   404  0000CE                     	ds	23
   405  0000E5                     
   406                           ; 1 bytes @ 0x65
   407                           
   408                           	psect	cstackCOMRAM
   409  000001                     __pcstackCOMRAM:
   410                           	opt callstack 0
   411  000001                     ?_isspace:
   412                           	opt callstack 0
   413  000001                     ?_isdigit:
   414                           	opt callstack 0
   415  000001                     ?i2___wmul:
   416                           	opt callstack 0
   417  000001                     ?i2___awdiv:
   418                           	opt callstack 0
   419  000001                     ?i2___awmod:
   420                           	opt callstack 0
   421  000001                     i2USARTWriteByte@ch:
   422                           	opt callstack 0
   423  000001                     USARTReadString@buf:
   424                           	opt callstack 0
   425  000001                     isdigit@c:
   426                           	opt callstack 0
   427  000001                     isspace@c:
   428                           	opt callstack 0
   429  000001                     i2USARTWriteString@str:
   430                           	opt callstack 0
   431  000001                     i2___wmul@multiplier:
   432                           	opt callstack 0
   433  000001                     i2___awdiv@dividend:
   434                           	opt callstack 0
   435  000001                     i2___awmod@dividend:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x0
   439  000001                     	ds	2
   440  000003                     ??_isspace:
   441  000003                     ??_isdigit:
   442  000003                     USARTReadString@max_length:
   443                           	opt callstack 0
   444  000003                     USARTWriteLine@ln:
   445                           	opt callstack 0
   446  000003                     i2___wmul@multiplicand:
   447                           	opt callstack 0
   448  000003                     i2___awdiv@divisor:
   449                           	opt callstack 0
   450  000003                     i2___awmod@divisor:
   451                           	opt callstack 0
   452                           
   453                           ; 2 bytes @ 0x2
   454  000003                     	ds	1
   455  000004                     ??_USARTReadString:
   456                           
   457                           ; 1 bytes @ 0x3
   458  000004                     	ds	1
   459  000005                     i2___awdiv@counter:
   460                           	opt callstack 0
   461  000005                     i2___awmod@counter:
   462                           	opt callstack 0
   463  000005                     i2___wmul@product:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x4
   467  000005                     	ds	1
   468  000006                     i2___awdiv@sign:
   469                           	opt callstack 0
   470  000006                     i2___awmod@sign:
   471                           	opt callstack 0
   472                           
   473                           ; 1 bytes @ 0x5
   474  000006                     	ds	1
   475  000007                     _isspace$876:
   476                           	opt callstack 0
   477  000007                     i2___awdiv@quotient:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x6
   481  000007                     	ds	1
   482  000008                     ?_atoi:
   483                           	opt callstack 0
   484  000008                     atoi@s:
   485                           	opt callstack 0
   486                           
   487                           ; 2 bytes @ 0x7
   488  000008                     	ds	1
   489  000009                     i2USARTWriteInt@val:
   490                           	opt callstack 0
   491                           
   492                           ; 2 bytes @ 0x8
   493  000009                     	ds	1
   494  00000A                     ??_atoi:
   495                           
   496                           ; 1 bytes @ 0x9
   497  00000A                     	ds	1
   498  00000B                     USARTReadString@i:
   499                           	opt callstack 0
   500  00000B                     i2USARTWriteInt@field_length:
   501                           	opt callstack 0
   502                           
   503                           ; 1 bytes @ 0xA
   504  00000B                     	ds	1
   505  00000C                     USARTReadString@tmp:
   506                           	opt callstack 0
   507  00000C                     i2USARTWriteInt@str:
   508                           	opt callstack 0
   509                           
   510                           ; 5 bytes @ 0xB
   511  00000C                     	ds	2
   512  00000E                     atoi@neg:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0xD
   516  00000E                     	ds	2
   517  000010                     _atoi$858:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0xF
   521  000010                     	ds	1
   522  000011                     i2USARTWriteInt@j:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x10
   526  000011                     	ds	1
   527  000012                     _atoi$860:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x11
   531  000012                     	ds	1
   532  000013                     i2USARTWriteInt@i:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x12
   536  000013                     	ds	1
   537  000014                     _atoi$859:
   538                           	opt callstack 0
   539                           
   540                           ; 1 bytes @ 0x13
   541  000014                     	ds	1
   542  000015                     atoi@n:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x14
   546  000015                     	ds	2
   547  000017                     usartOccured@text:
   548                           	opt callstack 0
   549                           
   550                           ; 20 bytes @ 0x16
   551  000017                     	ds	20
   552  00002B                     usartOccured@i:
   553                           	opt callstack 0
   554                           
   555                           ; 2 bytes @ 0x2A
   556  00002B                     	ds	2
   557  00002D                     ??_ISR:
   558                           
   559                           ; 1 bytes @ 0x2C
   560  00002D                     	ds	12
   561                           
   562 ;;
   563 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   564 ;;
   565 ;; *************** function _main *****************
   566 ;; Defined at:
   567 ;;		line 13 in file "main.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   581 ;;      Params:         0       0       0       0       0       0       0
   582 ;;      Locals:         0       0       0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0
   584 ;;      Totals:         0       0       0       0       0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels required when called:   11
   587 ;; This function calls:
   588 ;;		_loop
   589 ;;		_setPortInputsOutputs
   590 ;;		_setup
   591 ;;		_setupSettings
   592 ;; This function is called by:
   593 ;;		Startup code after reset
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text0
   598  00136C                     __ptext0:
   599                           	opt callstack 0
   600  00136C                     _main:
   601                           	opt callstack 20
   602                           
   603                           ;main.c: 14:     setupSettings();
   604                           
   605                           ;incstack = 0
   606  00136C  EC02  F00A         	call	_setupSettings	;wreg free
   607                           
   608                           ;main.c: 15:     setPortInputsOutputs();
   609  001370  ECF5  F009         	call	_setPortInputsOutputs	;wreg free
   610                           
   611                           ;main.c: 17:     LATB = 0x01;
   612  001374  0E01               	movlw	1
   613  001376  6E8A               	movwf	3978,c	;volatile
   614                           
   615                           ;main.c: 21:     setup();
   616  001378  EC9C  F008         	call	_setup	;wreg free
   617  00137C                     l2397:
   618                           
   619                           ;main.c: 26:         loop();
   620  00137C  ECD5  F009         	call	_loop	;wreg free
   621  001380  D7FD               	goto	l2397
   622  001382                     __end_of_main:
   623                           	opt callstack 0
   624                           
   625 ;; *************** function _setupSettings *****************
   626 ;; Defined at:
   627 ;;		line 15 in file "./Settings.h"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    5
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text1
   656  001404                     __ptext1:
   657                           	opt callstack 0
   658  001404                     _setupSettings:
   659                           	opt callstack 25
   660                           
   661                           ;./Settings.h: 16:     OSCCON = 0x72;
   662                           
   663                           ;incstack = 0
   664  001404  0E72               	movlw	114
   665  001406  6ED3               	movwf	4051,c	;volatile
   666  001408  0012               	return		;funcret
   667  00140A                     __end_of_setupSettings:
   668                           	opt callstack 0
   669                           
   670 ;; *************** function _setup *****************
   671 ;; Defined at:
   672 ;;		line 23 in file "Application/Application.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   686 ;;      Params:         0       0       0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    8
   693 ;; This function calls:
   694 ;;		_USARTInit
   695 ;;		_initInputControllerDefaultFunction
   696 ;;		_setButton1Usart
   697 ;;		_setProcessor
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text2
   704  001138                     __ptext2:
   705                           	opt callstack 0
   706  001138                     _setup:
   707                           	opt callstack 22
   708                           
   709                           ;Application/Application.c: 24:     controller = initInputControllerDefaultFunction();
   710                           
   711                           ;incstack = 0
   712  001138  EC6B  F009         	call	_initInputControllerDefaultFunction	;wreg free
   713  00113C  EE20  F0E5         	lfsr	2,_controller
   714  001140  0E16               	movlw	22
   715  001142                     u2231:
   716  001142  CFEB FFDB          	movff	plusw0,plusw2
   717  001146  06E8               	decf	wreg,f,c
   718  001148  E2FC               	bc	u2231
   719                           
   720                           ;Application/Application.c: 25:     USARTInit(&usart, 9600);
   721  00114A  0E52               	movlw	low _usart
   722  00114C  0100               	movlb	0	; () banked
   723  00114E  6F9A               	movwf	USARTInit@usart& (0+255),b
   724  001150  0E00               	movlw	high _usart
   725  001152  6F9B               	movwf	(USARTInit@usart+1)& (0+255),b
   726  001154  0E80               	movlw	128
   727  001156  6F9C               	movwf	USARTInit@baudRate& (0+255),b
   728  001158  0E25               	movlw	37
   729  00115A  6F9D               	movwf	(USARTInit@baudRate+1)& (0+255),b
   730  00115C  0E00               	movlw	0
   731  00115E  6F9E               	movwf	(USARTInit@baudRate+2)& (0+255),b
   732  001160  0E00               	movlw	0
   733  001162  6F9F               	movwf	(USARTInit@baudRate+3)& (0+255),b
   734  001164  ECDD  F008         	call	_USARTInit	;wreg free
   735                           
   736                           ;Application/Application.c: 27:     setProcessor();
   737  001168  ECC1  F009         	call	_setProcessor	;wreg free
   738                           
   739                           ;Application/Application.c: 28:     setButton1Usart(&usart);
   740  00116C  0E52               	movlw	low _usart
   741  00116E  0100               	movlb	0	; () banked
   742  001170  6F80               	movwf	setButton1Usart@_usart& (0+255),b
   743  001172  0E00               	movlw	high _usart
   744  001174  6F81               	movwf	(setButton1Usart@_usart+1)& (0+255),b
   745  001176  ECF0  F009         	call	_setButton1Usart	;wreg free
   746  00117A  0012               	return		;funcret
   747  00117C                     __end_of_setup:
   748                           	opt callstack 0
   749                           
   750 ;; *************** function _setProcessor *****************
   751 ;; Defined at:
   752 ;;		line 13 in file "Application/Application.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  _processor      2    0[BANK0 ] struct .
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   766 ;;      Params:         0       0       0       0       0       0       0
   767 ;;      Locals:         0       2       0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0
   769 ;;      Totals:         0       2       0       0       0       0       0
   770 ;;Total ram usage:        2 bytes
   771 ;; Hardware stack levels used:    1
   772 ;; Hardware stack levels required when called:    5
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_setup
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text3
   781  001382                     __ptext3:
   782                           	opt callstack 0
   783  001382                     _setProcessor:
   784                           	opt callstack 24
   785                           
   786                           ;Application/Application.c: 14:     UsartDataProcessor _processor;;Application/Applicati
      +                          on.c: 15:     _processor.process = usartOccured;
   787                           
   788                           ;incstack = 0
   789  001382  0E1E               	movlw	low _usartOccured
   790  001384  0100               	movlb	0	; () banked
   791  001386  6F80               	movwf	setProcessor@_processor& (0+255),b
   792  001388  0E0A               	movlw	high _usartOccured
   793  00138A  6F81               	movwf	(setProcessor@_processor+1)& (0+255),b
   794                           
   795                           ; BSR set to: 0
   796                           ;Application/Application.c: 17:     usart.processor = _processor;
   797  00138C  C080  F054         	movff	setProcessor@_processor,_usart+2
   798  001390  C081  F055         	movff	setProcessor@_processor+1,_usart+3
   799                           
   800                           ; BSR set to: 0
   801  001394  0012               	return		;funcret
   802  001396                     __end_of_setProcessor:
   803                           	opt callstack 0
   804                           
   805 ;; *************** function _setButton1Usart *****************
   806 ;; Defined at:
   807 ;;		line 16 in file "Application/../Button/InputController/../ButonlarSpesific/Buton1.h"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  _usart          2    0[BANK0 ] PTR struct .
   810 ;;		 -> usart(18), 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  2    0[BANK0 ] int 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   822 ;;      Params:         0       2       0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0
   825 ;;      Totals:         0       2       0       0       0       0       0
   826 ;;Total ram usage:        2 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    5
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_setup
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text4
   837  0013E0                     __ptext4:
   838                           	opt callstack 0
   839  0013E0                     _setButton1Usart:
   840                           	opt callstack 24
   841                           
   842                           ;Application/../Button/InputController/../ButonlarSpesific/Buton1.h: 17:     bUsart = _u
      +                          sart;
   843                           
   844                           ; BSR set to: 0
   845                           ;incstack = 0
   846  0013E0  C080  F064         	movff	setButton1Usart@_usart,_bUsart
   847  0013E4  C081  F065         	movff	setButton1Usart@_usart+1,_bUsart+1
   848  0013E8  0012               	return		;funcret
   849  0013EA                     __end_of_setButton1Usart:
   850                           	opt callstack 0
   851                           
   852 ;; *************** function _initInputControllerDefaultFunction *****************
   853 ;; Defined at:
   854 ;;		line 92 in file "Application/../Button/InputController/InputControllerFunctions.h"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  23   78[BANK0 ] struct .
   861 ;; Registers used:
   862 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   868 ;;      Params:         0      23       0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0
   871 ;;      Totals:         0      23       0       0       0       0       0
   872 ;;Total ram usage:       23 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    7
   875 ;; This function calls:
   876 ;;		_initInputController
   877 ;; This function is called by:
   878 ;;		_setup
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text5
   883  0012D6                     __ptext5:
   884                           	opt callstack 0
   885  0012D6                     _initInputControllerDefaultFunction:
   886                           	opt callstack 22
   887                           
   888                           ;Application/../Button/InputController/InputControllerFunctions.h: 94:     return initIn
      +                          putController(chectButtons);
   889                           
   890                           ;incstack = 0
   891  0012D6  0EB4               	movlw	low _chectButtons
   892  0012D8  0100               	movlb	0	; () banked
   893  0012DA  6F90               	movwf	initInputController@_chectButtons& (0+255),b
   894  0012DC  0E0E               	movlw	high _chectButtons
   895  0012DE  6F91               	movwf	(initInputController@_chectButtons+1)& (0+255),b
   896  0012E0  EC62  F005         	call	_initInputController	;wreg free
   897  0012E4  CFE9 FFD9          	movff	fsr0l,fsr2l
   898  0012E8  CFEA FFDA          	movff	fsr0h,fsr2h
   899  0012EC  EE00  F0CE         	lfsr	0,?_initInputControllerDefaultFunction
   900  0012F0  0E16               	movlw	22
   901  0012F2                     u2221:
   902  0012F2  CFDB FFEB          	movff	plusw2,plusw0
   903  0012F6  06E8               	decf	wreg,f,c
   904  0012F8  E2FC               	bc	u2221
   905  0012FA  0012               	return		;funcret
   906  0012FC                     __end_of_initInputControllerDefaultFunction:
   907                           	opt callstack 0
   908                           
   909 ;; *************** function _initInputController *****************
   910 ;; Defined at:
   911 ;;		line 76 in file "Application/../Button/InputController/InputControllerFunctions.h"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  _chectButton    2   16[BANK0 ] PTR FTN()void 
   914 ;;		 -> chectButtons(1), 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  controller     23   55[BANK0 ] struct .
   917 ;;  button2         8   47[BANK0 ] struct .
   918 ;;  button1         8   39[BANK0 ] struct .
   919 ;; Return value:  Size  Location     Type
   920 ;;                  23   16[BANK0 ] struct .
   921 ;; Registers used:
   922 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   928 ;;      Params:         0      23       0       0       0       0       0
   929 ;;      Locals:         0      39       0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0
   931 ;;      Totals:         0      62       0       0       0       0       0
   932 ;;Total ram usage:       62 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    6
   935 ;; This function calls:
   936 ;;		_addButton
   937 ;;		_initButton
   938 ;; This function is called by:
   939 ;;		_initInputControllerDefaultFunction
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text6
   944  000AC4                     __ptext6:
   945                           	opt callstack 0
   946  000AC4                     _initInputController:
   947                           	opt callstack 22
   948                           
   949                           ;Application/../Button/InputController/InputControllerFunctions.h: 77:     InputControll
      +                          er controller;;Application/../Button/InputController/InputControllerFunctions.h: 78:    
      +                           controller.chectButtons = _chectButtons;
   950                           
   951                           ;incstack = 0
   952  000AC4  C090  F0CC         	movff	initInputController@_chectButtons,initInputController@controller+21
   953  000AC8  C091  F0CD         	movff	initInputController@_chectButtons+1,initInputController@controller+22
   954                           
   955                           ;Application/../Button/InputController/InputControllerFunctions.h: 79:     Button button
      +                          1 = initButton("PORTDbits.RD0",btn1getValue, btn1Func);
   956  000ACC  0E01               	movlw	low STR_2
   957  000ACE  0100               	movlb	0	; () banked
   958  000AD0  6F80               	movwf	initButton@portName& (0+255),b
   959  000AD2  0E06               	movlw	high STR_2
   960  000AD4  6F81               	movwf	(initButton@portName+1)& (0+255),b
   961  000AD6  0E3C               	movlw	low _btn1getValue
   962  000AD8  6F82               	movwf	initButton@getValue& (0+255),b
   963  000ADA  0E13               	movlw	high _btn1getValue
   964  000ADC  6F83               	movwf	(initButton@getValue+1)& (0+255),b
   965  000ADE  0E7C               	movlw	low _btn1Func
   966  000AE0  6F84               	movwf	initButton@onPressed& (0+255),b
   967  000AE2  0E10               	movlw	high _btn1Func
   968  000AE4  6F85               	movwf	(initButton@onPressed+1)& (0+255),b
   969  000AE6  EC2C  F009         	call	_initButton	;wreg free
   970  000AEA  EE20  F0A7         	lfsr	2,initInputController@button1
   971  000AEE  0E07               	movlw	7
   972  000AF0                     u2171:
   973  000AF0  CFEB FFDB          	movff	plusw0,plusw2
   974  000AF4  06E8               	decf	wreg,f,c
   975  000AF6  E2FC               	bc	u2171
   976                           
   977                           ;Application/../Button/InputController/InputControllerFunctions.h: 80:     Button button
      +                          2 = initButton("PORTDbits.RD1",btn2getValue, btn2Func);
   978  000AF8  0E0F               	movlw	low STR_3
   979  000AFA  0100               	movlb	0	; () banked
   980  000AFC  6F80               	movwf	initButton@portName& (0+255),b
   981  000AFE  0E06               	movlw	high STR_3
   982  000B00  6F81               	movwf	(initButton@portName+1)& (0+255),b
   983  000B02  0E54               	movlw	low _btn2getValue
   984  000B04  6F82               	movwf	initButton@getValue& (0+255),b
   985  000B06  0E13               	movlw	high _btn2getValue
   986  000B08  6F83               	movwf	(initButton@getValue+1)& (0+255),b
   987  000B0A  0EFC               	movlw	low _btn2Func
   988  000B0C  6F84               	movwf	initButton@onPressed& (0+255),b
   989  000B0E  0E13               	movlw	high _btn2Func
   990  000B10  6F85               	movwf	(initButton@onPressed+1)& (0+255),b
   991  000B12  EC2C  F009         	call	_initButton	;wreg free
   992  000B16  EE20  F0AF         	lfsr	2,initInputController@button2
   993  000B1A  0E07               	movlw	7
   994  000B1C                     u2181:
   995  000B1C  CFEB FFDB          	movff	plusw0,plusw2
   996  000B20  06E8               	decf	wreg,f,c
   997  000B22  E2FC               	bc	u2181
   998                           
   999                           ;Application/../Button/InputController/InputControllerFunctions.h: 81:     addButton(&co
      +                          ntroller,&button1);
  1000  000B24  0EB7               	movlw	low initInputController@controller
  1001  000B26  0100               	movlb	0	; () banked
  1002  000B28  6F80               	movwf	addButton@controller& (0+255),b
  1003  000B2A  0E00               	movlw	high initInputController@controller
  1004  000B2C  6F81               	movwf	(addButton@controller+1)& (0+255),b
  1005  000B2E  0EA7               	movlw	low initInputController@button1
  1006  000B30  6F82               	movwf	addButton@button& (0+255),b
  1007  000B32  0E00               	movlw	high initInputController@button1
  1008  000B34  6F83               	movwf	(addButton@button+1)& (0+255),b
  1009  000B36  EC74  F008         	call	_addButton	;wreg free
  1010                           
  1011                           ;Application/../Button/InputController/InputControllerFunctions.h: 82:     addButton(&co
      +                          ntroller,&button2);
  1012  000B3A  0EB7               	movlw	low initInputController@controller
  1013  000B3C  0100               	movlb	0	; () banked
  1014  000B3E  6F80               	movwf	addButton@controller& (0+255),b
  1015  000B40  0E00               	movlw	high initInputController@controller
  1016  000B42  6F81               	movwf	(addButton@controller+1)& (0+255),b
  1017  000B44  0EAF               	movlw	low initInputController@button2
  1018  000B46  6F82               	movwf	addButton@button& (0+255),b
  1019  000B48  0E00               	movlw	high initInputController@button2
  1020  000B4A  6F83               	movwf	(addButton@button+1)& (0+255),b
  1021  000B4C  EC74  F008         	call	_addButton	;wreg free
  1022                           
  1023                           ;Application/../Button/InputController/InputControllerFunctions.h: 83:     return contro
      +                          ller;
  1024  000B50  EE20  F0B7         	lfsr	2,initInputController@controller
  1025  000B54  EE00  F090         	lfsr	0,?_initInputController
  1026  000B58  0E16               	movlw	22
  1027  000B5A                     u2191:
  1028  000B5A  CFDB FFEB          	movff	plusw2,plusw0
  1029  000B5E  06E8               	decf	wreg,f,c
  1030  000B60  E2FC               	bc	u2191
  1031  000B62  0012               	return		;funcret
  1032  000B64                     __end_of_initInputController:
  1033                           	opt callstack 0
  1034                           
  1035 ;; *************** function _initButton *****************
  1036 ;; Defined at:
  1037 ;;		line 15 in file "Application/../Button/InputController/../Button/ButtonFunctions.h"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  portName        2    0[BANK0 ] PTR unsigned char 
  1040 ;;		 -> STR_3(14), STR_2(14), 
  1041 ;;  getValue        2    2[BANK0 ] PTR FTN()int 
  1042 ;;		 -> btn2getValue(2), btn1getValue(2), 
  1043 ;;  onPressed       2    4[BANK0 ] PTR FTN()void 
  1044 ;;		 -> btn2Func(1), btn1Func(1), 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  buton           8    8[BANK0 ] struct .
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  8    0[BANK0 ] struct .
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1056 ;;      Params:         0       8       0       0       0       0       0
  1057 ;;      Locals:         0       8       0       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0
  1059 ;;      Totals:         0      16       0       0       0       0       0
  1060 ;;Total ram usage:       16 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    5
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_initInputController
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           	psect	text7
  1071  001258                     __ptext7:
  1072                           	opt callstack 0
  1073  001258                     _initButton:
  1074                           	opt callstack 22
  1075                           
  1076                           ;Application/../Button/InputController/../Button/ButtonFunctions.h: 16:     Button buton
      +                          ;;Application/../Button/InputController/../Button/ButtonFunctions.h: 17:     buton.portN
      +                          ame = portName;
  1077                           
  1078                           ;incstack = 0
  1079  001258  C080  F088         	movff	initButton@portName,initButton@buton
  1080  00125C  C081  F089         	movff	initButton@portName+1,initButton@buton+1
  1081                           
  1082                           ;Application/../Button/InputController/../Button/ButtonFunctions.h: 18:     buton.getVal
      +                          ue = getValue;
  1083  001260  C082  F08C         	movff	initButton@getValue,initButton@buton+4
  1084  001264  C083  F08D         	movff	initButton@getValue+1,initButton@buton+5
  1085                           
  1086                           ;Application/../Button/InputController/../Button/ButtonFunctions.h: 19:     buton.onPres
      +                          sed = onPressed;
  1087  001268  C084  F08E         	movff	initButton@onPressed,initButton@buton+6
  1088  00126C  C085  F08F         	movff	initButton@onPressed+1,initButton@buton+7
  1089                           
  1090                           ;Application/../Button/InputController/../Button/ButtonFunctions.h: 20:     return buton
      +                          ;
  1091  001270  EE20  F088         	lfsr	2,initButton@buton
  1092  001274  EE00  F080         	lfsr	0,?_initButton
  1093  001278  0E07               	movlw	7
  1094  00127A                     u2021:
  1095  00127A  CFDB FFEB          	movff	plusw2,plusw0
  1096  00127E  06E8               	decf	wreg,f,c
  1097  001280  E2FC               	bc	u2021
  1098  001282  0012               	return		;funcret
  1099  001284                     __end_of_initButton:
  1100                           	opt callstack 0
  1101                           
  1102 ;; *************** function _addButton *****************
  1103 ;; Defined at:
  1104 ;;		line 66 in file "Application/../Button/InputController/InputControllerFunctions.h"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  controller      2    0[BANK0 ] PTR struct .
  1107 ;;		 -> initInputController@controller(23), 
  1108 ;;  button          2    2[BANK0 ] PTR struct .
  1109 ;;		 -> initInputController@button2(8), initInputController@button1(8), 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  23    0[BANK0 ] struct .
  1114 ;; Registers used:
  1115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         0       4       0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0
  1123 ;;      Temps:          0       3       0       0       0       0       0
  1124 ;;      Totals:         0       7       0       0       0       0       0
  1125 ;;Total ram usage:        7 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    5
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_initInputController
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text8
  1136  0010E8                     __ptext8:
  1137                           	opt callstack 0
  1138  0010E8                     _addButton:
  1139                           	opt callstack 22
  1140                           
  1141                           ;Application/../Button/InputController/InputControllerFunctions.h: 67:      controller->
      +                          buttons[(controller->buttonSize)] = button;
  1142                           
  1143                           ;incstack = 0
  1144  0010E8  C080  FFD9         	movff	addButton@controller,fsr2l
  1145  0010EC  C081  FFDA         	movff	addButton@controller+1,fsr2h
  1146  0010F0  50DF               	movf	indf2,w,c
  1147  0010F2  0100               	movlb	0	; () banked
  1148  0010F4  6F84               	movwf	??_addButton& (0+255),b
  1149  0010F6  5184               	movf	??_addButton& (0+255),w,b
  1150  0010F8  0D02               	mullw	2
  1151  0010FA  C080  F085         	movff	addButton@controller,??_addButton+1
  1152  0010FE  C081  F086         	movff	addButton@controller+1,??_addButton+2
  1153  001102  50F3               	movf	prodl,w,c
  1154  001104  2785               	addwf	(??_addButton+1)& (0+255),f,b
  1155  001106  50F4               	movf	prodh,w,c
  1156  001108  2386               	addwfc	(??_addButton+2)& (0+255),f,b
  1157  00110A  0E01               	movlw	1
  1158  00110C  2585               	addwf	(??_addButton+1)& (0+255),w,b
  1159  00110E  6ED9               	movwf	fsr2l,c
  1160  001110  0E00               	movlw	0
  1161  001112  2186               	addwfc	(??_addButton+2)& (0+255),w,b
  1162  001114  6EDA               	movwf	fsr2h,c
  1163  001116  C082  FFDE         	movff	addButton@button,postinc2
  1164  00111A  C083  FFDD         	movff	addButton@button+1,postdec2
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;Application/../Button/InputController/InputControllerFunctions.h: 68:      (controller-
      +                          >buttonSize) = (controller->buttonSize)+1;
  1168  00111E  C080  FFD9         	movff	addButton@controller,fsr2l
  1169  001122  C081  FFDA         	movff	addButton@controller+1,fsr2h
  1170  001126  50DF               	movf	indf2,w,c
  1171  001128  6F84               	movwf	??_addButton& (0+255),b
  1172  00112A  2984               	incf	??_addButton& (0+255),w,b
  1173  00112C  C080  FFD9         	movff	addButton@controller,fsr2l
  1174  001130  C081  FFDA         	movff	addButton@controller+1,fsr2h
  1175  001134  6EDF               	movwf	indf2,c
  1176                           
  1177                           ; BSR set to: 0
  1178  001136  0012               	return		;funcret
  1179  001138                     __end_of_addButton:
  1180                           	opt callstack 0
  1181                           
  1182 ;; *************** function _USARTInit *****************
  1183 ;; Defined at:
  1184 ;;		line 48 in file "Application/../usart/UsartSetFunctions.h"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  usart           2   26[BANK0 ] PTR struct .
  1187 ;;		 -> usart(18), 
  1188 ;;  baudRate        4   28[BANK0 ] long 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1200 ;;      Params:         0       6       0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0
  1203 ;;      Totals:         0       6       0       0       0       0       0
  1204 ;;Total ram usage:        6 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    7
  1207 ;; This function calls:
  1208 ;;		_calculateSpbrg
  1209 ;;		_enableInterrupts
  1210 ;;		_setupFunctions
  1211 ;; This function is called by:
  1212 ;;		_setup
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text9
  1217  0011BA                     __ptext9:
  1218                           	opt callstack 0
  1219  0011BA                     _USARTInit:
  1220                           	opt callstack 22
  1221                           
  1222                           ;Application/../usart/UsartSetFunctions.h: 51:     enableInterrupts();
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;incstack = 0
  1226  0011BA  ECFA  F009         	call	_enableInterrupts	;wreg free
  1227                           
  1228                           ;Application/../usart/UsartSetFunctions.h: 53:     BRGH = 1;
  1229  0011BE  84AC               	bsf	4012,2,c	;volatile
  1230                           
  1231                           ;Application/../usart/UsartSetFunctions.h: 54:     SPBRG = calculateSpbrg(baudRate);
  1232  0011C0  C09C  F08E         	movff	USARTInit@baudRate,calculateSpbrg@baudRate
  1233  0011C4  C09D  F08F         	movff	USARTInit@baudRate+1,calculateSpbrg@baudRate+1
  1234  0011C8  C09E  F090         	movff	USARTInit@baudRate+2,calculateSpbrg@baudRate+2
  1235  0011CC  C09F  F091         	movff	USARTInit@baudRate+3,calculateSpbrg@baudRate+3
  1236  0011D0  EC94  F007         	call	_calculateSpbrg	;wreg free
  1237  0011D4  0100               	movlb	0	; () banked
  1238  0011D6  518E               	movf	?_calculateSpbrg& (0+255),w,b
  1239  0011D8  6EAF               	movwf	4015,c	;volatile
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;Application/../usart/UsartSetFunctions.h: 57:     SYNC = 0;
  1243  0011DA  98AC               	bcf	4012,4,c	;volatile
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;Application/../usart/UsartSetFunctions.h: 58:     SPEN = 1;
  1247  0011DC  8EAB               	bsf	4011,7,c	;volatile
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;Application/../usart/UsartSetFunctions.h: 60:     TRISC6 = 1;
  1251  0011DE  8C94               	bsf	3988,6,c	;volatile
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;Application/../usart/UsartSetFunctions.h: 61:     TRISC7 = 1;
  1255  0011E0  8E94               	bsf	3988,7,c	;volatile
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;Application/../usart/UsartSetFunctions.h: 62:     TXEN = 1;
  1259  0011E2  8AAC               	bsf	4012,5,c	;volatile
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;Application/../usart/UsartSetFunctions.h: 64:     CREN = 1;
  1263  0011E4  88AB               	bsf	4011,4,c	;volatile
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;Application/../usart/UsartSetFunctions.h: 65:     setupFunctions(usart);
  1267  0011E6  C09A  F080         	movff	USARTInit@usart,setupFunctions@usart
  1268  0011EA  C09B  F081         	movff	USARTInit@usart+1,setupFunctions@usart+1
  1269  0011EE  ECB2  F005         	call	_setupFunctions	;wreg free
  1270  0011F2  0012               	return		;funcret
  1271  0011F4                     __end_of_USARTInit:
  1272                           	opt callstack 0
  1273                           
  1274 ;; *************** function _setupFunctions *****************
  1275 ;; Defined at:
  1276 ;;		line 20 in file "Application/../usart/UsartSetFunctions.h"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  usart           2    0[BANK0 ] PTR struct .
  1279 ;;		 -> usart(18), 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1291 ;;      Params:         0       2       0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0
  1294 ;;      Totals:         0       2       0       0       0       0       0
  1295 ;;Total ram usage:        2 bytes
  1296 ;; Hardware stack levels used:    1
  1297 ;; Hardware stack levels required when called:    5
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_USARTInit
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text10
  1306  000B64                     __ptext10:
  1307                           	opt callstack 0
  1308  000B64                     _setupFunctions:
  1309                           	opt callstack 23
  1310                           
  1311                           ;Application/../usart/UsartSetFunctions.h: 22:     usart->isDataReady = USARTDataReady;
  1312                           
  1313                           ;incstack = 0
  1314  000B64  C080  FFD9         	movff	setupFunctions@usart,fsr2l
  1315  000B68  C081  FFDA         	movff	setupFunctions@usart+1,fsr2h
  1316  000B6C  0ED4               	movlw	low _USARTDataReady
  1317  000B6E  6EDE               	movwf	postinc2,c
  1318  000B70  0E13               	movlw	high _USARTDataReady
  1319  000B72  6EDD               	movwf	postdec2,c
  1320                           
  1321                           ;Application/../usart/UsartSetFunctions.h: 25:     usart->readByte = USARTReadByte;
  1322  000B74  0100               	movlb	0	; () banked
  1323  000B76  EE20 F010          	lfsr	2,16
  1324  000B7A  5180               	movf	setupFunctions@usart& (0+255),w,b
  1325  000B7C  26D9               	addwf	fsr2l,f,c
  1326  000B7E  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1327  000B80  22DA               	addwfc	fsr2h,f,c
  1328  000B82  0E00               	movlw	0
  1329  000B84  6EDE               	movwf	postinc2,c
  1330  000B86  0E00               	movlw	0
  1331  000B88  6EDD               	movwf	postdec2,c
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;Application/../usart/UsartSetFunctions.h: 26:     usart->readChar = USARTReadChar;
  1335  000B8A  EE20 F004          	lfsr	2,4
  1336  000B8E  5180               	movf	setupFunctions@usart& (0+255),w,b
  1337  000B90  26D9               	addwf	fsr2l,f,c
  1338  000B92  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1339  000B94  22DA               	addwfc	fsr2h,f,c
  1340  000B96  0EBA               	movlw	low _USARTReadChar
  1341  000B98  6EDE               	movwf	postinc2,c
  1342  000B9A  0E13               	movlw	high _USARTReadChar
  1343  000B9C  6EDD               	movwf	postdec2,c
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;Application/../usart/UsartSetFunctions.h: 27:     usart->readString = USARTReadString;
  1347  000B9E  EE20 F006          	lfsr	2,6
  1348  000BA2  5180               	movf	setupFunctions@usart& (0+255),w,b
  1349  000BA4  26D9               	addwf	fsr2l,f,c
  1350  000BA6  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1351  000BA8  22DA               	addwfc	fsr2h,f,c
  1352  000BAA  0EAA               	movlw	low _USARTReadString
  1353  000BAC  6EDE               	movwf	postinc2,c
  1354  000BAE  0E0D               	movlw	high _USARTReadString
  1355  000BB0  6EDD               	movwf	postdec2,c
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;Application/../usart/UsartSetFunctions.h: 30:     usart->writeByte = USARTWriteByte;
  1359  000BB2  EE20 F008          	lfsr	2,8
  1360  000BB6  5180               	movf	setupFunctions@usart& (0+255),w,b
  1361  000BB8  26D9               	addwf	fsr2l,f,c
  1362  000BBA  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1363  000BBC  22DA               	addwfc	fsr2h,f,c
  1364  000BBE  0E96               	movlw	low _USARTWriteByte
  1365  000BC0  6EDE               	movwf	postinc2,c
  1366  000BC2  0E13               	movlw	high _USARTWriteByte
  1367  000BC4  6EDD               	movwf	postdec2,c
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;Application/../usart/UsartSetFunctions.h: 31:     usart->writeInt = USARTWriteInt;
  1371  000BC6  EE20 F00E          	lfsr	2,14
  1372  000BCA  5180               	movf	setupFunctions@usart& (0+255),w,b
  1373  000BCC  26D9               	addwf	fsr2l,f,c
  1374  000BCE  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1375  000BD0  22DA               	addwfc	fsr2h,f,c
  1376  000BD2  0E5C               	movlw	low _USARTWriteInt
  1377  000BD4  6EDE               	movwf	postinc2,c
  1378  000BD6  0E07               	movlw	high _USARTWriteInt
  1379  000BD8  6EDD               	movwf	postdec2,c
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;Application/../usart/UsartSetFunctions.h: 32:     usart->writeLine = USARTWriteLine;
  1383  000BDA  EE20 F00C          	lfsr	2,12
  1384  000BDE  5180               	movf	setupFunctions@usart& (0+255),w,b
  1385  000BE0  26D9               	addwf	fsr2l,f,c
  1386  000BE2  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1387  000BE4  22DA               	addwfc	fsr2h,f,c
  1388  000BE6  0E22               	movlw	low _USARTWriteLine
  1389  000BE8  6EDE               	movwf	postinc2,c
  1390  000BEA  0E13               	movlw	high _USARTWriteLine
  1391  000BEC  6EDD               	movwf	postdec2,c
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;Application/../usart/UsartSetFunctions.h: 33:     usart->writeString = USARTWriteString
      +                          ;
  1395  000BEE  EE20 F00A          	lfsr	2,10
  1396  000BF2  5180               	movf	setupFunctions@usart& (0+255),w,b
  1397  000BF4  26D9               	addwf	fsr2l,f,c
  1398  000BF6  5181               	movf	(setupFunctions@usart+1)& (0+255),w,b
  1399  000BF8  22DA               	addwfc	fsr2h,f,c
  1400  000BFA  0EF4               	movlw	low _USARTWriteString
  1401  000BFC  6EDE               	movwf	postinc2,c
  1402  000BFE  0E11               	movlw	high _USARTWriteString
  1403  000C00  6EDD               	movwf	postdec2,c
  1404                           
  1405                           ; BSR set to: 0
  1406  000C02  0012               	return		;funcret
  1407  000C04                     __end_of_setupFunctions:
  1408                           	opt callstack 0
  1409                           
  1410 ;; *************** function _enableInterrupts *****************
  1411 ;; Defined at:
  1412 ;;		line 38 in file "Application/../usart/UsartSetFunctions.h"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		None
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    5
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_USARTInit
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text11
  1441  0013F4                     __ptext11:
  1442                           	opt callstack 0
  1443  0013F4                     _enableInterrupts:
  1444                           	opt callstack 23
  1445                           
  1446                           ;Application/../usart/UsartSetFunctions.h: 39:     GIE = 1;
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;incstack = 0
  1450  0013F4  8EF2               	bsf	4082,7,c	;volatile
  1451                           
  1452                           ;Application/../usart/UsartSetFunctions.h: 40:     PEIE = 1;
  1453  0013F6  8CF2               	bsf	4082,6,c	;volatile
  1454                           
  1455                           ;Application/../usart/UsartSetFunctions.h: 41:     RCIE = 1;
  1456  0013F8  8A9D               	bsf	3997,5,c	;volatile
  1457  0013FA  0012               	return		;funcret
  1458  0013FC                     __end_of_enableInterrupts:
  1459                           	opt callstack 0
  1460                           
  1461 ;; *************** function _calculateSpbrg *****************
  1462 ;; Defined at:
  1463 ;;		line 43 in file "Application/../usart/UsartSetFunctions.h"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  baudRate        4   14[BANK0 ] long 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  bolum           4   22[BANK0 ] long 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  4   14[BANK0 ] long 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1477 ;;      Params:         0       4       0       0       0       0       0
  1478 ;;      Locals:         0       4       0       0       0       0       0
  1479 ;;      Temps:          0       4       0       0       0       0       0
  1480 ;;      Totals:         0      12       0       0       0       0       0
  1481 ;;Total ram usage:       12 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    6
  1484 ;; This function calls:
  1485 ;;		___aldiv
  1486 ;; This function is called by:
  1487 ;;		_USARTInit
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text12
  1492  000F28                     __ptext12:
  1493                           	opt callstack 0
  1494  000F28                     _calculateSpbrg:
  1495                           	opt callstack 22
  1496                           
  1497                           ;Application/../usart/UsartSetFunctions.h: 44:     long bolum = 16 * baudRate;
  1498                           
  1499                           ;incstack = 0
  1500  000F28  C08E  F092         	movff	calculateSpbrg@baudRate,??_calculateSpbrg
  1501  000F2C  C08F  F093         	movff	calculateSpbrg@baudRate+1,??_calculateSpbrg+1
  1502  000F30  C090  F094         	movff	calculateSpbrg@baudRate+2,??_calculateSpbrg+2
  1503  000F34  C091  F095         	movff	calculateSpbrg@baudRate+3,??_calculateSpbrg+3
  1504  000F38  0E04               	movlw	4
  1505  000F3A                     u2205:
  1506  000F3A  90D8               	bcf	status,0,c
  1507  000F3C  0100               	movlb	0	; () banked
  1508  000F3E  3792               	rlcf	??_calculateSpbrg& (0+255),f,b
  1509  000F40  3793               	rlcf	(??_calculateSpbrg+1)& (0+255),f,b
  1510  000F42  3794               	rlcf	(??_calculateSpbrg+2)& (0+255),f,b
  1511  000F44  3795               	rlcf	(??_calculateSpbrg+3)& (0+255),f,b
  1512  000F46  2EE8               	decfsz	wreg,f,c
  1513  000F48  D7F8               	goto	u2205
  1514  000F4A  C092  F096         	movff	??_calculateSpbrg,calculateSpbrg@bolum
  1515  000F4E  C093  F097         	movff	??_calculateSpbrg+1,calculateSpbrg@bolum+1
  1516  000F52  C094  F098         	movff	??_calculateSpbrg+2,calculateSpbrg@bolum+2
  1517  000F56  C095  F099         	movff	??_calculateSpbrg+3,calculateSpbrg@bolum+3
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;Application/../usart/UsartSetFunctions.h: 45:     return ((8000000 / bolum) - 1);
  1521  000F5A  0E00               	movlw	0
  1522  000F5C  6F80               	movwf	___aldiv@dividend& (0+255),b
  1523  000F5E  0E12               	movlw	18
  1524  000F60  6F81               	movwf	(___aldiv@dividend+1)& (0+255),b
  1525  000F62  0E7A               	movlw	122
  1526  000F64  6F82               	movwf	(___aldiv@dividend+2)& (0+255),b
  1527  000F66  0E00               	movlw	0
  1528  000F68  6F83               	movwf	(___aldiv@dividend+3)& (0+255),b
  1529  000F6A  C096  F084         	movff	calculateSpbrg@bolum,___aldiv@divisor
  1530  000F6E  C097  F085         	movff	calculateSpbrg@bolum+1,___aldiv@divisor+1
  1531  000F72  C098  F086         	movff	calculateSpbrg@bolum+2,___aldiv@divisor+2
  1532  000F76  C099  F087         	movff	calculateSpbrg@bolum+3,___aldiv@divisor+3
  1533  000F7A  ECA8  F004         	call	___aldiv	;wreg free
  1534  000F7E  0EFF               	movlw	255
  1535  000F80  0100               	movlb	0	; () banked
  1536  000F82  2580               	addwf	?___aldiv& (0+255),w,b
  1537  000F84  6F8E               	movwf	?_calculateSpbrg& (0+255),b
  1538  000F86  0EFF               	movlw	255
  1539  000F88  2181               	addwfc	(?___aldiv+1)& (0+255),w,b
  1540  000F8A  6F8F               	movwf	(?_calculateSpbrg+1)& (0+255),b
  1541  000F8C  0EFF               	movlw	255
  1542  000F8E  2182               	addwfc	(?___aldiv+2)& (0+255),w,b
  1543  000F90  6F90               	movwf	(?_calculateSpbrg+2)& (0+255),b
  1544  000F92  0EFF               	movlw	255
  1545  000F94  2183               	addwfc	(?___aldiv+3)& (0+255),w,b
  1546  000F96  6F91               	movwf	(?_calculateSpbrg+3)& (0+255),b
  1547                           
  1548                           ; BSR set to: 0
  1549  000F98  0012               	return		;funcret
  1550  000F9A                     __end_of_calculateSpbrg:
  1551                           	opt callstack 0
  1552                           
  1553 ;; *************** function ___aldiv *****************
  1554 ;; Defined at:
  1555 ;;		line 7 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  dividend        4    0[BANK0 ] long 
  1558 ;;  divisor         4    4[BANK0 ] long 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  quotient        4   10[BANK0 ] long 
  1561 ;;  sign            1    9[BANK0 ] unsigned char 
  1562 ;;  counter         1    8[BANK0 ] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  4    0[BANK0 ] long 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1572 ;;      Params:         0       8       0       0       0       0       0
  1573 ;;      Locals:         0       6       0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0
  1575 ;;      Totals:         0      14       0       0       0       0       0
  1576 ;;Total ram usage:       14 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    5
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_calculateSpbrg
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text13
  1587  000950                     __ptext13:
  1588                           	opt callstack 0
  1589  000950                     ___aldiv:
  1590                           	opt callstack 22
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;incstack = 0
  1594  000950  0E00               	movlw	0
  1595  000952  0100               	movlb	0	; () banked
  1596  000954  6F89               	movwf	___aldiv@sign& (0+255),b
  1597                           
  1598                           ; BSR set to: 0
  1599  000956  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1600  000958  D00A               	goto	l2235
  1601                           
  1602                           ; BSR set to: 0
  1603  00095A  1F87               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1604  00095C  1F86               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1605  00095E  1F85               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1606  000960  6D84               	negf	___aldiv@divisor& (0+255),b
  1607  000962  0E00               	movlw	0
  1608  000964  2385               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1609  000966  2386               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1610  000968  2387               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1611                           
  1612                           ; BSR set to: 0
  1613  00096A  0E01               	movlw	1
  1614  00096C  6F89               	movwf	___aldiv@sign& (0+255),b
  1615  00096E                     l2235:
  1616                           
  1617                           ; BSR set to: 0
  1618  00096E  AF83               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  1619  000970  D00A               	goto	l2241
  1620                           
  1621                           ; BSR set to: 0
  1622  000972  1F83               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1623  000974  1F82               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1624  000976  1F81               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1625  000978  6D80               	negf	___aldiv@dividend& (0+255),b
  1626  00097A  0E00               	movlw	0
  1627  00097C  2381               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1628  00097E  2382               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1629  000980  2383               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1630                           
  1631                           ; BSR set to: 0
  1632  000982  0E01               	movlw	1
  1633  000984  1B89               	xorwf	___aldiv@sign& (0+255),f,b
  1634  000986                     l2241:
  1635                           
  1636                           ; BSR set to: 0
  1637  000986  0E00               	movlw	0
  1638  000988  6F8A               	movwf	___aldiv@quotient& (0+255),b
  1639  00098A  0E00               	movlw	0
  1640  00098C  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
  1641  00098E  0E00               	movlw	0
  1642  000990  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
  1643  000992  0E00               	movlw	0
  1644  000994  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
  1645                           
  1646                           ; BSR set to: 0
  1647  000996  5184               	movf	___aldiv@divisor& (0+255),w,b
  1648  000998  1185               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1649  00099A  1186               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1650  00099C  1187               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  1651  00099E  B4D8               	btfsc	status,2,c
  1652  0009A0  D02A               	goto	l2263
  1653                           
  1654                           ; BSR set to: 0
  1655  0009A2  0E01               	movlw	1
  1656  0009A4  6F88               	movwf	___aldiv@counter& (0+255),b
  1657  0009A6  D006               	goto	l2249
  1658  0009A8                     l2247:
  1659                           
  1660                           ; BSR set to: 0
  1661  0009A8  90D8               	bcf	status,0,c
  1662  0009AA  3784               	rlcf	___aldiv@divisor& (0+255),f,b
  1663  0009AC  3785               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1664  0009AE  3786               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1665  0009B0  3787               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1666  0009B2  2B88               	incf	___aldiv@counter& (0+255),f,b
  1667  0009B4                     l2249:
  1668                           
  1669                           ; BSR set to: 0
  1670  0009B4  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1671  0009B6  D7F8               	goto	l2247
  1672  0009B8                     u2100:
  1673                           
  1674                           ; BSR set to: 0
  1675  0009B8  90D8               	bcf	status,0,c
  1676  0009BA  378A               	rlcf	___aldiv@quotient& (0+255),f,b
  1677  0009BC  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1678  0009BE  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1679  0009C0  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1680                           
  1681                           ; BSR set to: 0
  1682  0009C2  5184               	movf	___aldiv@divisor& (0+255),w,b
  1683  0009C4  5D80               	subwf	___aldiv@dividend& (0+255),w,b
  1684  0009C6  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1685  0009C8  5981               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1686  0009CA  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1687  0009CC  5982               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1688  0009CE  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1689  0009D0  5983               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1690  0009D2  A0D8               	btfss	status,0,c
  1691  0009D4  D009               	goto	l2259
  1692                           
  1693                           ; BSR set to: 0
  1694  0009D6  5184               	movf	___aldiv@divisor& (0+255),w,b
  1695  0009D8  5F80               	subwf	___aldiv@dividend& (0+255),f,b
  1696  0009DA  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1697  0009DC  5B81               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  1698  0009DE  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1699  0009E0  5B82               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  1700  0009E2  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1701  0009E4  5B83               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  1702                           
  1703                           ; BSR set to: 0
  1704  0009E6  818A               	bsf	___aldiv@quotient& (0+255),0,b
  1705  0009E8                     l2259:
  1706                           
  1707                           ; BSR set to: 0
  1708  0009E8  90D8               	bcf	status,0,c
  1709  0009EA  3387               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  1710  0009EC  3386               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  1711  0009EE  3385               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  1712  0009F0  3384               	rrcf	___aldiv@divisor& (0+255),f,b
  1713                           
  1714                           ; BSR set to: 0
  1715  0009F2  2F88               	decfsz	___aldiv@counter& (0+255),f,b
  1716  0009F4  D7E1               	goto	u2100
  1717  0009F6                     l2263:
  1718                           
  1719                           ; BSR set to: 0
  1720  0009F6  5189               	movf	___aldiv@sign& (0+255),w,b
  1721  0009F8  B4D8               	btfsc	status,2,c
  1722  0009FA  D008               	goto	l2267
  1723                           
  1724                           ; BSR set to: 0
  1725  0009FC  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1726  0009FE  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1727  000A00  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1728  000A02  6D8A               	negf	___aldiv@quotient& (0+255),b
  1729  000A04  0E00               	movlw	0
  1730  000A06  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1731  000A08  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1732  000A0A  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1733  000A0C                     l2267:
  1734                           
  1735                           ; BSR set to: 0
  1736  000A0C  C08A  F080         	movff	___aldiv@quotient,?___aldiv
  1737  000A10  C08B  F081         	movff	___aldiv@quotient+1,?___aldiv+1
  1738  000A14  C08C  F082         	movff	___aldiv@quotient+2,?___aldiv+2
  1739  000A18  C08D  F083         	movff	___aldiv@quotient+3,?___aldiv+3
  1740                           
  1741                           ; BSR set to: 0
  1742  000A1C  0012               	return		;funcret
  1743  000A1E                     __end_of___aldiv:
  1744                           	opt callstack 0
  1745                           
  1746 ;; *************** function _setPortInputsOutputs *****************
  1747 ;; Defined at:
  1748 ;;		line 20 in file "./Settings.h"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1762 ;;      Params:         0       0       0       0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0
  1765 ;;      Totals:         0       0       0       0       0       0       0
  1766 ;;Total ram usage:        0 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    5
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text14
  1777  0013EA                     __ptext14:
  1778                           	opt callstack 0
  1779  0013EA                     _setPortInputsOutputs:
  1780                           	opt callstack 25
  1781                           
  1782                           ;./Settings.h: 21:     TRISB = 0x00;
  1783                           
  1784                           ; BSR set to: 0
  1785                           ;incstack = 0
  1786  0013EA  0E00               	movlw	0
  1787  0013EC  6E93               	movwf	3987,c	;volatile
  1788                           
  1789                           ;./Settings.h: 23:     TRISD = 0x03;
  1790  0013EE  0E03               	movlw	3
  1791  0013F0  6E95               	movwf	3989,c	;volatile
  1792  0013F2  0012               	return		;funcret
  1793  0013F4                     __end_of_setPortInputsOutputs:
  1794                           	opt callstack 0
  1795                           
  1796 ;; *************** function _loop *****************
  1797 ;; Defined at:
  1798 ;;		line 33 in file "Application/Application.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1812 ;;      Params:         0       0       0       0       0       0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:   10
  1819 ;; This function calls:
  1820 ;;		_chectButtons
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text15
  1827  0013AA                     __ptext15:
  1828                           	opt callstack 0
  1829  0013AA                     _loop:
  1830                           	opt callstack 20
  1831                           
  1832                           ;Application/Application.c: 34:     chectButtons(&controller);
  1833                           
  1834                           ;incstack = 0
  1835  0013AA  0EE5               	movlw	low _controller
  1836  0013AC  0100               	movlb	0	; () banked
  1837  0013AE  6F9A               	movwf	chectButtons@controller& (0+255),b
  1838  0013B0  0E00               	movlw	high _controller
  1839  0013B2  6F9B               	movwf	(chectButtons@controller+1)& (0+255),b
  1840  0013B4  EC5A  F007         	call	_chectButtons	;wreg free
  1841  0013B8  0012               	return		;funcret
  1842  0013BA                     __end_of_loop:
  1843                           	opt callstack 0
  1844                           
  1845 ;; *************** function _chectButtons *****************
  1846 ;; Defined at:
  1847 ;;		line 46 in file "Application/../Button/InputController/InputControllerFunctions.h"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  controller      2   26[BANK0 ] PTR struct .
  1850 ;;		 -> controller(23), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  buton           2   32[BANK0 ] PTR struct .
  1853 ;;		 -> initInputController@button2(8), initInputController@button1(8), 
  1854 ;;  i               2   34[BANK0 ] int 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1864 ;;      Params:         0       2       0       0       0       0       0
  1865 ;;      Locals:         0       4       0       0       0       0       0
  1866 ;;      Temps:          0       4       0       0       0       0       0
  1867 ;;      Totals:         0      10       0       0       0       0       0
  1868 ;;Total ram usage:       10 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    9
  1871 ;; This function calls:
  1872 ;;		_handleButtonEvents
  1873 ;; This function is called by:
  1874 ;;		_initInputControllerDefaultFunction
  1875 ;;		_loop
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text16
  1880  000EB4                     __ptext16:
  1881                           	opt callstack 0
  1882  000EB4                     _chectButtons:
  1883                           	opt callstack 20
  1884                           
  1885                           ;Application/../Button/InputController/InputControllerFunctions.h: 47:     int i;;Applic
      +                          ation/../Button/InputController/InputControllerFunctions.h: 50:     for (i = 0; i < cont
      +                          roller->buttonSize; i++) {
  1886                           
  1887                           ;incstack = 0
  1888  000EB4  0E00               	movlw	0
  1889  000EB6  0100               	movlb	0	; () banked
  1890  000EB8  6FA3               	movwf	(chectButtons@i+1)& (0+255),b
  1891  000EBA  0E00               	movlw	0
  1892  000EBC  6FA2               	movwf	chectButtons@i& (0+255),b
  1893  000EBE  D022               	goto	l2329
  1894  000EC0                     l2323:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;Application/../Button/InputController/InputControllerFunctions.h: 52:         Button *b
      +                          uton = controller->buttons[i];
  1898  000EC0  C0A2  F09C         	movff	chectButtons@i,??_chectButtons
  1899  000EC4  C0A3  F09D         	movff	chectButtons@i+1,??_chectButtons+1
  1900  000EC8  90D8               	bcf	status,0,c
  1901  000ECA  379C               	rlcf	??_chectButtons& (0+255),f,b
  1902  000ECC  379D               	rlcf	(??_chectButtons+1)& (0+255),f,b
  1903  000ECE  C09A  F09E         	movff	chectButtons@controller,??_chectButtons+2
  1904  000ED2  C09B  F09F         	movff	chectButtons@controller+1,??_chectButtons+3
  1905  000ED6  519C               	movf	??_chectButtons& (0+255),w,b
  1906  000ED8  279E               	addwf	(??_chectButtons+2)& (0+255),f,b
  1907  000EDA  519D               	movf	(??_chectButtons+1)& (0+255),w,b
  1908  000EDC  239F               	addwfc	(??_chectButtons+3)& (0+255),f,b
  1909  000EDE  0E01               	movlw	1
  1910  000EE0  259E               	addwf	(??_chectButtons+2)& (0+255),w,b
  1911  000EE2  6ED9               	movwf	fsr2l,c
  1912  000EE4  0E00               	movlw	0
  1913  000EE6  219F               	addwfc	(??_chectButtons+3)& (0+255),w,b
  1914  000EE8  6EDA               	movwf	fsr2h,c
  1915  000EEA  CFDE F0A0          	movff	postinc2,chectButtons@buton
  1916  000EEE  CFDD F0A1          	movff	postdec2,chectButtons@buton+1
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;Application/../Button/InputController/InputControllerFunctions.h: 53:         handleBut
      +                          tonEvents(buton);
  1920  000EF2  C0A0  F096         	movff	chectButtons@buton,handleButtonEvents@buton
  1921  000EF6  C0A1  F097         	movff	chectButtons@buton+1,handleButtonEvents@buton+1
  1922  000EFA  EC02  F006         	call	_handleButtonEvents	;wreg free
  1923                           
  1924                           ;Application/../Button/InputController/InputControllerFunctions.h: 55:     }
  1925  000EFE  0100               	movlb	0	; () banked
  1926  000F00  4BA2               	infsnz	chectButtons@i& (0+255),f,b
  1927  000F02  2BA3               	incf	(chectButtons@i+1)& (0+255),f,b
  1928  000F04                     l2329:
  1929                           
  1930                           ; BSR set to: 0
  1931  000F04  C09A  FFD9         	movff	chectButtons@controller,fsr2l
  1932  000F08  C09B  FFDA         	movff	chectButtons@controller+1,fsr2h
  1933  000F0C  50DF               	movf	indf2,w,c
  1934  000F0E  6F9C               	movwf	??_chectButtons& (0+255),b
  1935  000F10  6B9D               	clrf	(??_chectButtons+1)& (0+255),b
  1936  000F12  519C               	movf	??_chectButtons& (0+255),w,b
  1937  000F14  5DA2               	subwf	chectButtons@i& (0+255),w,b
  1938  000F16  51A3               	movf	(chectButtons@i+1)& (0+255),w,b
  1939  000F18  0A80               	xorlw	128
  1940  000F1A  6F9E               	movwf	(??_chectButtons+2)& (0+255),b
  1941  000F1C  519D               	movf	(??_chectButtons+1)& (0+255),w,b
  1942  000F1E  0A80               	xorlw	128
  1943  000F20  599E               	subwfb	(??_chectButtons+2)& (0+255),w,b
  1944  000F22  B0D8               	btfsc	status,0,c
  1945  000F24  0012               	return	
  1946  000F26  D7CC               	goto	l2323
  1947  000F28                     __end_of_chectButtons:
  1948                           	opt callstack 0
  1949                           
  1950 ;; *************** function _handleButtonEvents *****************
  1951 ;; Defined at:
  1952 ;;		line 25 in file "Application/../Button/InputController/InputControllerFunctions.h"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  buton           2   22[BANK0 ] PTR struct .
  1955 ;;		 -> initInputController@button2(8), initInputController@button1(8), 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1967 ;;      Params:         0       2       0       0       0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0
  1969 ;;      Temps:          0       2       0       0       0       0       0
  1970 ;;      Totals:         0       4       0       0       0       0       0
  1971 ;;Total ram usage:        4 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    8
  1974 ;; This function calls:
  1975 ;;		_btn1Func
  1976 ;;		_btn1getValue
  1977 ;;		_btn2Func
  1978 ;;		_btn2getValue
  1979 ;; This function is called by:
  1980 ;;		_chectButtons
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text17
  1985  000C04                     __ptext17:
  1986                           	opt callstack 0
  1987  000C04                     _handleButtonEvents:
  1988                           	opt callstack 20
  1989                           
  1990                           ;Application/../Button/InputController/InputControllerFunctions.h: 27:     if (buton->ge
      +                          tValue()) {
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;incstack = 0
  1994  000C04  0100               	movlb	0	; () banked
  1995  000C06  EE20 F004          	lfsr	2,4
  1996  000C0A  5196               	movf	handleButtonEvents@buton& (0+255),w,b
  1997  000C0C  26D9               	addwf	fsr2l,f,c
  1998  000C0E  5197               	movf	(handleButtonEvents@buton+1)& (0+255),w,b
  1999  000C10  22DA               	addwfc	fsr2h,f,c
  2000  000C12  D801               	call	u2138
  2001  000C14  D00A               	goto	u2139
  2002  000C16                     u2138:
  2003  000C16  0005               	push	
  2004  000C18  6EFA               	movwf	pclath,c
  2005  000C1A  50DE               	movf	postinc2,w,c
  2006  000C1C  6EFD               	movwf	tosl,c
  2007  000C1E  50DE               	movf	postinc2,w,c
  2008  000C20  6EFE               	movwf	tosh,c
  2009  000C22  50F8               	movf	tblptru,w,c
  2010  000C24  6EFF               	movwf	tosu,c
  2011  000C26  50FA               	movf	pclath,w,c
  2012  000C28  0012               	return		;indir
  2013  000C2A                     u2139:
  2014  000C2A  0100               	movlb	0	; () banked
  2015  000C2C  5180               	movf	?_btn2getValue& (0+255),w,b
  2016  000C2E  1181               	iorwf	(?_btn2getValue+1)& (0+255),w,b
  2017  000C30  B4D8               	btfsc	status,2,c
  2018  000C32  D028               	goto	l2279
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;Application/../Button/InputController/InputControllerFunctions.h: 29:         if (buton
      +                          ->isPressed == 0) {
  2022  000C34  EE20 F002          	lfsr	2,2
  2023  000C38  5196               	movf	handleButtonEvents@buton& (0+255),w,b
  2024  000C3A  26D9               	addwf	fsr2l,f,c
  2025  000C3C  5197               	movf	(handleButtonEvents@buton+1)& (0+255),w,b
  2026  000C3E  22DA               	addwfc	fsr2h,f,c
  2027  000C40  50DE               	movf	postinc2,w,c
  2028  000C42  10DE               	iorwf	postinc2,w,c
  2029  000C44  A4D8               	btfss	status,2,c
  2030  000C46  D012               	goto	u2169
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;Application/../Button/InputController/InputControllerFunctions.h: 30:             buton
      +                          ->onPressed();
  2034  000C48  EE20 F006          	lfsr	2,6
  2035  000C4C  5196               	movf	handleButtonEvents@buton& (0+255),w,b
  2036  000C4E  26D9               	addwf	fsr2l,f,c
  2037  000C50  5197               	movf	(handleButtonEvents@buton+1)& (0+255),w,b
  2038  000C52  22DA               	addwfc	fsr2h,f,c
  2039  000C54  D801               	call	u2168
  2040  000C56  D00A               	goto	u2169
  2041  000C58                     u2168:
  2042  000C58  0005               	push	
  2043  000C5A  6EFA               	movwf	pclath,c
  2044  000C5C  50DE               	movf	postinc2,w,c
  2045  000C5E  6EFD               	movwf	tosl,c
  2046  000C60  50DE               	movf	postinc2,w,c
  2047  000C62  6EFE               	movwf	tosh,c
  2048  000C64  50F8               	movf	tblptru,w,c
  2049  000C66  6EFF               	movwf	tosu,c
  2050  000C68  50FA               	movf	pclath,w,c
  2051  000C6A  0012               	return		;indir
  2052  000C6C                     u2169:
  2053                           
  2054                           ;Application/../Button/InputController/InputControllerFunctions.h: 34:         buton->is
      +                          Pressed = 1;
  2055  000C6C  0100               	movlb	0	; () banked
  2056  000C6E  EE20 F002          	lfsr	2,2
  2057  000C72  5196               	movf	handleButtonEvents@buton& (0+255),w,b
  2058  000C74  26D9               	addwf	fsr2l,f,c
  2059  000C76  5197               	movf	(handleButtonEvents@buton+1)& (0+255),w,b
  2060  000C78  22DA               	addwfc	fsr2h,f,c
  2061  000C7A  0E01               	movlw	1
  2062  000C7C  6EDE               	movwf	postinc2,c
  2063  000C7E  0E00               	movlw	0
  2064  000C80  6EDD               	movwf	postdec2,c
  2065                           
  2066                           ;Application/../Button/InputController/InputControllerFunctions.h: 37:     } else {
  2067  000C82  0012               	return	
  2068  000C84                     l2279:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;Application/../Button/InputController/InputControllerFunctions.h: 38:         buton->is
      +                          Pressed = 0;
  2072  000C84  EE20 F002          	lfsr	2,2
  2073  000C88  5196               	movf	handleButtonEvents@buton& (0+255),w,b
  2074  000C8A  26D9               	addwf	fsr2l,f,c
  2075  000C8C  5197               	movf	(handleButtonEvents@buton+1)& (0+255),w,b
  2076  000C8E  22DA               	addwfc	fsr2h,f,c
  2077  000C90  0E00               	movlw	0
  2078  000C92  6EDE               	movwf	postinc2,c
  2079  000C94  0E00               	movlw	0
  2080  000C96  6EDD               	movwf	postdec2,c
  2081                           
  2082                           ; BSR set to: 0
  2083  000C98  0012               	return		;funcret
  2084  000C9A                     __end_of_handleButtonEvents:
  2085                           	opt callstack 0
  2086                           
  2087 ;; *************** function _btn1getValue *****************
  2088 ;; Defined at:
  2089 ;;		line 31 in file "Application/../Button/InputController/../ButonlarSpesific/Buton1.h"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  2    0[BANK0 ] int 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2103 ;;      Params:         0       2       0       0       0       0       0
  2104 ;;      Locals:         0       0       0       0       0       0       0
  2105 ;;      Temps:          0       1       0       0       0       0       0
  2106 ;;      Totals:         0       3       0       0       0       0       0
  2107 ;;Total ram usage:        3 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    5
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_initInputController
  2114 ;;		_handleButtonEvents
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text18
  2119  00133C                     __ptext18:
  2120                           	opt callstack 0
  2121  00133C                     _btn1getValue:
  2122                           	opt callstack 22
  2123                           
  2124                           ;Application/../Button/InputController/../ButonlarSpesific/Buton1.h: 32:     return PORT
      +                          Dbits.RD0;
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;incstack = 0
  2128  00133C  A083               	btfss	3971,0,c	;volatile
  2129  00133E  D004               	goto	u2050
  2130  001340  0100               	movlb	0	; () banked
  2131  001342  6B82               	clrf	??_btn1getValue& (0+255),b
  2132  001344  2B82               	incf	??_btn1getValue& (0+255),f,b
  2133  001346  D002               	goto	u2058
  2134  001348                     u2050:
  2135  001348  0100               	movlb	0	; () banked
  2136  00134A  6B82               	clrf	??_btn1getValue& (0+255),b
  2137  00134C                     u2058:
  2138  00134C  5182               	movf	??_btn1getValue& (0+255),w,b
  2139  00134E  6F80               	movwf	?_btn1getValue& (0+255),b
  2140  001350  6B81               	clrf	(?_btn1getValue+1)& (0+255),b
  2141                           
  2142                           ; BSR set to: 0
  2143  001352  0012               	return		;funcret
  2144  001354                     __end_of_btn1getValue:
  2145                           	opt callstack 0
  2146                           
  2147 ;; *************** function _btn2getValue *****************
  2148 ;; Defined at:
  2149 ;;		line 23 in file "Application/../Button/InputController/../ButonlarSpesific/Buton2.h"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  2    0[BANK0 ] int 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2163 ;;      Params:         0       2       0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0
  2165 ;;      Temps:          0       1       0       0       0       0       0
  2166 ;;      Totals:         0       3       0       0       0       0       0
  2167 ;;Total ram usage:        3 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    5
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_initInputController
  2174 ;;		_handleButtonEvents
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text19
  2179  001354                     __ptext19:
  2180                           	opt callstack 0
  2181  001354                     _btn2getValue:
  2182                           	opt callstack 22
  2183                           
  2184                           ;Application/../Button/InputController/../ButonlarSpesific/Buton2.h: 24:     return PORT
      +                          Dbits.RD1;
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;incstack = 0
  2188  001354  A283               	btfss	3971,1,c	;volatile
  2189  001356  D004               	goto	u2060
  2190  001358  0100               	movlb	0	; () banked
  2191  00135A  6B82               	clrf	??_btn2getValue& (0+255),b
  2192  00135C  2B82               	incf	??_btn2getValue& (0+255),f,b
  2193  00135E  D002               	goto	u2068
  2194  001360                     u2060:
  2195  001360  0100               	movlb	0	; () banked
  2196  001362  6B82               	clrf	??_btn2getValue& (0+255),b
  2197  001364                     u2068:
  2198  001364  5182               	movf	??_btn2getValue& (0+255),w,b
  2199  001366  6F80               	movwf	?_btn2getValue& (0+255),b
  2200  001368  6B81               	clrf	(?_btn2getValue+1)& (0+255),b
  2201                           
  2202                           ; BSR set to: 0
  2203  00136A  0012               	return		;funcret
  2204  00136C                     __end_of_btn2getValue:
  2205                           	opt callstack 0
  2206                           
  2207 ;; *************** function _btn1Func *****************
  2208 ;; Defined at:
  2209 ;;		line 20 in file "Application/../Button/InputController/../ButonlarSpesific/Buton1.h"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  deger           2   20[BANK0 ] int 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2223 ;;      Params:         0       0       0       0       0       0       0
  2224 ;;      Locals:         0       2       0       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0       0       0
  2226 ;;      Totals:         0       2       0       0       0       0       0
  2227 ;;Total ram usage:        2 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    7
  2230 ;; This function calls:
  2231 ;;		_USARTWriteInt
  2232 ;;		_USARTWriteString
  2233 ;; This function is called by:
  2234 ;;		_initInputController
  2235 ;;		_handleButtonEvents
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text20
  2240  00107C                     __ptext20:
  2241                           	opt callstack 0
  2242  00107C                     _btn1Func:
  2243                           	opt callstack 20
  2244                           
  2245                           ;Application/../Button/InputController/../ButonlarSpesific/Buton1.h: 21:     LATB = LATB
      +                           << 1;
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;incstack = 0
  2249  00107C  508A               	movf	3978,w,c	;volatile
  2250  00107E  248A               	addwf	3978,w,c	;volatile
  2251  001080  6E8A               	movwf	3978,c	;volatile
  2252                           
  2253                           ;Application/../Button/InputController/../ButonlarSpesific/Buton1.h: 22:     int deger =
      +                           LATB;
  2254  001082  CF8A F094          	movff	3978,btn1Func@deger	;volatile
  2255  001086  0100               	movlb	0	; () banked
  2256  001088  6B95               	clrf	(btn1Func@deger+1)& (0+255),b
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;Application/../Button/InputController/../ButonlarSpesific/Buton1.h: 23:     bUsart->wri
      +                          teInt(deger,2);
  2260  00108A  C094  F088         	movff	btn1Func@deger,USARTWriteInt@val
  2261  00108E  C095  F089         	movff	btn1Func@deger+1,USARTWriteInt@val+1
  2262  001092  0E02               	movlw	2
  2263  001094  6F8A               	movwf	USARTWriteInt@field_length& (0+255),b
  2264  001096  EE20 F00E          	lfsr	2,14
  2265  00109A  5064               	movf	_bUsart,w,c
  2266  00109C  26D9               	addwf	fsr2l,f,c
  2267  00109E  5065               	movf	_bUsart+1,w,c
  2268  0010A0  22DA               	addwfc	fsr2h,f,c
  2269  0010A2  D801               	call	u2038
  2270  0010A4  D00A               	goto	u2039
  2271  0010A6                     u2038:
  2272  0010A6  0005               	push	
  2273  0010A8  6EFA               	movwf	pclath,c
  2274  0010AA  50DE               	movf	postinc2,w,c
  2275  0010AC  6EFD               	movwf	tosl,c
  2276  0010AE  50DE               	movf	postinc2,w,c
  2277  0010B0  6EFE               	movwf	tosh,c
  2278  0010B2  50F8               	movf	tblptru,w,c
  2279  0010B4  6EFF               	movwf	tosu,c
  2280  0010B6  50FA               	movf	pclath,w,c
  2281  0010B8  0012               	return		;indir
  2282  0010BA                     u2039:
  2283                           
  2284                           ;Application/../Button/InputController/../ButonlarSpesific/Buton1.h: 24:     bUsart->wri
      +                          teString("\r\n");
  2285  0010BA  0E1D               	movlw	low STR_1
  2286  0010BC  0100               	movlb	0	; () banked
  2287  0010BE  6F80               	movwf	USARTWriteString@str& (0+255),b
  2288  0010C0  0E06               	movlw	high STR_1
  2289  0010C2  6F81               	movwf	(USARTWriteString@str+1)& (0+255),b
  2290  0010C4  EE20 F00A          	lfsr	2,10
  2291  0010C8  5064               	movf	_bUsart,w,c
  2292  0010CA  26D9               	addwf	fsr2l,f,c
  2293  0010CC  5065               	movf	_bUsart+1,w,c
  2294  0010CE  22DA               	addwfc	fsr2h,f,c
  2295  0010D0  D801               	call	u2048
  2296  0010D2  0012               	return	
  2297  0010D4                     u2048:
  2298  0010D4  0005               	push	
  2299  0010D6  6EFA               	movwf	pclath,c
  2300  0010D8  50DE               	movf	postinc2,w,c
  2301  0010DA  6EFD               	movwf	tosl,c
  2302  0010DC  50DE               	movf	postinc2,w,c
  2303  0010DE  6EFE               	movwf	tosh,c
  2304  0010E0  50F8               	movf	tblptru,w,c
  2305  0010E2  6EFF               	movwf	tosu,c
  2306  0010E4  50FA               	movf	pclath,w,c
  2307  0010E6  0012               	return		;indir
  2308  0010E8                     __end_of_btn1Func:
  2309                           	opt callstack 0
  2310                           
  2311 ;; *************** function _btn2Func *****************
  2312 ;; Defined at:
  2313 ;;		line 17 in file "Application/../Button/InputController/../ButonlarSpesific/Buton2.h"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2, status,0
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2327 ;;      Params:         0       0       0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0
  2330 ;;      Totals:         0       0       0       0       0       0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    5
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_initInputController
  2338 ;;		_handleButtonEvents
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text21
  2343  0013FC                     __ptext21:
  2344                           	opt callstack 0
  2345  0013FC                     _btn2Func:
  2346                           	opt callstack 22
  2347                           
  2348                           ;Application/../Button/InputController/../ButonlarSpesific/Buton2.h: 19:     LATB = LATB
      +                           >> 1;
  2349                           
  2350                           ;incstack = 0
  2351  0013FC  90D8               	bcf	status,0,c
  2352  0013FE  308A               	rrcf	3978,w,c	;volatile
  2353  001400  6E8A               	movwf	3978,c	;volatile
  2354  001402  0012               	return		;funcret
  2355  001404                     __end_of_btn2Func:
  2356                           	opt callstack 0
  2357                           
  2358 ;; *************** function _USARTWriteString *****************
  2359 ;; Defined at:
  2360 ;;		line 65 in file "Application/../usart/UsartFunctions.h"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  2363 ;;		 -> STR_5(1), STR_4(3), STR_1(3), 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2375 ;;      Params:         0       2       0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0
  2378 ;;      Totals:         0       2       0       0       0       0       0
  2379 ;;Total ram usage:        2 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    5
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_setupFunctions
  2386 ;;		_btn1Func
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text22
  2391  0011F4                     __ptext22:
  2392                           	opt callstack 0
  2393  0011F4                     _USARTWriteString:
  2394                           	opt callstack 0
  2395                           
  2396                           ;Skip over the trampoline to the duplicate function for level 2
  2397  0011F4  B266               	btfsc	btemp,1,c
  2398  0011F6  EF42  F009         	goto	i2_USARTWriteString
  2399  0011FA                     _USARTWriteString$intlevel0:
  2400                           	opt callstack 21
  2401                           
  2402                           ;Application/../usart/UsartFunctions.h: 66:     while ((*str) != '\0') {
  2403                           
  2404                           ;incstack = 0
  2405  0011FA  D00C               	goto	l2155
  2406  0011FC                     l116:
  2407  0011FC  A89E               	btfss	3998,4,c	;volatile
  2408  0011FE  D7FE               	goto	l116
  2409                           
  2410                           ;Application/../usart/UsartFunctions.h: 71:         TXREG = (*str);
  2411  001200  C080  FFF6         	movff	USARTWriteString@str,tblptrl
  2412  001204  C081  FFF7         	movff	USARTWriteString@str+1,tblptrh
  2413  001208                     	if	0	;tblptru may be non-zero
  2414  001208                     	endif
  2415  001208                     	if	0	;tblptru may be non-zero
  2416  001208                     	endif
  2417  001208  0008               	tblrd		*
  2418  00120A  CFF5 FFAD          	movff	tablat,4013	;volatile
  2419                           
  2420                           ;Application/../usart/UsartFunctions.h: 74:         str++;
  2421  00120E  0100               	movlb	0	; () banked
  2422  001210  4B80               	infsnz	USARTWriteString@str& (0+255),f,b
  2423  001212  2B81               	incf	(USARTWriteString@str+1)& (0+255),f,b
  2424  001214                     l2155:
  2425                           
  2426                           ;Application/../usart/UsartFunctions.h: 66:     while ((*str) != '\0') {
  2427  001214  C080  FFF6         	movff	USARTWriteString@str,tblptrl
  2428  001218  C081  FFF7         	movff	USARTWriteString@str+1,tblptrh
  2429  00121C                     	if	0	;tblptru may be non-zero
  2430  00121C                     	endif
  2431  00121C                     	if	0	;tblptru may be non-zero
  2432  00121C                     	endif
  2433  00121C  0008               	tblrd		*
  2434  00121E  50F5               	movf	tablat,w,c
  2435  001220  0900               	iorlw	0
  2436  001222  B4D8               	btfsc	status,2,c
  2437  001224  0012               	return	
  2438  001226  D7EA               	goto	l116
  2439  001228                     __end_of_USARTWriteString:
  2440                           	opt callstack 0
  2441                           
  2442 ;; *************** function _USARTWriteInt *****************
  2443 ;; Defined at:
  2444 ;;		line 92 in file "Application/../usart/UsartFunctions.h"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  val             2    8[BANK0 ] int 
  2447 ;;  field_length    1   10[BANK0 ] unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  str             5   11[BANK0 ] unsigned char [5]
  2450 ;;  i               2   18[BANK0 ] int 
  2451 ;;  j               2   16[BANK0 ] int 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2461 ;;      Params:         0       3       0       0       0       0       0
  2462 ;;      Locals:         0       9       0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0
  2464 ;;      Totals:         0      12       0       0       0       0       0
  2465 ;;Total ram usage:       12 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    6
  2468 ;; This function calls:
  2469 ;;		_USARTWriteByte
  2470 ;;		___awdiv
  2471 ;;		___awmod
  2472 ;; This function is called by:
  2473 ;;		_setupFunctions
  2474 ;;		_btn1Func
  2475 ;;		_usartOccured
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text23
  2480  00075C                     __ptext23:
  2481                           	opt callstack 0
  2482  00075C                     _USARTWriteInt:
  2483                           	opt callstack 0
  2484                           
  2485                           ;Skip over the trampoline to the duplicate function for level 2
  2486  00075C  B266               	btfsc	btemp,1,c
  2487  00075E  EF2F  F004         	goto	i2_USARTWriteInt
  2488  000762                     _USARTWriteInt$intlevel0:
  2489                           	opt callstack 20
  2490                           
  2491                           ;Application/../usart/UsartFunctions.h: 93:     if (val < 0) {
  2492                           
  2493                           ;incstack = 0
  2494  000762  0100               	movlb	0	; () banked
  2495  000764  AF89               	btfss	(USARTWriteInt@val+1)& (0+255),7,b
  2496  000766  D008               	goto	l2163
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;Application/../usart/UsartFunctions.h: 94:         USARTWriteByte('-');
  2500  000768  0E2D               	movlw	45
  2501  00076A  ECCB  F009         	call	_USARTWriteByte
  2502                           
  2503                           ;Application/../usart/UsartFunctions.h: 95:         val = (val * (-1));
  2504  00076E  0100               	movlb	0	; () banked
  2505  000770  6D88               	negf	USARTWriteInt@val& (0+255),b
  2506  000772  1F89               	comf	(USARTWriteInt@val+1)& (0+255),f,b
  2507  000774  B0D8               	btfsc	status,0,c
  2508  000776  2B89               	incf	(USARTWriteInt@val+1)& (0+255),f,b
  2509  000778                     l2163:
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;Application/../usart/UsartFunctions.h: 99:     char str[5] = {0, 0, 0, 0, 0};
  2513  000778  EE20  F04D         	lfsr	2,USARTWriteInt@F2999
  2514  00077C  EE10  F08B         	lfsr	1,USARTWriteInt@str
  2515  000780  0E04               	movlw	4
  2516  000782                     u1961:
  2517  000782  CFDB FFE3          	movff	plusw2,plusw1
  2518  000786  06E8               	decf	wreg,f,c
  2519  000788  E2FC               	bc	u1961
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;Application/../usart/UsartFunctions.h: 100:     int i = 4, j = 0;
  2523  00078A  0E00               	movlw	0
  2524  00078C  6F93               	movwf	(USARTWriteInt@i+1)& (0+255),b
  2525  00078E  0E04               	movlw	4
  2526  000790  6F92               	movwf	USARTWriteInt@i& (0+255),b
  2527                           
  2528                           ; BSR set to: 0
  2529  000792  0E00               	movlw	0
  2530  000794  6F91               	movwf	(USARTWriteInt@j+1)& (0+255),b
  2531  000796  0E00               	movlw	0
  2532  000798  6F90               	movwf	USARTWriteInt@j& (0+255),b
  2533                           
  2534                           ;Application/../usart/UsartFunctions.h: 101:     while (val) {
  2535  00079A  D025               	goto	l2175
  2536  00079C                     l2169:
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;Application/../usart/UsartFunctions.h: 102:         str[i] = val % 10;
  2540  00079C  0E8B               	movlw	low USARTWriteInt@str
  2541  00079E  2592               	addwf	USARTWriteInt@i& (0+255),w,b
  2542  0007A0  6ED9               	movwf	fsr2l,c
  2543  0007A2  0E00               	movlw	high USARTWriteInt@str
  2544  0007A4  2193               	addwfc	(USARTWriteInt@i+1)& (0+255),w,b
  2545  0007A6  6EDA               	movwf	fsr2h,c
  2546  0007A8  C088  F080         	movff	USARTWriteInt@val,___awmod@dividend
  2547  0007AC  C089  F081         	movff	USARTWriteInt@val+1,___awmod@dividend+1
  2548  0007B0  0E00               	movlw	0
  2549  0007B2  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  2550  0007B4  0E0A               	movlw	10
  2551  0007B6  6F82               	movwf	___awmod@divisor& (0+255),b
  2552  0007B8  ECCD  F007         	call	___awmod	;wreg free
  2553  0007BC  0100               	movlb	0	; () banked
  2554  0007BE  5180               	movf	?___awmod& (0+255),w,b
  2555  0007C0  6EDF               	movwf	indf2,c
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;Application/../usart/UsartFunctions.h: 103:         val = val / 10;
  2559  0007C2  C088  F080         	movff	USARTWriteInt@val,___awdiv@dividend
  2560  0007C6  C089  F081         	movff	USARTWriteInt@val+1,___awdiv@dividend+1
  2561  0007CA  0E00               	movlw	0
  2562  0007CC  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2563  0007CE  0E0A               	movlw	10
  2564  0007D0  6F82               	movwf	___awdiv@divisor& (0+255),b
  2565  0007D2  EC92  F006         	call	___awdiv	;wreg free
  2566  0007D6  C080  F088         	movff	?___awdiv,USARTWriteInt@val
  2567  0007DA  C081  F089         	movff	?___awdiv+1,USARTWriteInt@val+1
  2568                           
  2569                           ;Application/../usart/UsartFunctions.h: 104:         i--;
  2570  0007DE  0100               	movlb	0	; () banked
  2571  0007E0  0792               	decf	USARTWriteInt@i& (0+255),f,b
  2572  0007E2  A0D8               	btfss	status,0,c
  2573  0007E4  0793               	decf	(USARTWriteInt@i+1)& (0+255),f,b
  2574  0007E6                     l2175:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;Application/../usart/UsartFunctions.h: 101:     while (val) {
  2578  0007E6  5188               	movf	USARTWriteInt@val& (0+255),w,b
  2579  0007E8  1189               	iorwf	(USARTWriteInt@val+1)& (0+255),w,b
  2580  0007EA  A4D8               	btfss	status,2,c
  2581  0007EC  D7D7               	goto	l2169
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;Application/../usart/UsartFunctions.h: 106:     if (field_length > 5)
  2585  0007EE  0E05               	movlw	5
  2586  0007F0  658A               	cpfsgt	USARTWriteInt@field_length& (0+255),b
  2587  0007F2  D00D               	goto	l2185
  2588  0007F4  D002               	goto	l2183
  2589  0007F6                     l2181:
  2590                           
  2591                           ; BSR set to: 0
  2592  0007F6  4B90               	infsnz	USARTWriteInt@j& (0+255),f,b
  2593  0007F8  2B91               	incf	(USARTWriteInt@j+1)& (0+255),f,b
  2594  0007FA                     l2183:
  2595                           
  2596                           ; BSR set to: 0
  2597  0007FA  0E8B               	movlw	low USARTWriteInt@str
  2598  0007FC  2590               	addwf	USARTWriteInt@j& (0+255),w,b
  2599  0007FE  6ED9               	movwf	fsr2l,c
  2600  000800  0E00               	movlw	high USARTWriteInt@str
  2601  000802  2191               	addwfc	(USARTWriteInt@j+1)& (0+255),w,b
  2602  000804  6EDA               	movwf	fsr2h,c
  2603  000806  50DF               	movf	indf2,w,c
  2604  000808  A4D8               	btfss	status,2,c
  2605  00080A  D009               	goto	l2187
  2606  00080C  D7F4               	goto	l2181
  2607  00080E                     l2185:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;Application/../usart/UsartFunctions.h: 109:         j = 5 - field_length;
  2611  00080E  518A               	movf	USARTWriteInt@field_length& (0+255),w,b
  2612  000810  0805               	sublw	5
  2613  000812  6F90               	movwf	USARTWriteInt@j& (0+255),b
  2614  000814  0E00               	movlw	0
  2615  000816  A0D8               	btfss	status,0,c
  2616  000818  2AE8               	incf	wreg,f,c
  2617  00081A  0800               	sublw	0
  2618  00081C  6F91               	movwf	(USARTWriteInt@j+1)& (0+255),b
  2619  00081E                     l2187:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;Application/../usart/UsartFunctions.h: 111:     for (i = j; i < 5; i++) {
  2623  00081E  C090  F092         	movff	USARTWriteInt@j,USARTWriteInt@i
  2624  000822  C091  F093         	movff	USARTWriteInt@j+1,USARTWriteInt@i+1
  2625  000826  BF93               	btfsc	(USARTWriteInt@i+1)& (0+255),7,b
  2626  000828  D003               	goto	l2191
  2627  00082A  5193               	movf	(USARTWriteInt@i+1)& (0+255),w,b
  2628  00082C  E117               	bnz	l139
  2629  00082E  D011               	goto	L1
  2630  000830                     l2191:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;Application/../usart/UsartFunctions.h: 112:         USARTWriteByte('0' + str[i] );
  2634  000830  0E8B               	movlw	low USARTWriteInt@str
  2635  000832  2592               	addwf	USARTWriteInt@i& (0+255),w,b
  2636  000834  6ED9               	movwf	fsr2l,c
  2637  000836  0E00               	movlw	high USARTWriteInt@str
  2638  000838  2193               	addwfc	(USARTWriteInt@i+1)& (0+255),w,b
  2639  00083A  6EDA               	movwf	fsr2h,c
  2640  00083C  50DF               	movf	indf2,w,c
  2641  00083E  0F30               	addlw	48
  2642  000840  ECCB  F009         	call	_USARTWriteByte
  2643                           
  2644                           ;Application/../usart/UsartFunctions.h: 113:     }
  2645  000844  0100               	movlb	0	; () banked
  2646  000846  4B92               	infsnz	USARTWriteInt@i& (0+255),f,b
  2647  000848  2B93               	incf	(USARTWriteInt@i+1)& (0+255),f,b
  2648                           
  2649                           ; BSR set to: 0
  2650  00084A  BF93               	btfsc	(USARTWriteInt@i+1)& (0+255),7,b
  2651  00084C  D7F1               	goto	l2191
  2652  00084E  5193               	movf	(USARTWriteInt@i+1)& (0+255),w,b
  2653  000850  E105               	bnz	u2010
  2654  000852                     L1:
  2655  000852  0E05               	movlw	5
  2656  000854  5D92               	subwf	USARTWriteInt@i& (0+255),w,b
  2657  000856  B0D8               	btfsc	status,0,c
  2658  000858  0012               	return	
  2659  00085A  D7EA               	goto	l2191
  2660  00085C                     u2010:
  2661  00085C                     l139:
  2662                           
  2663                           ; BSR set to: 0
  2664  00085C  0012               	return		;funcret
  2665  00085E                     __end_of_USARTWriteInt:
  2666                           	opt callstack 0
  2667                           
  2668 ;; *************** function ___awmod *****************
  2669 ;; Defined at:
  2670 ;;		line 7 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  dividend        2    0[BANK0 ] int 
  2673 ;;  divisor         2    2[BANK0 ] int 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  sign            1    5[BANK0 ] unsigned char 
  2676 ;;  counter         1    4[BANK0 ] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  2    0[BANK0 ] int 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2686 ;;      Params:         0       4       0       0       0       0       0
  2687 ;;      Locals:         0       2       0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0
  2689 ;;      Totals:         0       6       0       0       0       0       0
  2690 ;;Total ram usage:        6 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    5
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_USARTWriteInt
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text24
  2701  000F9A                     __ptext24:
  2702                           	opt callstack 0
  2703  000F9A                     ___awmod:
  2704                           	opt callstack 20
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;incstack = 0
  2708  000F9A  0E00               	movlw	0
  2709  000F9C  0100               	movlb	0	; () banked
  2710  000F9E  6F85               	movwf	___awmod@sign& (0+255),b
  2711                           
  2712                           ; BSR set to: 0
  2713  000FA0  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  2714  000FA2  D006               	goto	l2121
  2715                           
  2716                           ; BSR set to: 0
  2717  000FA4  6D80               	negf	___awmod@dividend& (0+255),b
  2718  000FA6  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  2719  000FA8  B0D8               	btfsc	status,0,c
  2720  000FAA  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  2721                           
  2722                           ; BSR set to: 0
  2723  000FAC  0E01               	movlw	1
  2724  000FAE  6F85               	movwf	___awmod@sign& (0+255),b
  2725  000FB0                     l2121:
  2726                           
  2727                           ; BSR set to: 0
  2728  000FB0  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2729  000FB2  D004               	goto	l2125
  2730                           
  2731                           ; BSR set to: 0
  2732  000FB4  6D82               	negf	___awmod@divisor& (0+255),b
  2733  000FB6  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
  2734  000FB8  B0D8               	btfsc	status,0,c
  2735  000FBA  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
  2736  000FBC                     l2125:
  2737                           
  2738                           ; BSR set to: 0
  2739  000FBC  5182               	movf	___awmod@divisor& (0+255),w,b
  2740  000FBE  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2741  000FC0  B4D8               	btfsc	status,2,c
  2742  000FC2  D018               	goto	l2141
  2743                           
  2744                           ; BSR set to: 0
  2745  000FC4  0E01               	movlw	1
  2746  000FC6  6F84               	movwf	___awmod@counter& (0+255),b
  2747  000FC8  D004               	goto	l2131
  2748  000FCA                     l2129:
  2749                           
  2750                           ; BSR set to: 0
  2751  000FCA  90D8               	bcf	status,0,c
  2752  000FCC  3782               	rlcf	___awmod@divisor& (0+255),f,b
  2753  000FCE  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2754  000FD0  2B84               	incf	___awmod@counter& (0+255),f,b
  2755  000FD2                     l2131:
  2756                           
  2757                           ; BSR set to: 0
  2758  000FD2  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2759  000FD4  D7FA               	goto	l2129
  2760  000FD6                     u1900:
  2761                           
  2762                           ; BSR set to: 0
  2763  000FD6  5182               	movf	___awmod@divisor& (0+255),w,b
  2764  000FD8  5D80               	subwf	___awmod@dividend& (0+255),w,b
  2765  000FDA  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  2766  000FDC  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2767  000FDE  A0D8               	btfss	status,0,c
  2768  000FE0  D004               	goto	l2137
  2769                           
  2770                           ; BSR set to: 0
  2771  000FE2  5182               	movf	___awmod@divisor& (0+255),w,b
  2772  000FE4  5F80               	subwf	___awmod@dividend& (0+255),f,b
  2773  000FE6  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
  2774  000FE8  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2775  000FEA                     l2137:
  2776                           
  2777                           ; BSR set to: 0
  2778  000FEA  90D8               	bcf	status,0,c
  2779  000FEC  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2780  000FEE  3382               	rrcf	___awmod@divisor& (0+255),f,b
  2781                           
  2782                           ; BSR set to: 0
  2783  000FF0  2F84               	decfsz	___awmod@counter& (0+255),f,b
  2784  000FF2  D7F1               	goto	u1900
  2785  000FF4                     l2141:
  2786                           
  2787                           ; BSR set to: 0
  2788  000FF4  5185               	movf	___awmod@sign& (0+255),w,b
  2789  000FF6  B4D8               	btfsc	status,2,c
  2790  000FF8  D004               	goto	l2145
  2791                           
  2792                           ; BSR set to: 0
  2793  000FFA  6D80               	negf	___awmod@dividend& (0+255),b
  2794  000FFC  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
  2795  000FFE  B0D8               	btfsc	status,0,c
  2796  001000  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
  2797  001002                     l2145:
  2798                           
  2799                           ; BSR set to: 0
  2800  001002  C080  F080         	movff	___awmod@dividend,?___awmod
  2801  001006  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
  2802                           
  2803                           ; BSR set to: 0
  2804  00100A  0012               	return		;funcret
  2805  00100C                     __end_of___awmod:
  2806                           	opt callstack 0
  2807                           
  2808 ;; *************** function ___awdiv *****************
  2809 ;; Defined at:
  2810 ;;		line 7 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  dividend        2    0[BANK0 ] int 
  2813 ;;  divisor         2    2[BANK0 ] int 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  quotient        2    6[BANK0 ] int 
  2816 ;;  sign            1    5[BANK0 ] unsigned char 
  2817 ;;  counter         1    4[BANK0 ] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  2    0[BANK0 ] int 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2827 ;;      Params:         0       4       0       0       0       0       0
  2828 ;;      Locals:         0       4       0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0
  2830 ;;      Totals:         0       8       0       0       0       0       0
  2831 ;;Total ram usage:        8 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    5
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_USARTWriteInt
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text25
  2842  000D24                     __ptext25:
  2843                           	opt callstack 0
  2844  000D24                     ___awdiv:
  2845                           	opt callstack 20
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;incstack = 0
  2849  000D24  0E00               	movlw	0
  2850  000D26  0100               	movlb	0	; () banked
  2851  000D28  6F85               	movwf	___awdiv@sign& (0+255),b
  2852                           
  2853                           ; BSR set to: 0
  2854  000D2A  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2855  000D2C  D006               	goto	l2077
  2856                           
  2857                           ; BSR set to: 0
  2858  000D2E  6D82               	negf	___awdiv@divisor& (0+255),b
  2859  000D30  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2860  000D32  B0D8               	btfsc	status,0,c
  2861  000D34  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2862                           
  2863                           ; BSR set to: 0
  2864  000D36  0E01               	movlw	1
  2865  000D38  6F85               	movwf	___awdiv@sign& (0+255),b
  2866  000D3A                     l2077:
  2867                           
  2868                           ; BSR set to: 0
  2869  000D3A  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2870  000D3C  D006               	goto	l2083
  2871                           
  2872                           ; BSR set to: 0
  2873  000D3E  6D80               	negf	___awdiv@dividend& (0+255),b
  2874  000D40  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2875  000D42  B0D8               	btfsc	status,0,c
  2876  000D44  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2877                           
  2878                           ; BSR set to: 0
  2879  000D46  0E01               	movlw	1
  2880  000D48  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  2881  000D4A                     l2083:
  2882                           
  2883                           ; BSR set to: 0
  2884  000D4A  0E00               	movlw	0
  2885  000D4C  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  2886  000D4E  0E00               	movlw	0
  2887  000D50  6F86               	movwf	___awdiv@quotient& (0+255),b
  2888                           
  2889                           ; BSR set to: 0
  2890  000D52  5182               	movf	___awdiv@divisor& (0+255),w,b
  2891  000D54  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2892  000D56  B4D8               	btfsc	status,2,c
  2893  000D58  D01C               	goto	l2105
  2894                           
  2895                           ; BSR set to: 0
  2896  000D5A  0E01               	movlw	1
  2897  000D5C  6F84               	movwf	___awdiv@counter& (0+255),b
  2898  000D5E  D004               	goto	l2091
  2899  000D60                     l2089:
  2900                           
  2901                           ; BSR set to: 0
  2902  000D60  90D8               	bcf	status,0,c
  2903  000D62  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  2904  000D64  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2905  000D66  2B84               	incf	___awdiv@counter& (0+255),f,b
  2906  000D68                     l2091:
  2907                           
  2908                           ; BSR set to: 0
  2909  000D68  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2910  000D6A  D7FA               	goto	l2089
  2911  000D6C                     u1840:
  2912                           
  2913                           ; BSR set to: 0
  2914  000D6C  90D8               	bcf	status,0,c
  2915  000D6E  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  2916  000D70  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2917                           
  2918                           ; BSR set to: 0
  2919  000D72  5182               	movf	___awdiv@divisor& (0+255),w,b
  2920  000D74  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  2921  000D76  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2922  000D78  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2923  000D7A  A0D8               	btfss	status,0,c
  2924  000D7C  D005               	goto	l2101
  2925                           
  2926                           ; BSR set to: 0
  2927  000D7E  5182               	movf	___awdiv@divisor& (0+255),w,b
  2928  000D80  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  2929  000D82  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2930  000D84  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2931                           
  2932                           ; BSR set to: 0
  2933  000D86  8186               	bsf	___awdiv@quotient& (0+255),0,b
  2934  000D88                     l2101:
  2935                           
  2936                           ; BSR set to: 0
  2937  000D88  90D8               	bcf	status,0,c
  2938  000D8A  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2939  000D8C  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  2940                           
  2941                           ; BSR set to: 0
  2942  000D8E  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  2943  000D90  D7ED               	goto	u1840
  2944  000D92                     l2105:
  2945                           
  2946                           ; BSR set to: 0
  2947  000D92  5185               	movf	___awdiv@sign& (0+255),w,b
  2948  000D94  B4D8               	btfsc	status,2,c
  2949  000D96  D004               	goto	l2109
  2950                           
  2951                           ; BSR set to: 0
  2952  000D98  6D86               	negf	___awdiv@quotient& (0+255),b
  2953  000D9A  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2954  000D9C  B0D8               	btfsc	status,0,c
  2955  000D9E  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2956  000DA0                     l2109:
  2957                           
  2958                           ; BSR set to: 0
  2959  000DA0  C086  F080         	movff	___awdiv@quotient,?___awdiv
  2960  000DA4  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  2961                           
  2962                           ; BSR set to: 0
  2963  000DA8  0012               	return		;funcret
  2964  000DAA                     __end_of___awdiv:
  2965                           	opt callstack 0
  2966                           
  2967 ;; *************** function _USARTWriteByte *****************
  2968 ;; Defined at:
  2969 ;;		line 57 in file "Application/../usart/UsartFunctions.h"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  ch              1    wreg     unsigned char 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  ch              1    0[BANK0 ] unsigned char 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2983 ;;      Params:         0       0       0       0       0       0       0
  2984 ;;      Locals:         0       1       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0
  2986 ;;      Totals:         0       1       0       0       0       0       0
  2987 ;;Total ram usage:        1 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    5
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_USARTWriteInt
  2994 ;;		_setupFunctions
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text26
  2999  001396                     __ptext26:
  3000                           	opt callstack 0
  3001  001396                     _USARTWriteByte:
  3002                           	opt callstack 0
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;Skip over the trampoline to the duplicate function for level 2
  3006  001396  B266               	btfsc	btemp,1,c
  3007  001398  EFE4  F009         	goto	i2_USARTWriteByte
  3008  00139C                     _USARTWriteByte$intlevel0:
  3009                           	opt callstack 20
  3010                           
  3011                           ;incstack = 0
  3012                           ;USARTWriteByte@ch stored from wreg
  3013  00139C  0100               	movlb	0	; () banked
  3014  00139E  6F80               	movwf	USARTWriteByte@ch& (0+255),b
  3015  0013A0                     
  3016                           ;Application/../usart/UsartFunctions.h: 59:     while (!TXIF);
  3017  0013A0  A89E               	btfss	3998,4,c	;volatile
  3018  0013A2  D7FE               	goto	l2065
  3019                           
  3020                           ;Application/../usart/UsartFunctions.h: 62:     TXREG = ch;
  3021  0013A4  C080  FFAD         	movff	USARTWriteByte@ch,4013	;volatile
  3022  0013A8  0012               	return		;funcret
  3023  0013AA                     __end_of_USARTWriteByte:
  3024                           	opt callstack 0
  3025                           
  3026 ;; *************** function _ISR *****************
  3027 ;; Defined at:
  3028 ;;		line 57 in file "Application/Application.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3042 ;;      Params:         0       0       0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0
  3044 ;;      Temps:         12       0       0       0       0       0       0
  3045 ;;      Totals:        12       0       0       0       0       0       0
  3046 ;;Total ram usage:       12 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    4
  3049 ;; This function calls:
  3050 ;;		_USARTDataReady
  3051 ;;		_usartOccured
  3052 ;; This function is called by:
  3053 ;;		Interrupt level 2
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	intcode
  3058  000008                     __pintcode:
  3059                           	opt callstack 0
  3060  000008                     _ISR:
  3061                           	opt callstack 20
  3062                           
  3063                           ;incstack = 0
  3064  000008  8266               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3065  00000A  ED4D  F006         	call	int_func,f	;refresh shadow registers
  3066                           
  3067                           	psect	intcode_body
  3068  000C9A                     __pintcode_body:
  3069                           	opt callstack 20
  3070  000C9A                     int_func:
  3071                           	opt callstack 20
  3072  000C9A  0006               	pop		; remove dummy address from shadow register refresh
  3073  000C9C  CFFA F02D          	movff	pclath,??_ISR
  3074  000CA0  CFFB F02E          	movff	pclatu,??_ISR+1
  3075  000CA4  CFE1 F02F          	movff	fsr1l,??_ISR+2
  3076  000CA8  CFE2 F030          	movff	fsr1h,??_ISR+3
  3077  000CAC  CFD9 F031          	movff	fsr2l,??_ISR+4
  3078  000CB0  CFDA F032          	movff	fsr2h,??_ISR+5
  3079  000CB4  CFF3 F033          	movff	prodl,??_ISR+6
  3080  000CB8  CFF4 F034          	movff	prodh,??_ISR+7
  3081  000CBC  CFF6 F035          	movff	tblptrl,??_ISR+8
  3082  000CC0  CFF7 F036          	movff	tblptrh,??_ISR+9
  3083  000CC4  CFF8 F037          	movff	tblptru,??_ISR+10
  3084  000CC8  CFF5 F038          	movff	tablat,??_ISR+11
  3085                           
  3086                           ;Application/Application.c: 59:     if (usart.isDataReady)
  3087  000CCC  5052               	movf	_usart,w,c
  3088  000CCE  1053               	iorwf	_usart+1,w,c
  3089  000CD0  B4D8               	btfsc	status,2,c
  3090  000CD2  D00E               	goto	i2u230_49
  3091                           
  3092                           ;Application/Application.c: 60:     {;Application/Application.c: 61:         usart.proce
      +                          ssor.process();
  3093  000CD4  EE20  F054         	lfsr	2,_usart+2
  3094  000CD8  D801               	call	i2u230_48
  3095  000CDA  D00A               	goto	i2u230_49
  3096  000CDC                     i2u230_48:
  3097  000CDC  0005               	push	
  3098  000CDE  6EFA               	movwf	pclath,c
  3099  000CE0  50DE               	movf	postinc2,w,c
  3100  000CE2  6EFD               	movwf	tosl,c
  3101  000CE4  50DE               	movf	postinc2,w,c
  3102  000CE6  6EFE               	movwf	tosh,c
  3103  000CE8  50F8               	movf	tblptru,w,c
  3104  000CEA  6EFF               	movwf	tosu,c
  3105  000CEC  50FA               	movf	pclath,w,c
  3106  000CEE  0012               	return		;indir
  3107  000CF0                     i2u230_49:
  3108  000CF0  C038  FFF5         	movff	??_ISR+11,tablat
  3109  000CF4  C037  FFF8         	movff	??_ISR+10,tblptru
  3110  000CF8  C036  FFF7         	movff	??_ISR+9,tblptrh
  3111  000CFC  C035  FFF6         	movff	??_ISR+8,tblptrl
  3112  000D00  C034  FFF4         	movff	??_ISR+7,prodh
  3113  000D04  C033  FFF3         	movff	??_ISR+6,prodl
  3114  000D08  C032  FFDA         	movff	??_ISR+5,fsr2h
  3115  000D0C  C031  FFD9         	movff	??_ISR+4,fsr2l
  3116  000D10  C030  FFE2         	movff	??_ISR+3,fsr1h
  3117  000D14  C02F  FFE1         	movff	??_ISR+2,fsr1l
  3118  000D18  C02E  FFFB         	movff	??_ISR+1,pclatu
  3119  000D1C  C02D  FFFA         	movff	??_ISR,pclath
  3120  000D20  9266               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3121  000D22  0011               	retfie		f
  3122  000D24                     __end_of_ISR:
  3123                           	opt callstack 0
  3124                           
  3125 ;; *************** function _usartOccured *****************
  3126 ;; Defined at:
  3127 ;;		line 41 in file "Application/Application.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  text           20   22[COMRAM] unsigned char [20]
  3132 ;;  i               2   42[COMRAM] int 
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3142 ;;      Params:         0       0       0       0       0       0       0
  3143 ;;      Locals:        22       0       0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0       0       0
  3145 ;;      Totals:        22       0       0       0       0       0       0
  3146 ;;Total ram usage:       22 bytes
  3147 ;; Hardware stack levels used:    1
  3148 ;; Hardware stack levels required when called:    3
  3149 ;; This function calls:
  3150 ;;		_USARTReadString
  3151 ;;		_USARTWriteLine
  3152 ;;		_atoi
  3153 ;;		i2_USARTWriteInt
  3154 ;; This function is called by:
  3155 ;;		_setProcessor
  3156 ;;		_ISR
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text28
  3161  000A1E                     __ptext28:
  3162                           	opt callstack 0
  3163  000A1E                     _usartOccured:
  3164                           	opt callstack 20
  3165                           
  3166                           ;Application/Application.c: 43:     if (usart.isDataReady) {
  3167                           
  3168                           ;incstack = 0
  3169  000A1E  5052               	movf	_usart,w,c
  3170  000A20  1053               	iorwf	_usart+1,w,c
  3171  000A22  B4D8               	btfsc	status,2,c
  3172  000A24  0012               	return	
  3173                           
  3174                           ;Application/Application.c: 44:         char text[20] = "";
  3175  000A26  EE20  F039         	lfsr	2,usartOccured@F3074
  3176  000A2A  EE10  F017         	lfsr	1,usartOccured@text
  3177  000A2E  0E13               	movlw	19
  3178  000A30                     i2u225_41:
  3179  000A30  CFDB FFE3          	movff	plusw2,plusw1
  3180  000A34  06E8               	decf	wreg,f,c
  3181  000A36  E2FC               	bc	i2u225_41
  3182                           
  3183                           ;Application/Application.c: 45:         usart.readString(text, 20);
  3184  000A38  0E17               	movlw	low usartOccured@text
  3185  000A3A  6E01               	movwf	USARTReadString@buf,c
  3186  000A3C  0E00               	movlw	high usartOccured@text
  3187  000A3E  6E02               	movwf	USARTReadString@buf+1,c
  3188  000A40  0E14               	movlw	20
  3189  000A42  6E03               	movwf	USARTReadString@max_length,c
  3190  000A44  EE20  F058         	lfsr	2,_usart+6
  3191  000A48  D801               	call	i2u226_48
  3192  000A4A  D00A               	goto	i2u226_49
  3193  000A4C                     i2u226_48:
  3194  000A4C  0005               	push	
  3195  000A4E  6EFA               	movwf	pclath,c
  3196  000A50  50DE               	movf	postinc2,w,c
  3197  000A52  6EFD               	movwf	tosl,c
  3198  000A54  50DE               	movf	postinc2,w,c
  3199  000A56  6EFE               	movwf	tosh,c
  3200  000A58  50F8               	movf	tblptru,w,c
  3201  000A5A  6EFF               	movwf	tosu,c
  3202  000A5C  50FA               	movf	pclath,w,c
  3203  000A5E  0012               	return		;indir
  3204  000A60                     i2u226_49:
  3205                           
  3206                           ;Application/Application.c: 47:         int i = atoi(text);
  3207  000A60  0E17               	movlw	low usartOccured@text
  3208  000A62  6E08               	movwf	atoi@s,c
  3209  000A64  0E00               	movlw	high usartOccured@text
  3210  000A66  6E09               	movwf	atoi@s+1,c
  3211  000A68  EC11  F003         	call	_atoi	;wreg free
  3212  000A6C  C008  F02B         	movff	?_atoi,usartOccured@i
  3213  000A70  C009  F02C         	movff	?_atoi+1,usartOccured@i+1
  3214                           
  3215                           ;Application/Application.c: 49:         LATB = i;
  3216  000A74  C02B  FF8A         	movff	usartOccured@i,3978	;volatile
  3217                           
  3218                           ;Application/Application.c: 51:         usart.writeInt(i, 3);
  3219  000A78  C02B  F009         	movff	usartOccured@i,i2USARTWriteInt@val
  3220  000A7C  C02C  F00A         	movff	usartOccured@i+1,i2USARTWriteInt@val+1
  3221  000A80  0E03               	movlw	3
  3222  000A82  6E0B               	movwf	i2USARTWriteInt@field_length,c
  3223  000A84  EE20  F060         	lfsr	2,_usart+14
  3224  000A88  D801               	call	i2u227_48
  3225  000A8A  D00A               	goto	i2u227_49
  3226  000A8C                     i2u227_48:
  3227  000A8C  0005               	push	
  3228  000A8E  6EFA               	movwf	pclath,c
  3229  000A90  50DE               	movf	postinc2,w,c
  3230  000A92  6EFD               	movwf	tosl,c
  3231  000A94  50DE               	movf	postinc2,w,c
  3232  000A96  6EFE               	movwf	tosh,c
  3233  000A98  50F8               	movf	tblptru,w,c
  3234  000A9A  6EFF               	movwf	tosu,c
  3235  000A9C  50FA               	movf	pclath,w,c
  3236  000A9E  0012               	return		;indir
  3237  000AA0                     i2u227_49:
  3238                           
  3239                           ;Application/Application.c: 52:         usart.writeLine("");
  3240  000AA0  0E1F               	movlw	low (STR_1+2)
  3241  000AA2  6E03               	movwf	USARTWriteLine@ln,c
  3242  000AA4  0E06               	movlw	high (STR_1+2)
  3243  000AA6  6E04               	movwf	USARTWriteLine@ln+1,c
  3244  000AA8  EE20  F05E         	lfsr	2,_usart+12
  3245  000AAC  D801               	call	i2u228_48
  3246  000AAE  0012               	return	
  3247  000AB0                     i2u228_48:
  3248  000AB0  0005               	push	
  3249  000AB2  6EFA               	movwf	pclath,c
  3250  000AB4  50DE               	movf	postinc2,w,c
  3251  000AB6  6EFD               	movwf	tosl,c
  3252  000AB8  50DE               	movf	postinc2,w,c
  3253  000ABA  6EFE               	movwf	tosh,c
  3254  000ABC  50F8               	movf	tblptru,w,c
  3255  000ABE  6EFF               	movwf	tosu,c
  3256  000AC0  50FA               	movf	pclath,w,c
  3257  000AC2  0012               	return		;indir
  3258  000AC4                     __end_of_usartOccured:
  3259                           	opt callstack 0
  3260                           
  3261 ;; *************** function i2_USARTWriteInt *****************
  3262 ;; Defined at:
  3263 ;;		line 92 in file "Application/../usart/UsartFunctions.h"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  val             2    8[COMRAM] int 
  3266 ;;  field_length    1   10[COMRAM] unsigned char 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  USARTWriteIn    5   11[COMRAM] unsigned char [5]
  3269 ;;  USARTWriteIn    2   18[COMRAM] int 
  3270 ;;  USARTWriteIn    2   16[COMRAM] int 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3280 ;;      Params:         3       0       0       0       0       0       0
  3281 ;;      Locals:         9       0       0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0
  3283 ;;      Totals:        12       0       0       0       0       0       0
  3284 ;;Total ram usage:       12 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    1
  3287 ;; This function calls:
  3288 ;;		i2_USARTWriteByte
  3289 ;;		i2___awdiv
  3290 ;;		i2___awmod
  3291 ;; This function is called by:
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text29
  3296  00085E                     __ptext29:
  3297                           	opt callstack 0
  3298  00085E                     i2_USARTWriteInt:
  3299                           	opt callstack 21
  3300                           
  3301                           ;Application/../usart/UsartFunctions.h: 93:     if (val < 0) {
  3302                           
  3303                           ;incstack = 0
  3304  00085E  AE0A               	btfss	i2USARTWriteInt@val+1,7,c
  3305  000860  D007               	goto	i2l1975
  3306                           
  3307                           ;Application/../usart/UsartFunctions.h: 94:         USARTWriteByte('-');
  3308  000862  0E2D               	movlw	45
  3309  000864  ECE4  F009         	call	i2_USARTWriteByte
  3310                           
  3311                           ;Application/../usart/UsartFunctions.h: 95:         val = (val * (-1));
  3312  000868  6C09               	negf	i2USARTWriteInt@val,c
  3313  00086A  1E0A               	comf	i2USARTWriteInt@val+1,f,c
  3314  00086C  B0D8               	btfsc	status,0,c
  3315  00086E  2A0A               	incf	i2USARTWriteInt@val+1,f,c
  3316  000870                     i2l1975:
  3317                           
  3318                           ;Application/../usart/UsartFunctions.h: 99:     char str[5] = {0, 0, 0, 0, 0};
  3319  000870  EE20  F04D         	lfsr	2,USARTWriteInt@F2999
  3320  000874  EE10  F00C         	lfsr	1,i2USARTWriteInt@str
  3321  000878  0E04               	movlw	4
  3322  00087A                     i2u166_41:
  3323  00087A  CFDB FFE3          	movff	plusw2,plusw1
  3324  00087E  06E8               	decf	wreg,f,c
  3325  000880  E2FC               	bc	i2u166_41
  3326                           
  3327                           ;Application/../usart/UsartFunctions.h: 100:     int i = 4, j = 0;
  3328  000882  0E00               	movlw	0
  3329  000884  6E14               	movwf	i2USARTWriteInt@i+1,c
  3330  000886  0E04               	movlw	4
  3331  000888  6E13               	movwf	i2USARTWriteInt@i,c
  3332  00088A  0E00               	movlw	0
  3333  00088C  6E12               	movwf	i2USARTWriteInt@j+1,c
  3334  00088E  0E00               	movlw	0
  3335  000890  6E11               	movwf	i2USARTWriteInt@j,c
  3336                           
  3337                           ;Application/../usart/UsartFunctions.h: 101:     while (val) {
  3338  000892  D023               	goto	i2l1987
  3339  000894                     i2l1981:
  3340                           
  3341                           ;Application/../usart/UsartFunctions.h: 102:         str[i] = val % 10;
  3342  000894  0E0C               	movlw	low i2USARTWriteInt@str
  3343  000896  2413               	addwf	i2USARTWriteInt@i,w,c
  3344  000898  6ED9               	movwf	fsr2l,c
  3345  00089A  0E00               	movlw	high i2USARTWriteInt@str
  3346  00089C  2014               	addwfc	i2USARTWriteInt@i+1,w,c
  3347  00089E  6EDA               	movwf	fsr2h,c
  3348  0008A0  C009  F001         	movff	i2USARTWriteInt@val,i2___awmod@dividend
  3349  0008A4  C00A  F002         	movff	i2USARTWriteInt@val+1,i2___awmod@dividend+1
  3350  0008A8  0E00               	movlw	0
  3351  0008AA  6E04               	movwf	i2___awmod@divisor+1,c
  3352  0008AC  0E0A               	movlw	10
  3353  0008AE  6E03               	movwf	i2___awmod@divisor,c
  3354  0008B0  EC06  F008         	call	i2___awmod	;wreg free
  3355  0008B4  5001               	movf	?i2___awmod,w,c
  3356  0008B6  6EDF               	movwf	indf2,c
  3357                           
  3358                           ;Application/../usart/UsartFunctions.h: 103:         val = val / 10;
  3359  0008B8  C009  F001         	movff	i2USARTWriteInt@val,i2___awdiv@dividend
  3360  0008BC  C00A  F002         	movff	i2USARTWriteInt@val+1,i2___awdiv@dividend+1
  3361  0008C0  0E00               	movlw	0
  3362  0008C2  6E04               	movwf	i2___awdiv@divisor+1,c
  3363  0008C4  0E0A               	movlw	10
  3364  0008C6  6E03               	movwf	i2___awdiv@divisor,c
  3365  0008C8  EC18  F007         	call	i2___awdiv	;wreg free
  3366  0008CC  C001  F009         	movff	?i2___awdiv,i2USARTWriteInt@val
  3367  0008D0  C002  F00A         	movff	?i2___awdiv+1,i2USARTWriteInt@val+1
  3368                           
  3369                           ;Application/../usart/UsartFunctions.h: 104:         i--;
  3370  0008D4  0613               	decf	i2USARTWriteInt@i,f,c
  3371  0008D6  A0D8               	btfss	status,0,c
  3372  0008D8  0614               	decf	i2USARTWriteInt@i+1,f,c
  3373  0008DA                     i2l1987:
  3374                           
  3375                           ;Application/../usart/UsartFunctions.h: 101:     while (val) {
  3376  0008DA  5009               	movf	i2USARTWriteInt@val,w,c
  3377  0008DC  100A               	iorwf	i2USARTWriteInt@val+1,w,c
  3378  0008DE  A4D8               	btfss	status,2,c
  3379  0008E0  D7D9               	goto	i2l1981
  3380                           
  3381                           ;Application/../usart/UsartFunctions.h: 106:     if (field_length > 5)
  3382  0008E2  0E05               	movlw	5
  3383  0008E4  640B               	cpfsgt	i2USARTWriteInt@field_length,c
  3384  0008E6  D00D               	goto	i2l1997
  3385  0008E8  D002               	goto	i2l1995
  3386  0008EA                     i2l1993:
  3387  0008EA  4A11               	infsnz	i2USARTWriteInt@j,f,c
  3388  0008EC  2A12               	incf	i2USARTWriteInt@j+1,f,c
  3389  0008EE                     i2l1995:
  3390  0008EE  0E0C               	movlw	low i2USARTWriteInt@str
  3391  0008F0  2411               	addwf	i2USARTWriteInt@j,w,c
  3392  0008F2  6ED9               	movwf	fsr2l,c
  3393  0008F4  0E00               	movlw	high i2USARTWriteInt@str
  3394  0008F6  2012               	addwfc	i2USARTWriteInt@j+1,w,c
  3395  0008F8  6EDA               	movwf	fsr2h,c
  3396  0008FA  50DF               	movf	indf2,w,c
  3397  0008FC  A4D8               	btfss	status,2,c
  3398  0008FE  D009               	goto	i2l1999
  3399  000900  D7F4               	goto	i2l1993
  3400  000902                     i2l1997:
  3401                           
  3402                           ;Application/../usart/UsartFunctions.h: 109:         j = 5 - field_length;
  3403  000902  500B               	movf	i2USARTWriteInt@field_length,w,c
  3404  000904  0805               	sublw	5
  3405  000906  6E11               	movwf	i2USARTWriteInt@j,c
  3406  000908  0E00               	movlw	0
  3407  00090A  A0D8               	btfss	status,0,c
  3408  00090C  2AE8               	incf	wreg,f,c
  3409  00090E  0800               	sublw	0
  3410  000910  6E12               	movwf	i2USARTWriteInt@j+1,c
  3411  000912                     i2l1999:
  3412                           
  3413                           ;Application/../usart/UsartFunctions.h: 111:     for (i = j; i < 5; i++) {
  3414  000912  C011  F013         	movff	i2USARTWriteInt@j,i2USARTWriteInt@i
  3415  000916  C012  F014         	movff	i2USARTWriteInt@j+1,i2USARTWriteInt@i+1
  3416  00091A  BE14               	btfsc	i2USARTWriteInt@i+1,7,c
  3417  00091C  D003               	goto	i2l2003
  3418  00091E  5014               	movf	i2USARTWriteInt@i+1,w,c
  3419  000920  E116               	bnz	i2l139
  3420  000922  D010               	goto	L2
  3421  000924                     i2l2003:
  3422                           
  3423                           ;Application/../usart/UsartFunctions.h: 112:         USARTWriteByte('0' + str[i] );
  3424  000924  0E0C               	movlw	low i2USARTWriteInt@str
  3425  000926  2413               	addwf	i2USARTWriteInt@i,w,c
  3426  000928  6ED9               	movwf	fsr2l,c
  3427  00092A  0E00               	movlw	high i2USARTWriteInt@str
  3428  00092C  2014               	addwfc	i2USARTWriteInt@i+1,w,c
  3429  00092E  6EDA               	movwf	fsr2h,c
  3430  000930  50DF               	movf	indf2,w,c
  3431  000932  0F30               	addlw	48
  3432  000934  ECE4  F009         	call	i2_USARTWriteByte
  3433                           
  3434                           ;Application/../usart/UsartFunctions.h: 113:     }
  3435  000938  4A13               	infsnz	i2USARTWriteInt@i,f,c
  3436  00093A  2A14               	incf	i2USARTWriteInt@i+1,f,c
  3437  00093C  BE14               	btfsc	i2USARTWriteInt@i+1,7,c
  3438  00093E  D7F2               	goto	i2l2003
  3439  000940  5014               	movf	i2USARTWriteInt@i+1,w,c
  3440  000942  E105               	bnz	i2u171_40
  3441  000944                     L2:
  3442  000944  0E05               	movlw	5
  3443  000946  5C13               	subwf	i2USARTWriteInt@i,w,c
  3444  000948  B0D8               	btfsc	status,0,c
  3445  00094A  0012               	return	
  3446  00094C  D7EB               	goto	i2l2003
  3447  00094E                     i2u171_40:
  3448  00094E                     i2l139:
  3449  00094E  0012               	return		;funcret
  3450  000950                     __end_ofi2_USARTWriteInt:
  3451                           	opt callstack 0
  3452                           
  3453 ;; *************** function i2___awmod *****************
  3454 ;; Defined at:
  3455 ;;		line 7 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  dividend        2    0[COMRAM] int 
  3458 ;;  divisor         2    2[COMRAM] int 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  __awmod         1    5[COMRAM] unsigned char 
  3461 ;;  __awmod         1    4[COMRAM] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  2    0[COMRAM] int 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3471 ;;      Params:         4       0       0       0       0       0       0
  3472 ;;      Locals:         2       0       0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0
  3474 ;;      Totals:         6       0       0       0       0       0       0
  3475 ;;Total ram usage:        6 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		i2_USARTWriteInt
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text30
  3485  00100C                     __ptext30:
  3486                           	opt callstack 0
  3487  00100C                     i2___awmod:
  3488                           	opt callstack 21
  3489                           
  3490                           ;incstack = 0
  3491  00100C  0E00               	movlw	0
  3492  00100E  6E06               	movwf	i2___awmod@sign,c
  3493  001010  AE02               	btfss	i2___awmod@dividend+1,7,c
  3494  001012  D006               	goto	i2l1837
  3495  001014  6C01               	negf	i2___awmod@dividend,c
  3496  001016  1E02               	comf	i2___awmod@dividend+1,f,c
  3497  001018  B0D8               	btfsc	status,0,c
  3498  00101A  2A02               	incf	i2___awmod@dividend+1,f,c
  3499  00101C  0E01               	movlw	1
  3500  00101E  6E06               	movwf	i2___awmod@sign,c
  3501  001020                     i2l1837:
  3502  001020  AE04               	btfss	i2___awmod@divisor+1,7,c
  3503  001022  D004               	goto	i2l1841
  3504  001024  6C03               	negf	i2___awmod@divisor,c
  3505  001026  1E04               	comf	i2___awmod@divisor+1,f,c
  3506  001028  B0D8               	btfsc	status,0,c
  3507  00102A  2A04               	incf	i2___awmod@divisor+1,f,c
  3508  00102C                     i2l1841:
  3509  00102C  5003               	movf	i2___awmod@divisor,w,c
  3510  00102E  1004               	iorwf	i2___awmod@divisor+1,w,c
  3511  001030  B4D8               	btfsc	status,2,c
  3512  001032  D018               	goto	i2l1857
  3513  001034  0E01               	movlw	1
  3514  001036  6E05               	movwf	i2___awmod@counter,c
  3515  001038  D004               	goto	i2l1847
  3516  00103A                     i2l1845:
  3517  00103A  90D8               	bcf	status,0,c
  3518  00103C  3603               	rlcf	i2___awmod@divisor,f,c
  3519  00103E  3604               	rlcf	i2___awmod@divisor+1,f,c
  3520  001040  2A05               	incf	i2___awmod@counter,f,c
  3521  001042                     i2l1847:
  3522  001042  AE04               	btfss	i2___awmod@divisor+1,7,c
  3523  001044  D7FA               	goto	i2l1845
  3524  001046                     i2u149_40:
  3525  001046  5003               	movf	i2___awmod@divisor,w,c
  3526  001048  5C01               	subwf	i2___awmod@dividend,w,c
  3527  00104A  5004               	movf	i2___awmod@divisor+1,w,c
  3528  00104C  5802               	subwfb	i2___awmod@dividend+1,w,c
  3529  00104E  A0D8               	btfss	status,0,c
  3530  001050  D004               	goto	i2l1853
  3531  001052  5003               	movf	i2___awmod@divisor,w,c
  3532  001054  5E01               	subwf	i2___awmod@dividend,f,c
  3533  001056  5004               	movf	i2___awmod@divisor+1,w,c
  3534  001058  5A02               	subwfb	i2___awmod@dividend+1,f,c
  3535  00105A                     i2l1853:
  3536  00105A  90D8               	bcf	status,0,c
  3537  00105C  3204               	rrcf	i2___awmod@divisor+1,f,c
  3538  00105E  3203               	rrcf	i2___awmod@divisor,f,c
  3539  001060  2E05               	decfsz	i2___awmod@counter,f,c
  3540  001062  D7F1               	goto	i2u149_40
  3541  001064                     i2l1857:
  3542  001064  5006               	movf	i2___awmod@sign,w,c
  3543  001066  B4D8               	btfsc	status,2,c
  3544  001068  D004               	goto	i2l1861
  3545  00106A  6C01               	negf	i2___awmod@dividend,c
  3546  00106C  1E02               	comf	i2___awmod@dividend+1,f,c
  3547  00106E  B0D8               	btfsc	status,0,c
  3548  001070  2A02               	incf	i2___awmod@dividend+1,f,c
  3549  001072                     i2l1861:
  3550  001072  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  3551  001076  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3552  00107A  0012               	return		;funcret
  3553  00107C                     __end_ofi2___awmod:
  3554                           	opt callstack 0
  3555                           
  3556 ;; *************** function i2___awdiv *****************
  3557 ;; Defined at:
  3558 ;;		line 7 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;  dividend        2    0[COMRAM] int 
  3561 ;;  divisor         2    2[COMRAM] int 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  __awdiv         2    6[COMRAM] int 
  3564 ;;  __awdiv         1    5[COMRAM] unsigned char 
  3565 ;;  __awdiv         1    4[COMRAM] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  2    0[COMRAM] int 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3575 ;;      Params:         4       0       0       0       0       0       0
  3576 ;;      Locals:         4       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0
  3578 ;;      Totals:         8       0       0       0       0       0       0
  3579 ;;Total ram usage:        8 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		i2_USARTWriteInt
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text31
  3589  000E30                     __ptext31:
  3590                           	opt callstack 0
  3591  000E30                     i2___awdiv:
  3592                           	opt callstack 21
  3593                           
  3594                           ;incstack = 0
  3595  000E30  0E00               	movlw	0
  3596  000E32  6E06               	movwf	i2___awdiv@sign,c
  3597  000E34  AE04               	btfss	i2___awdiv@divisor+1,7,c
  3598  000E36  D006               	goto	i2l1793
  3599  000E38  6C03               	negf	i2___awdiv@divisor,c
  3600  000E3A  1E04               	comf	i2___awdiv@divisor+1,f,c
  3601  000E3C  B0D8               	btfsc	status,0,c
  3602  000E3E  2A04               	incf	i2___awdiv@divisor+1,f,c
  3603  000E40  0E01               	movlw	1
  3604  000E42  6E06               	movwf	i2___awdiv@sign,c
  3605  000E44                     i2l1793:
  3606  000E44  AE02               	btfss	i2___awdiv@dividend+1,7,c
  3607  000E46  D006               	goto	i2l1799
  3608  000E48  6C01               	negf	i2___awdiv@dividend,c
  3609  000E4A  1E02               	comf	i2___awdiv@dividend+1,f,c
  3610  000E4C  B0D8               	btfsc	status,0,c
  3611  000E4E  2A02               	incf	i2___awdiv@dividend+1,f,c
  3612  000E50  0E01               	movlw	1
  3613  000E52  1A06               	xorwf	i2___awdiv@sign,f,c
  3614  000E54                     i2l1799:
  3615  000E54  0E00               	movlw	0
  3616  000E56  6E08               	movwf	i2___awdiv@quotient+1,c
  3617  000E58  0E00               	movlw	0
  3618  000E5A  6E07               	movwf	i2___awdiv@quotient,c
  3619  000E5C  5003               	movf	i2___awdiv@divisor,w,c
  3620  000E5E  1004               	iorwf	i2___awdiv@divisor+1,w,c
  3621  000E60  B4D8               	btfsc	status,2,c
  3622  000E62  D01C               	goto	i2l1821
  3623  000E64  0E01               	movlw	1
  3624  000E66  6E05               	movwf	i2___awdiv@counter,c
  3625  000E68  D004               	goto	i2l1807
  3626  000E6A                     i2l1805:
  3627  000E6A  90D8               	bcf	status,0,c
  3628  000E6C  3603               	rlcf	i2___awdiv@divisor,f,c
  3629  000E6E  3604               	rlcf	i2___awdiv@divisor+1,f,c
  3630  000E70  2A05               	incf	i2___awdiv@counter,f,c
  3631  000E72                     i2l1807:
  3632  000E72  AE04               	btfss	i2___awdiv@divisor+1,7,c
  3633  000E74  D7FA               	goto	i2l1805
  3634  000E76                     i2u143_40:
  3635  000E76  90D8               	bcf	status,0,c
  3636  000E78  3607               	rlcf	i2___awdiv@quotient,f,c
  3637  000E7A  3608               	rlcf	i2___awdiv@quotient+1,f,c
  3638  000E7C  5003               	movf	i2___awdiv@divisor,w,c
  3639  000E7E  5C01               	subwf	i2___awdiv@dividend,w,c
  3640  000E80  5004               	movf	i2___awdiv@divisor+1,w,c
  3641  000E82  5802               	subwfb	i2___awdiv@dividend+1,w,c
  3642  000E84  A0D8               	btfss	status,0,c
  3643  000E86  D005               	goto	i2l1817
  3644  000E88  5003               	movf	i2___awdiv@divisor,w,c
  3645  000E8A  5E01               	subwf	i2___awdiv@dividend,f,c
  3646  000E8C  5004               	movf	i2___awdiv@divisor+1,w,c
  3647  000E8E  5A02               	subwfb	i2___awdiv@dividend+1,f,c
  3648  000E90  8007               	bsf	i2___awdiv@quotient,0,c
  3649  000E92                     i2l1817:
  3650  000E92  90D8               	bcf	status,0,c
  3651  000E94  3204               	rrcf	i2___awdiv@divisor+1,f,c
  3652  000E96  3203               	rrcf	i2___awdiv@divisor,f,c
  3653  000E98  2E05               	decfsz	i2___awdiv@counter,f,c
  3654  000E9A  D7ED               	goto	i2u143_40
  3655  000E9C                     i2l1821:
  3656  000E9C  5006               	movf	i2___awdiv@sign,w,c
  3657  000E9E  B4D8               	btfsc	status,2,c
  3658  000EA0  D004               	goto	i2l1825
  3659  000EA2  6C07               	negf	i2___awdiv@quotient,c
  3660  000EA4  1E08               	comf	i2___awdiv@quotient+1,f,c
  3661  000EA6  B0D8               	btfsc	status,0,c
  3662  000EA8  2A08               	incf	i2___awdiv@quotient+1,f,c
  3663  000EAA                     i2l1825:
  3664  000EAA  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  3665  000EAE  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  3666  000EB2  0012               	return		;funcret
  3667  000EB4                     __end_ofi2___awdiv:
  3668                           	opt callstack 0
  3669                           
  3670 ;; *************** function i2_USARTWriteByte *****************
  3671 ;; Defined at:
  3672 ;;		line 57 in file "Application/../usart/UsartFunctions.h"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  ch              1    wreg     unsigned char 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  ch              1    0[COMRAM] unsigned char 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3686 ;;      Params:         0       0       0       0       0       0       0
  3687 ;;      Locals:         1       0       0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0
  3689 ;;      Totals:         1       0       0       0       0       0       0
  3690 ;;Total ram usage:        1 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		i2_USARTWriteInt
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text32
  3700  0013C8                     __ptext32:
  3701                           	opt callstack 0
  3702  0013C8                     i2_USARTWriteByte:
  3703                           	opt callstack 21
  3704                           
  3705                           ;incstack = 0
  3706                           ;i2USARTWriteByte@ch stored from wreg
  3707  0013C8  6E01               	movwf	i2USARTWriteByte@ch,c
  3708  0013CA                     
  3709                           ;Application/../usart/UsartFunctions.h: 59:     while (!TXIF);
  3710  0013CA  A89E               	btfss	3998,4,c	;volatile
  3711  0013CC  D7FE               	goto	i2l1767
  3712                           
  3713                           ;Application/../usart/UsartFunctions.h: 62:     TXREG = ch;
  3714  0013CE  C001  FFAD         	movff	i2USARTWriteByte@ch,4013	;volatile
  3715  0013D2  0012               	return		;funcret
  3716  0013D4                     __end_ofi2_USARTWriteByte:
  3717                           	opt callstack 0
  3718                           
  3719 ;; *************** function _atoi *****************
  3720 ;; Defined at:
  3721 ;;		line 4 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  s               2    7[COMRAM] PTR const unsigned char 
  3724 ;;		 -> usartOccured@text(20), 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  n               2   20[COMRAM] int 
  3727 ;;  neg             2   13[COMRAM] int 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  2    7[COMRAM] int 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3737 ;;      Params:         2       0       0       0       0       0       0
  3738 ;;      Locals:         9       0       0       0       0       0       0
  3739 ;;      Temps:          4       0       0       0       0       0       0
  3740 ;;      Totals:        15       0       0       0       0       0       0
  3741 ;;Total ram usage:       15 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    1
  3744 ;; This function calls:
  3745 ;;		_isdigit
  3746 ;;		_isspace
  3747 ;;		i2___wmul
  3748 ;; This function is called by:
  3749 ;;		_usartOccured
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text33
  3754  000622                     __ptext33:
  3755                           	opt callstack 0
  3756  000622                     _atoi:
  3757                           	opt callstack 21
  3758                           
  3759                           ;incstack = 0
  3760  000622  0E00               	movlw	0
  3761  000624  6E16               	movwf	atoi@n+1,c
  3762  000626  0E00               	movlw	0
  3763  000628  6E15               	movwf	atoi@n,c
  3764  00062A  0E00               	movlw	0
  3765  00062C  6E0F               	movwf	atoi@neg+1,c
  3766  00062E  0E00               	movlw	0
  3767  000630  6E0E               	movwf	atoi@neg,c
  3768  000632  D002               	goto	i2l1931
  3769  000634                     i2l1929:
  3770  000634  4A08               	infsnz	atoi@s,f,c
  3771  000636  2A09               	incf	atoi@s+1,f,c
  3772  000638                     i2l1931:
  3773  000638  0E01               	movlw	1
  3774  00063A  6E14               	movwf	_atoi$859,c
  3775  00063C  C008  FFD9         	movff	atoi@s,fsr2l
  3776  000640  C009  FFDA         	movff	atoi@s+1,fsr2h
  3777  000644  0E20               	movlw	32
  3778  000646  18DE               	xorwf	postinc2,w,c
  3779  000648  B4D8               	btfsc	status,2,c
  3780  00064A  D017               	goto	i2l1939
  3781  00064C  0EF7               	movlw	247
  3782  00064E  6E0A               	movwf	??_atoi& (0+255),c
  3783  000650  0EFF               	movlw	255
  3784  000652  6E0B               	movwf	(??_atoi+1)& (0+255),c
  3785  000654  C008  FFD9         	movff	atoi@s,fsr2l
  3786  000658  C009  FFDA         	movff	atoi@s+1,fsr2h
  3787  00065C  50DF               	movf	indf2,w,c
  3788  00065E  6E0C               	movwf	(??_atoi+2)& (0+255),c
  3789  000660  6A0D               	clrf	(??_atoi+3)& (0+255),c
  3790  000662  500A               	movf	??_atoi,w,c
  3791  000664  260C               	addwf	??_atoi+2,f,c
  3792  000666  500B               	movf	??_atoi+1,w,c
  3793  000668  220D               	addwfc	??_atoi+3,f,c
  3794  00066A  500D               	movf	??_atoi+3,w,c
  3795  00066C  E104               	bnz	i2u159_40
  3796  00066E  0E05               	movlw	5
  3797  000670  5C0C               	subwf	??_atoi+2,w,c
  3798  000672  A0D8               	btfss	status,0,c
  3799  000674  D002               	goto	i2l1939
  3800  000676                     i2u159_40:
  3801  000676  0E00               	movlw	0
  3802  000678  6E14               	movwf	_atoi$859,c
  3803  00067A                     i2l1939:
  3804  00067A  C014  F010         	movff	_atoi$859,_atoi$858
  3805  00067E  6A11               	clrf	_atoi$858+1,c
  3806  000680  5010               	movf	_atoi$858,w,c
  3807  000682  1011               	iorwf	_atoi$858+1,w,c
  3808  000684  B4D8               	btfsc	status,2,c
  3809  000686  D008               	goto	i2l1949
  3810  000688  D7D5               	goto	i2l1929
  3811  00068A                     i2l1945:
  3812  00068A  0E00               	movlw	0
  3813  00068C  6E0F               	movwf	atoi@neg+1,c
  3814  00068E  0E01               	movlw	1
  3815  000690  6E0E               	movwf	atoi@neg,c
  3816  000692                     i2l1947:
  3817  000692  4A08               	infsnz	atoi@s,f,c
  3818  000694  2A09               	incf	atoi@s+1,f,c
  3819  000696  D02E               	goto	i2l1955
  3820  000698                     i2l1949:
  3821  000698  C008  FFD9         	movff	atoi@s,fsr2l
  3822  00069C  C009  FFDA         	movff	atoi@s+1,fsr2h
  3823  0006A0  50DF               	movf	indf2,w,c
  3824  0006A2  6E0A               	movwf	??_atoi& (0+255),c
  3825  0006A4  6A0B               	clrf	(??_atoi+1)& (0+255),c
  3826                           
  3827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3828                           ; Switch size 1, requested type "simple"
  3829                           ; Number of cases is 1, Range of values is 0 to 0
  3830                           ; switch strategies available:
  3831                           ; Name         Instructions Cycles
  3832                           ; simple_byte            4     3 (average)
  3833                           ;	Chosen strategy is simple_byte
  3834  0006A6  500B               	movf	??_atoi+1,w,c
  3835  0006A8  0A00               	xorlw	0	; case 0
  3836  0006AA  A4D8               	btfss	status,2,c
  3837  0006AC  D023               	goto	i2l1955
  3838                           
  3839                           ; Switch size 1, requested type "simple"
  3840                           ; Number of cases is 2, Range of values is 43 to 45
  3841                           ; switch strategies available:
  3842                           ; Name         Instructions Cycles
  3843                           ; simple_byte            7     4 (average)
  3844                           ;	Chosen strategy is simple_byte
  3845  0006AE  500A               	movf	??_atoi,w,c
  3846  0006B0  0A2B               	xorlw	43	; case 43
  3847  0006B2  B4D8               	btfsc	status,2,c
  3848  0006B4  D7EE               	goto	i2l1947
  3849  0006B6  0A06               	xorlw	6	; case 45
  3850  0006B8  B4D8               	btfsc	status,2,c
  3851  0006BA  D7E7               	goto	i2l1945
  3852  0006BC  D01B               	goto	i2l1955
  3853  0006BE                     i2l1951:
  3854  0006BE  C015  F001         	movff	atoi@n,i2___wmul@multiplier
  3855  0006C2  C016  F002         	movff	atoi@n+1,i2___wmul@multiplier+1
  3856  0006C6  0E00               	movlw	0
  3857  0006C8  6E04               	movwf	i2___wmul@multiplicand+1,c
  3858  0006CA  0E0A               	movlw	10
  3859  0006CC  6E03               	movwf	i2___wmul@multiplicand,c
  3860  0006CE  EC7E  F009         	call	i2___wmul	;wreg free
  3861  0006D2  C008  FFD9         	movff	atoi@s,fsr2l
  3862  0006D6  C009  FFDA         	movff	atoi@s+1,fsr2h
  3863  0006DA  50DF               	movf	indf2,w,c
  3864  0006DC  6E0A               	movwf	??_atoi& (0+255),c
  3865  0006DE  500A               	movf	??_atoi,w,c
  3866  0006E0  5E01               	subwf	?i2___wmul,f,c
  3867  0006E2  0E00               	movlw	0
  3868  0006E4  5A02               	subwfb	?i2___wmul+1,f,c
  3869  0006E6  0E30               	movlw	48
  3870  0006E8  2401               	addwf	?i2___wmul,w,c
  3871  0006EA  6E15               	movwf	atoi@n,c
  3872  0006EC  0E00               	movlw	0
  3873  0006EE  2002               	addwfc	?i2___wmul+1,w,c
  3874  0006F0  6E16               	movwf	atoi@n+1,c
  3875  0006F2  D7CF               	goto	i2l1947
  3876  0006F4                     i2l1955:
  3877  0006F4  0ED0               	movlw	208
  3878  0006F6  6E0A               	movwf	??_atoi& (0+255),c
  3879  0006F8  0EFF               	movlw	255
  3880  0006FA  6E0B               	movwf	(??_atoi+1)& (0+255),c
  3881  0006FC  C008  FFD9         	movff	atoi@s,fsr2l
  3882  000700  C009  FFDA         	movff	atoi@s+1,fsr2h
  3883  000704  50DF               	movf	indf2,w,c
  3884  000706  6E0C               	movwf	(??_atoi+2)& (0+255),c
  3885  000708  6A0D               	clrf	(??_atoi+3)& (0+255),c
  3886  00070A  500A               	movf	??_atoi,w,c
  3887  00070C  260C               	addwf	??_atoi+2,f,c
  3888  00070E  500B               	movf	??_atoi+1,w,c
  3889  000710  220D               	addwfc	??_atoi+3,f,c
  3890  000712  500D               	movf	??_atoi+3,w,c
  3891  000714  E106               	bnz	i2u161_40
  3892  000716  0E0A               	movlw	10
  3893  000718  5C0C               	subwf	??_atoi+2,w,c
  3894  00071A  B0D8               	btfsc	status,0,c
  3895  00071C  D002               	goto	i2u161_40
  3896  00071E  0E01               	movlw	1
  3897  000720  D001               	goto	i2u162_40
  3898  000722                     i2u161_40:
  3899  000722  0E00               	movlw	0
  3900  000724                     i2u162_40:
  3901  000724  6E12               	movwf	_atoi$860,c
  3902  000726  6A13               	clrf	_atoi$860+1,c
  3903  000728  5012               	movf	_atoi$860,w,c
  3904  00072A  1013               	iorwf	_atoi$860+1,w,c
  3905  00072C  A4D8               	btfss	status,2,c
  3906  00072E  D7C7               	goto	i2l1951
  3907  000730  500E               	movf	atoi@neg,w,c
  3908  000732  100F               	iorwf	atoi@neg+1,w,c
  3909  000734  A4D8               	btfss	status,2,c
  3910  000736  D00D               	goto	i2l904
  3911  000738  C015  F00A         	movff	atoi@n,??_atoi
  3912  00073C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  3913  000740  1E0A               	comf	??_atoi,f,c
  3914  000742  1E0B               	comf	??_atoi+1,f,c
  3915  000744  4A0A               	infsnz	??_atoi,f,c
  3916  000746  2A0B               	incf	??_atoi+1,f,c
  3917  000748  C00A  F008         	movff	??_atoi,?_atoi
  3918  00074C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  3919  000750  0012               	return	
  3920  000752                     i2l904:
  3921  000752  C015  F008         	movff	atoi@n,?_atoi
  3922  000756  C016  F009         	movff	atoi@n+1,?_atoi+1
  3923  00075A  0012               	return		;funcret
  3924  00075C                     __end_of_atoi:
  3925                           	opt callstack 0
  3926                           
  3927 ;; *************** function i2___wmul *****************
  3928 ;; Defined at:
  3929 ;;		line 15 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  multiplier      2    0[COMRAM] unsigned int 
  3932 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  __wmul          2    4[COMRAM] unsigned int 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2    0[COMRAM] unsigned int 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0, prodl, prodh
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3944 ;;      Params:         4       0       0       0       0       0       0
  3945 ;;      Locals:         2       0       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0
  3947 ;;      Totals:         6       0       0       0       0       0       0
  3948 ;;Total ram usage:        6 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_atoi
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text34
  3958  0012FC                     __ptext34:
  3959                           	opt callstack 0
  3960  0012FC                     i2___wmul:
  3961                           	opt callstack 21
  3962                           
  3963                           ;incstack = 0
  3964  0012FC  5001               	movf	i2___wmul@multiplier,w,c
  3965  0012FE  0203               	mulwf	i2___wmul@multiplicand,c
  3966  001300  CFF3 F005          	movff	prodl,i2___wmul@product
  3967  001304  CFF4 F006          	movff	prodh,i2___wmul@product+1
  3968  001308  5001               	movf	i2___wmul@multiplier,w,c
  3969  00130A  0204               	mulwf	i2___wmul@multiplicand+1,c
  3970  00130C  50F3               	movf	prodl,w,c
  3971  00130E  2606               	addwf	i2___wmul@product+1,f,c
  3972  001310  5002               	movf	i2___wmul@multiplier+1,w,c
  3973  001312  0203               	mulwf	i2___wmul@multiplicand,c
  3974  001314  50F3               	movf	prodl,w,c
  3975  001316  2606               	addwf	i2___wmul@product+1,f,c
  3976  001318  C005  F001         	movff	i2___wmul@product,?i2___wmul
  3977  00131C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  3978  001320  0012               	return		;funcret
  3979  001322                     __end_ofi2___wmul:
  3980                           	opt callstack 0
  3981                           
  3982 ;; *************** function _isspace *****************
  3983 ;; Defined at:
  3984 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  c               2    0[COMRAM] int 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2    0[COMRAM] int 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3998 ;;      Params:         2       0       0       0       0       0       0
  3999 ;;      Locals:         1       0       0       0       0       0       0
  4000 ;;      Temps:          4       0       0       0       0       0       0
  4001 ;;      Totals:         7       0       0       0       0       0       0
  4002 ;;Total ram usage:        7 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_atoi
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text35
  4012  00117C                     __ptext35:
  4013                           	opt callstack 0
  4014  00117C                     _isspace:
  4015                           	opt callstack 21
  4016                           
  4017                           ;incstack = 0
  4018  00117C  0E01               	movlw	1
  4019  00117E  6E07               	movwf	_isspace$876,c
  4020  001180  0E20               	movlw	32
  4021  001182  1801               	xorwf	isspace@c,w,c
  4022  001184  1002               	iorwf	isspace@c+1,w,c
  4023  001186  B4D8               	btfsc	status,2,c
  4024  001188  D014               	goto	i2l1759
  4025  00118A  0EF7               	movlw	247
  4026  00118C  6E03               	movwf	??_isspace& (0+255),c
  4027  00118E  0EFF               	movlw	255
  4028  001190  6E04               	movwf	(??_isspace+1)& (0+255),c
  4029  001192  C001  F005         	movff	isspace@c,??_isspace+2
  4030  001196  C002  F006         	movff	isspace@c+1,??_isspace+3
  4031  00119A  5003               	movf	??_isspace,w,c
  4032  00119C  2605               	addwf	??_isspace+2,f,c
  4033  00119E  5004               	movf	??_isspace+1,w,c
  4034  0011A0  2206               	addwfc	??_isspace+3,f,c
  4035  0011A2  5006               	movf	??_isspace+3,w,c
  4036  0011A4  E104               	bnz	i2u134_40
  4037  0011A6  0E05               	movlw	5
  4038  0011A8  5C05               	subwf	??_isspace+2,w,c
  4039  0011AA  A0D8               	btfss	status,0,c
  4040  0011AC  D002               	goto	i2l1759
  4041  0011AE                     i2u134_40:
  4042  0011AE  0E00               	movlw	0
  4043  0011B0  6E07               	movwf	_isspace$876,c
  4044  0011B2                     i2l1759:
  4045  0011B2  C007  F001         	movff	_isspace$876,?_isspace
  4046  0011B6  6A02               	clrf	?_isspace+1,c
  4047  0011B8  0012               	return		;funcret
  4048  0011BA                     __end_of_isspace:
  4049                           	opt callstack 0
  4050                           
  4051 ;; *************** function _isdigit *****************
  4052 ;; Defined at:
  4053 ;;		line 5 in file "E:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  c               2    0[COMRAM] int 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  2    0[COMRAM] int 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4067 ;;      Params:         2       0       0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0       0
  4069 ;;      Temps:          4       0       0       0       0       0       0
  4070 ;;      Totals:         6       0       0       0       0       0       0
  4071 ;;Total ram usage:        6 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_atoi
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text36
  4081  001228                     __ptext36:
  4082                           	opt callstack 0
  4083  001228                     _isdigit:
  4084                           	opt callstack 21
  4085                           
  4086                           ;incstack = 0
  4087  001228  0ED0               	movlw	208
  4088  00122A  6E03               	movwf	??_isdigit& (0+255),c
  4089  00122C  0EFF               	movlw	255
  4090  00122E  6E04               	movwf	(??_isdigit+1)& (0+255),c
  4091  001230  C001  F005         	movff	isdigit@c,??_isdigit+2
  4092  001234  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  4093  001238  5003               	movf	??_isdigit,w,c
  4094  00123A  2605               	addwf	??_isdigit+2,f,c
  4095  00123C  5004               	movf	??_isdigit+1,w,c
  4096  00123E  2206               	addwfc	??_isdigit+3,f,c
  4097  001240  5006               	movf	??_isdigit+3,w,c
  4098  001242  E106               	bnz	i2u135_40
  4099  001244  0E0A               	movlw	10
  4100  001246  5C05               	subwf	??_isdigit+2,w,c
  4101  001248  B0D8               	btfsc	status,0,c
  4102  00124A  D002               	goto	i2u135_40
  4103  00124C  0E01               	movlw	1
  4104  00124E  D001               	goto	i2u136_40
  4105  001250                     i2u135_40:
  4106  001250  0E00               	movlw	0
  4107  001252                     i2u136_40:
  4108  001252  6E01               	movwf	?_isdigit,c
  4109  001254  6A02               	clrf	?_isdigit+1,c
  4110  001256  0012               	return		;funcret
  4111  001258                     __end_of_isdigit:
  4112                           	opt callstack 0
  4113                           
  4114 ;; *************** function _USARTWriteLine *****************
  4115 ;; Defined at:
  4116 ;;		line 87 in file "Application/../usart/UsartFunctions.h"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  ln              2    2[COMRAM] PTR const unsigned char 
  4119 ;;		 -> STR_5(1), 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;		None
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4131 ;;      Params:         2       0       0       0       0       0       0
  4132 ;;      Locals:         0       0       0       0       0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0
  4134 ;;      Totals:         2       0       0       0       0       0       0
  4135 ;;Total ram usage:        2 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    1
  4138 ;; This function calls:
  4139 ;;		i2_USARTWriteString
  4140 ;; This function is called by:
  4141 ;;		_setupFunctions
  4142 ;;		_usartOccured
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text37
  4147  001322                     __ptext37:
  4148                           	opt callstack 0
  4149  001322                     _USARTWriteLine:
  4150                           	opt callstack 21
  4151                           
  4152                           ;Application/../usart/UsartFunctions.h: 88:     USARTWriteString(ln);
  4153                           
  4154                           ;incstack = 0
  4155  001322  C003  F001         	movff	USARTWriteLine@ln,i2USARTWriteString@str
  4156  001326  C004  F002         	movff	USARTWriteLine@ln+1,i2USARTWriteString@str+1
  4157  00132A  EC42  F009         	call	i2_USARTWriteString	;wreg free
  4158                           
  4159                           ;Application/../usart/UsartFunctions.h: 89:     USARTWriteString("\r\n");
  4160  00132E  0E1D               	movlw	low STR_1
  4161  001330  6E01               	movwf	i2USARTWriteString@str,c
  4162  001332  0E06               	movlw	high STR_1
  4163  001334  6E02               	movwf	i2USARTWriteString@str+1,c
  4164  001336  EC42  F009         	call	i2_USARTWriteString	;wreg free
  4165  00133A  0012               	return		;funcret
  4166  00133C                     __end_of_USARTWriteLine:
  4167                           	opt callstack 0
  4168                           
  4169 ;; *************** function i2_USARTWriteString *****************
  4170 ;; Defined at:
  4171 ;;		line 65 in file "Application/../usart/UsartFunctions.h"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  str             2    0[COMRAM] PTR const unsigned char 
  4174 ;;		 -> STR_5(1), STR_4(3), STR_1(3), 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4186 ;;      Params:         2       0       0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0
  4189 ;;      Totals:         2       0       0       0       0       0       0
  4190 ;;Total ram usage:        2 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_USARTWriteLine
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text38
  4200  001284                     __ptext38:
  4201                           	opt callstack 0
  4202  001284                     i2_USARTWriteString:
  4203                           	opt callstack 21
  4204                           
  4205                           ;Application/../usart/UsartFunctions.h: 66:     while ((*str) != '\0') {
  4206                           
  4207                           ;incstack = 0
  4208  001284  D00B               	goto	i2l1777
  4209  001286                     i2l116:
  4210  001286  A89E               	btfss	3998,4,c	;volatile
  4211  001288  D7FE               	goto	i2l116
  4212                           
  4213                           ;Application/../usart/UsartFunctions.h: 71:         TXREG = (*str);
  4214  00128A  C001  FFF6         	movff	i2USARTWriteString@str,tblptrl
  4215  00128E  C002  FFF7         	movff	i2USARTWriteString@str+1,tblptrh
  4216  001292                     	if	0	;tblptru may be non-zero
  4217  001292                     	endif
  4218  001292                     	if	0	;tblptru may be non-zero
  4219  001292                     	endif
  4220  001292  0008               	tblrd		*
  4221  001294  CFF5 FFAD          	movff	tablat,4013	;volatile
  4222                           
  4223                           ;Application/../usart/UsartFunctions.h: 74:         str++;
  4224  001298  4A01               	infsnz	i2USARTWriteString@str,f,c
  4225  00129A  2A02               	incf	i2USARTWriteString@str+1,f,c
  4226  00129C                     i2l1777:
  4227                           
  4228                           ;Application/../usart/UsartFunctions.h: 66:     while ((*str) != '\0') {
  4229  00129C  C001  FFF6         	movff	i2USARTWriteString@str,tblptrl
  4230  0012A0  C002  FFF7         	movff	i2USARTWriteString@str+1,tblptrh
  4231  0012A4                     	if	0	;tblptru may be non-zero
  4232  0012A4                     	endif
  4233  0012A4                     	if	0	;tblptru may be non-zero
  4234  0012A4                     	endif
  4235  0012A4  0008               	tblrd		*
  4236  0012A6  50F5               	movf	tablat,w,c
  4237  0012A8  0900               	iorlw	0
  4238  0012AA  B4D8               	btfsc	status,2,c
  4239  0012AC  0012               	return	
  4240  0012AE  D7EB               	goto	i2l116
  4241  0012B0                     __end_ofi2_USARTWriteString:
  4242                           	opt callstack 0
  4243                           
  4244 ;; *************** function _USARTReadString *****************
  4245 ;; Defined at:
  4246 ;;		line 34 in file "Application/../usart/UsartFunctions.h"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  buf             2    0[COMRAM] PTR unsigned char 
  4249 ;;		 -> usartOccured@text(20), 
  4250 ;;  max_length      1    2[COMRAM] unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  tmp             1   11[COMRAM] unsigned char 
  4253 ;;  i               1   10[COMRAM] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      unsigned char 
  4256 ;; Registers used:
  4257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4263 ;;      Params:         3       0       0       0       0       0       0
  4264 ;;      Locals:         2       0       0       0       0       0       0
  4265 ;;      Temps:          7       0       0       0       0       0       0
  4266 ;;      Totals:        12       0       0       0       0       0       0
  4267 ;;Total ram usage:       12 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    2
  4270 ;; This function calls:
  4271 ;;		_USARTReadChar
  4272 ;; This function is called by:
  4273 ;;		_setupFunctions
  4274 ;;		_usartOccured
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text39
  4279  000DAA                     __ptext39:
  4280                           	opt callstack 0
  4281  000DAA                     _USARTReadString:
  4282                           	opt callstack 20
  4283                           
  4284                           ;Application/../usart/UsartFunctions.h: 35:     uint8_t i = 0;
  4285                           
  4286                           ;incstack = 0
  4287  000DAA  0E00               	movlw	0
  4288  000DAC  6E0B               	movwf	USARTReadString@i,c
  4289                           
  4290                           ;Application/../usart/UsartFunctions.h: 37:     for (i = 0; i < max_length - 1; i++) {
  4291  000DAE  0E00               	movlw	0
  4292  000DB0  6E0B               	movwf	USARTReadString@i,c
  4293  000DB2  D017               	goto	i2l1895
  4294  000DB4                     i2l1883:
  4295                           
  4296                           ;Application/../usart/UsartFunctions.h: 38:         tmp = USARTReadChar();
  4297  000DB4  ECDD  F009         	call	_USARTReadChar	;wreg free
  4298  000DB8  6E0C               	movwf	USARTReadString@tmp,c
  4299                           
  4300                           ;Application/../usart/UsartFunctions.h: 40:         if (tmp == '\0' || tmp == '\n' || tm
      +                          p == '\r') {
  4301  000DBA  500C               	movf	USARTReadString@tmp,w,c
  4302  000DBC  B4D8               	btfsc	status,2,c
  4303  000DBE  D029               	goto	i2u157_40
  4304  000DC0  0E0A               	movlw	10
  4305  000DC2  180C               	xorwf	USARTReadString@tmp,w,c
  4306  000DC4  B4D8               	btfsc	status,2,c
  4307  000DC6  D025               	goto	i2u157_40
  4308  000DC8  0E0D               	movlw	13
  4309  000DCA  180C               	xorwf	USARTReadString@tmp,w,c
  4310  000DCC  B4D8               	btfsc	status,2,c
  4311  000DCE  D021               	goto	i2u157_40
  4312                           
  4313                           ;Application/../usart/UsartFunctions.h: 43:         buf[i] = tmp;
  4314  000DD0  500B               	movf	USARTReadString@i,w,c
  4315  000DD2  2401               	addwf	USARTReadString@buf,w,c
  4316  000DD4  6ED9               	movwf	fsr2l,c
  4317  000DD6  0E00               	movlw	0
  4318  000DD8  2002               	addwfc	USARTReadString@buf+1,w,c
  4319  000DDA  6EDA               	movwf	fsr2h,c
  4320  000DDC  C00C  FFDF         	movff	USARTReadString@tmp,indf2
  4321                           
  4322                           ;Application/../usart/UsartFunctions.h: 44:     }
  4323  000DE0  2A0B               	incf	USARTReadString@i,f,c
  4324  000DE2                     i2l1895:
  4325  000DE2  0EFF               	movlw	255
  4326  000DE4  6E04               	movwf	??_USARTReadString& (0+255),c
  4327  000DE6  0EFF               	movlw	255
  4328  000DE8  6E05               	movwf	(??_USARTReadString+1)& (0+255),c
  4329  000DEA  5003               	movf	USARTReadString@max_length,w,c
  4330  000DEC  6E06               	movwf	(??_USARTReadString+2)& (0+255),c
  4331  000DEE  6A07               	clrf	(??_USARTReadString+3)& (0+255),c
  4332  000DF0  5004               	movf	??_USARTReadString,w,c
  4333  000DF2  2606               	addwf	??_USARTReadString+2,f,c
  4334  000DF4  5005               	movf	??_USARTReadString+1,w,c
  4335  000DF6  2207               	addwfc	??_USARTReadString+3,f,c
  4336  000DF8  500B               	movf	USARTReadString@i,w,c
  4337  000DFA  6E08               	movwf	(??_USARTReadString+4)& (0+255),c
  4338  000DFC  6A09               	clrf	(??_USARTReadString+5)& (0+255),c
  4339  000DFE  5006               	movf	??_USARTReadString+2,w,c
  4340  000E00  5C08               	subwf	??_USARTReadString+4,w,c
  4341  000E02  5009               	movf	??_USARTReadString+5,w,c
  4342  000E04  0A80               	xorlw	128
  4343  000E06  6E0A               	movwf	(??_USARTReadString+6)& (0+255),c
  4344  000E08  5007               	movf	??_USARTReadString+3,w,c
  4345  000E0A  0A80               	xorlw	128
  4346  000E0C  580A               	subwfb	(??_USARTReadString+6)& (0+255),w,c
  4347  000E0E  A0D8               	btfss	status,0,c
  4348  000E10  D7D1               	goto	i2l1883
  4349  000E12                     i2u157_40:
  4350                           
  4351                           ;Application/../usart/UsartFunctions.h: 46:     buf[i + 1] = '\0';
  4352  000E12  500B               	movf	USARTReadString@i,w,c
  4353  000E14  2401               	addwf	USARTReadString@buf,w,c
  4354  000E16  6E04               	movwf	??_USARTReadString& (0+255),c
  4355  000E18  0E00               	movlw	0
  4356  000E1A  2002               	addwfc	USARTReadString@buf+1,w,c
  4357  000E1C  6E05               	movwf	(??_USARTReadString+1)& (0+255),c
  4358  000E1E  0E01               	movlw	1
  4359  000E20  2404               	addwf	??_USARTReadString,w,c
  4360  000E22  6ED9               	movwf	fsr2l,c
  4361  000E24  0E00               	movlw	0
  4362  000E26  2005               	addwfc	??_USARTReadString+1,w,c
  4363  000E28  6EDA               	movwf	fsr2h,c
  4364  000E2A  0E00               	movlw	0
  4365  000E2C  6EDF               	movwf	indf2,c
  4366  000E2E  0012               	return		;funcret
  4367  000E30                     __end_of_USARTReadString:
  4368                           	opt callstack 0
  4369                           
  4370 ;; *************** function _USARTReadChar *****************
  4371 ;; Defined at:
  4372 ;;		line 29 in file "Application/../usart/UsartFunctions.h"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      unsigned char 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4386 ;;      Params:         0       0       0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0
  4389 ;;      Totals:         0       0       0       0       0       0       0
  4390 ;;Total ram usage:        0 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    1
  4393 ;; This function calls:
  4394 ;;		_USARTDataReady
  4395 ;; This function is called by:
  4396 ;;		_USARTReadString
  4397 ;;		_setupFunctions
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text40
  4402  0013BA                     __ptext40:
  4403                           	opt callstack 0
  4404  0013BA                     _USARTReadChar:
  4405                           	opt callstack 20
  4406                           
  4407                           ;Application/../usart/UsartFunctions.h: 30:     while (!USARTDataReady());
  4408                           
  4409                           ;incstack = 0
  4410  0013BA  ECEA  F009         	call	_USARTDataReady	;wreg free
  4411  0013BE  0900               	iorlw	0
  4412  0013C0  B4D8               	btfsc	status,2,c
  4413  0013C2  D7FB               	goto	_USARTReadChar
  4414                           
  4415                           ;Application/../usart/UsartFunctions.h: 31:     return RCREG;
  4416  0013C4  50AE               	movf	4014,w,c	;volatile
  4417  0013C6  0012               	return		;funcret
  4418  0013C8                     __end_of_USARTReadChar:
  4419                           	opt callstack 0
  4420                           
  4421 ;; *************** function _USARTDataReady *****************
  4422 ;; Defined at:
  4423 ;;		line 19 in file "Application/../usart/UsartFunctions.h"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      unsigned char 
  4430 ;; Registers used:
  4431 ;;		wreg
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4437 ;;      Params:         0       0       0       0       0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0
  4440 ;;      Totals:         0       0       0       0       0       0       0
  4441 ;;Total ram usage:        0 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_USARTReadChar
  4447 ;;		_setupFunctions
  4448 ;;		_ISR
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text41
  4453  0013D4                     __ptext41:
  4454                           	opt callstack 0
  4455  0013D4                     _USARTDataReady:
  4456                           	opt callstack 20
  4457                           
  4458                           ;Application/../usart/UsartFunctions.h: 20:     return PIR1bits.RCIF;
  4459                           
  4460                           ;incstack = 0
  4461  0013D4  AA9E               	btfss	3998,5,c	;volatile
  4462  0013D6  D002               	goto	i2u28_40
  4463  0013D8  0E01               	movlw	1
  4464  0013DA  0012               	return	
  4465  0013DC                     i2u28_40:
  4466  0013DC  0E00               	movlw	0
  4467  0013DE  0012               	return		;funcret
  4468  0013E0                     __end_of_USARTDataReady:
  4469                           	opt callstack 0
  4470                           
  4471                           	psect	text42
  4472  000000                     __ptext42:
  4473                           	opt callstack 0
  4474                           
  4475                           	psect	rparam
  4476  0000                     
  4477                           	psect	temp
  4478  000066                     btemp:
  4479                           	opt callstack 0
  4480  000066                     	ds	1
  4481  0000                     int$flags	set	btemp
  4482  0000                     wtemp8	set	btemp+1
  4483  0000                     ttemp5	set	btemp+1
  4484  0000                     ttemp6	set	btemp+4
  4485  0000                     ttemp7	set	btemp+8
  4486                           tosu	equ	0xFFF
  4487                           tosh	equ	0xFFE
  4488                           tosl	equ	0xFFD
  4489                           stkptr	equ	0xFFC
  4490                           pclatu	equ	0xFFB
  4491                           pclath	equ	0xFFA
  4492                           pcl	equ	0xFF9
  4493                           tblptru	equ	0xFF8
  4494                           tblptrh	equ	0xFF7
  4495                           tblptrl	equ	0xFF6
  4496                           tablat	equ	0xFF5
  4497                           prodh	equ	0xFF4
  4498                           prodl	equ	0xFF3
  4499                           indf0	equ	0xFEF
  4500                           postinc0	equ	0xFEE
  4501                           postdec0	equ	0xFED
  4502                           preinc0	equ	0xFEC
  4503                           plusw0	equ	0xFEB
  4504                           fsr0h	equ	0xFEA
  4505                           fsr0l	equ	0xFE9
  4506                           wreg	equ	0xFE8
  4507                           indf1	equ	0xFE7
  4508                           postinc1	equ	0xFE6
  4509                           postdec1	equ	0xFE5
  4510                           preinc1	equ	0xFE4
  4511                           plusw1	equ	0xFE3
  4512                           fsr1h	equ	0xFE2
  4513                           fsr1l	equ	0xFE1
  4514                           bsr	equ	0xFE0
  4515                           indf2	equ	0xFDF
  4516                           postinc2	equ	0xFDE
  4517                           postdec2	equ	0xFDD
  4518                           preinc2	equ	0xFDC
  4519                           plusw2	equ	0xFDB
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8


Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         66
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     56     101
    BANK0           128    101     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    controller.buttons.onPressed	PTR FTN()void  size(2) Largest target is 0
		 -> btn2Func(), btn1Func(), 

    controller.buttons.getValue	PTR FTN()int  size(2) Largest target is 0
		 -> btn2getValue(), btn1getValue(), 

    controller.buttons.portName	PTR unsigned char  size(2) Largest target is 0
		 -> STR_3(CODE[14]), STR_2(CODE[14]), 

    S46$6$0	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_5(CODE[1]), 

    S46$3$0	PTR unsigned char  size(2) Largest target is 20
		 -> usartOccured@text(COMRAM[20]), 

    ?_initInputControllerDefaultFunction.chectButtons	PTR FTN()void  size(2) Largest target is 1
		 -> chectButtons(), 

    ?_initInputControllerDefaultFunction.buttons	PTR struct .[10] size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    ?_initInputController.chectButtons	PTR FTN()void  size(2) Largest target is 1
		 -> chectButtons(), 

    ?_initInputController.buttons	PTR struct .[10] size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    ?_addButton.chectButtons	PTR FTN()void  size(2) Largest target is 1
		 -> chectButtons(), 

    ?_addButton.buttons	PTR struct .[10] size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    S46$5$0	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[1]), STR_4(CODE[3]), STR_1(CODE[3]), 

    ?_initButton.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> btn2Func(), btn1Func(), 

    ?_initButton.getValue	PTR FTN()int  size(2) Largest target is 2
		 -> btn2getValue(), btn1getValue(), 

    ?_initButton.portName	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[14]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> usartOccured@text(COMRAM[20]), 

    _processor.process	PTR FTN()void  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    controller.chectButtons	PTR FTN()void  size(2) Largest target is 1
		 -> chectButtons(), 

    controller.buttons	PTR struct .[10] size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    usart.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    usart.writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    usart.writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    usart.writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    usart.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    usart.readString	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> USARTReadString(), 

    usart.readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    usart.processor.process	PTR FTN()void  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    usart.isDataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    USARTInit@usart	PTR struct . size(2) Largest target is 18
		 -> usart(COMRAM[18]), 

    setupFunctions@usart.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    setupFunctions@usart.writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    setupFunctions@usart.writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    setupFunctions@usart.writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    setupFunctions@usart.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    setupFunctions@usart.readString	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> USARTReadString(), 

    setupFunctions@usart.readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    setupFunctions@usart.processor.process	PTR FTN()void  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    setupFunctions@usart.isDataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    setupFunctions@usart	PTR struct . size(2) Largest target is 18
		 -> usart(COMRAM[18]), 

    USARTWriteLine@ln	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_5(CODE[1]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[1]), STR_4(CODE[3]), STR_1(CODE[3]), 

    USARTReadString@buf	PTR unsigned char  size(2) Largest target is 20
		 -> usartOccured@text(COMRAM[20]), 

    button2.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> btn2Func(), btn1Func(), 

    button2.getValue	PTR FTN()int  size(2) Largest target is 2
		 -> btn2getValue(), btn1getValue(), 

    button2.portName	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[14]), 

    button1.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> btn2Func(), btn1Func(), 

    button1.getValue	PTR FTN()int  size(2) Largest target is 2
		 -> btn2getValue(), btn1getValue(), 

    button1.portName	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[14]), 

    initInputController@_chectButtons	PTR FTN()void  size(2) Largest target is 1
		 -> chectButtons(), 

    controller.chectButtons	PTR FTN()void  size(2) Largest target is 1
		 -> chectButtons(), 

    controller.buttons	PTR struct .[10] size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    addButton@controller.buttons.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> btn2Func(), btn1Func(), 

    addButton@controller.buttons.getValue	PTR FTN()int  size(2) Largest target is 2
		 -> btn2getValue(), btn1getValue(), 

    addButton@controller.buttons.portName	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[14]), 

    addButton@controller.chectButtons	PTR FTN()void  size(2) Largest target is 1
		 -> chectButtons(), 

    addButton@controller.buttons	PTR struct .[10] size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    addButton@button	PTR struct . size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    addButton@controller	PTR struct . size(2) Largest target is 33
		 -> initInputController@controller(BANK0[23]), 

    S138$chectButtons	PTR FTN()void  size(2) Largest target is 1
		 -> chectButtons(), 

    chectButtons@controller.chectButtons	PTR FTN()void  size(2) Largest target is 1
		 -> chectButtons(), 

    S138$buttons	PTR struct .[10] size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    chectButtons@controller.buttons	PTR struct .[10] size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    chectButtons@controller	PTR struct . size(2) Largest target is 33
		 -> controller(BANK0[23]), 

    chectButtons@buton	PTR struct . size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    handleButtonEvents@buton.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> btn2Func(), btn1Func(), 

    handleButtonEvents@buton.getValue	PTR FTN()int  size(2) Largest target is 2
		 -> btn2getValue(), btn1getValue(), 

    handleButtonEvents@buton.portName	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[14]), 

    handleButtonEvents@buton	PTR struct . size(2) Largest target is 9
		 -> initInputController@button2(BANK0[8]), initInputController@button1(BANK0[8]), 

    bUsart.process	PTR FTN()void  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    S46$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    bUsart.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadByte(), 

    S46$writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    bUsart.writeInt	PTR FTN(int ,unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteInt(), 

    S46$writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    bUsart.writeLine	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteLine(), 

    S46$writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    bUsart.writeString	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteString(), 

    S46$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    bUsart.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> USARTWriteByte(), 

    S46$readString	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> USARTReadString(), 

    bUsart.readString	PTR FTN(PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> USARTReadString(), 

    S46$readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    bUsart.readChar	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> USARTReadChar(), 

    S37$process	PTR FTN()void  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    bUsart.processor.process	PTR FTN()void  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    S46$isDataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    bUsart.isDataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> usartOccured(), USARTDataReady(), 

    setButton1Usart@_usart	PTR struct . size(2) Largest target is 18
		 -> usart(COMRAM[18]), 

    bUsart	PTR struct . size(2) Largest target is 18
		 -> NULL(NULL[0]), usart(COMRAM[18]), 

    initButton@onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> btn2Func(), btn1Func(), 

    initButton@getValue	PTR FTN()int  size(2) Largest target is 2
		 -> btn2getValue(), btn1getValue(), 

    initButton@portName	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[14]), 

    S28$onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> btn2Func(), btn1Func(), 

    buton.onPressed	PTR FTN()void  size(2) Largest target is 1
		 -> btn2Func(), btn1Func(), 

    S28$getValue	PTR FTN()int  size(2) Largest target is 2
		 -> btn2getValue(), btn1getValue(), 

    buton.getValue	PTR FTN()int  size(2) Largest target is 2
		 -> btn2getValue(), btn1getValue(), 

    S28$portName	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[14]), 

    buton.portName	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[14]), STR_2(CODE[14]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_usartOccured
    _usartOccured->_atoi
    i2_USARTWriteInt->i2___awdiv
    _atoi->_isspace
    _USARTWriteLine->i2_USARTWriteString

Critical Paths under _main in BANK0

    _setup->_initInputControllerDefaultFunction
    _initInputControllerDefaultFunction->_initInputController
    _initInputController->_initButton
    _USARTInit->_calculateSpbrg
    _calculateSpbrg->___aldiv
    _loop->_chectButtons
    _chectButtons->_handleButtonEvents
    _handleButtonEvents->_btn1Func
    _btn1Func->_USARTWriteInt
    _USARTWriteInt->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5927
                               _loop
               _setPortInputsOutputs
                              _setup
                      _setupSettings
 ---------------------------------------------------------------------------------
 (1) _setupSettings                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3157
                          _USARTInit
 _initInputControllerDefaultFunction
                    _setButton1Usart
                       _setProcessor
 ---------------------------------------------------------------------------------
 (2) _setProcessor                                         2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setButton1Usart                                      2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _initInputControllerDefaultFunction                  23     0     23    1642
                                             78 BANK0     23     0     23
                _initInputController
 ---------------------------------------------------------------------------------
 (3) _initInputController                                 62    39     23    1642
                                             16 BANK0     62    39     23
                          _addButton
                         _initButton
 ---------------------------------------------------------------------------------
 (4) _initButton                                          16     8      8     741
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _addButton                                            7     3      4     522
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            6     0      6    1360
                                             26 BANK0      6     0      6
                     _calculateSpbrg
                   _enableInterrupts
                     _setupFunctions
 ---------------------------------------------------------------------------------
 (3) _setupFunctions                                       2     0      2     338
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _enableInterrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _calculateSpbrg                                      12     8      4     780
                                             14 BANK0     12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     625
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _setPortInputsOutputs                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    2770
                       _chectButtons
 ---------------------------------------------------------------------------------
 (2) _chectButtons                                        10     8      2    2770
                                             26 BANK0     10     8      2
                 _handleButtonEvents
 ---------------------------------------------------------------------------------
 (3) _handleButtonEvents                                   4     2      2    2516
                                             22 BANK0      4     2      2
                           _btn1Func *
                       _btn1getValue *
                           _btn2Func *
                       _btn2getValue *
 ---------------------------------------------------------------------------------
 (4) _btn2getValue                                         3     1      2       0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _btn2Func                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _btn1getValue                                         3     1      2       0
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _btn1Func                                             2     2      0    2271
                                             20 BANK0      2     2      0
                      _USARTWriteInt *
                   _USARTWriteString *
 ---------------------------------------------------------------------------------
 (5) _USARTWriteString                                     2     0      2     240
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _USARTWriteInt                                       12     9      3    1997
                                              8 BANK0     12     9      3
                     _USARTWriteByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _USARTWriteByte                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 12    12      0    2788
                                             44 COMRAM    12    12      0
                     _USARTDataReady *
                       _usartOccured *
 ---------------------------------------------------------------------------------
 (8) _usartOccured                                        22    22      0    2788
                                             22 COMRAM    22    22      0
                    _USARTReadString *
                     _USARTWriteLine *
                               _atoi
                    i2_USARTWriteInt *
 ---------------------------------------------------------------------------------
 (9) i2_USARTWriteInt                                     12     9      3    1140
                                              8 COMRAM    12     9      3
                   i2_USARTWriteByte
                          i2___awdiv
                          i2___awmod
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) i2_USARTWriteByte                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _atoi                                                15    13      2     976
                                              7 COMRAM    15    13      2
                            _isdigit
                            _isspace
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _isspace                                             7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) _isdigit                                             6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) _USARTWriteLine                                       2     0      2     172
                                              2 COMRAM     2     0      2
                 i2_USARTWriteString
 ---------------------------------------------------------------------------------
 (10) i2_USARTWriteString                                  2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _USARTReadString                                     12     9      3     337
                                              0 COMRAM    12     9      3
                      _USARTReadChar
 ---------------------------------------------------------------------------------
 (10) _USARTReadChar                                       0     0      0       0
                     _USARTDataReady
 ---------------------------------------------------------------------------------
 (11) _USARTDataReady                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _chectButtons
       _handleButtonEvents
         _btn1Func *
           _USARTWriteInt *
             _USARTWriteByte
             ___awdiv
             ___awmod
           _USARTWriteString *
         _btn1getValue *
         _btn2Func *
         _btn2getValue *
   _setPortInputsOutputs
   _setup
     _USARTInit
       _calculateSpbrg
         ___aldiv
       _enableInterrupts
       _setupFunctions
     _initInputControllerDefaultFunction
       _initInputController
         _addButton
         _initButton
     _setButton1Usart
     _setProcessor
   _setupSettings

 _ISR (ROOT)
   _USARTDataReady *
   _usartOccured *
     _USARTReadString *
       _USARTReadChar
         _USARTDataReady
     _USARTWriteLine *
       i2_USARTWriteString
     _atoi *
       _isdigit
       _isspace
       i2___wmul
     i2_USARTWriteInt *
       i2_USARTWriteByte
       i2___awdiv
       i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     65      7C       5       96.9%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     38      65       1       80.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E1      15        0.0%
DATA                 0      0      E1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 00:09:23 2019

                            ?_USARTDataReady 0001                            USARTInit@baudRate 009C  
                          ??_setButton1Usart 0082                                 ___awdiv@sign 0085  
                                __CFG_BORV$3 000000                         ?_initInputController 0090  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
                                __CFG_LVP$ON 000000                     __size_ofi2_USARTWriteInt 00F2  
                       __end_of_chectButtons 0F28                                          l116 11FC  
                                        l139 085C                                          _GIE 007F97  
                               __CFG_CPB$OFF 000000                                 __CFG_CPD$OFF 000000  
                                        _ISR 0008                               ?_USARTReadChar 0001  
                   _USARTWriteByte$intlevel0 139C                                 ___awmod@sign 0085  
                                        tosl 000FFD                                          wreg 000FE8  
                      __size_of_usartOccured 00A6                   __end_ofi2_USARTWriteString 12B0  
                                       ?_ISR 0001                              ?_calculateSpbrg 008E  
                               __CFG_WDT$OFF 000000                                         l2101 0D88  
                                       l2105 0D92                                         l2121 0FB0  
                                       l2131 0FD2                                         l2109 0DA0  
                                       l2141 0FF4                                         l2125 0FBC  
                                       l2065 13A0                                         l2145 1002  
                                       l2137 0FEA                                         l2129 0FCA  
                                       l2241 0986                                         l2091 0D68  
                                       l2083 0D4A                                         l2163 0778  
                                       l2155 1214                                         l2323 0EC0  
                                       l2235 096E                                         l2077 0D3A  
                                       l2181 07F6                                         l2191 0830  
                                       l2183 07FA                                         l2175 07E6  
                                       l2247 09A8                                         l2263 09F6  
                                       l2089 0D60                                         l2185 080E  
                                       l2169 079C                                         l2329 0F04  
                                       l2249 09B4                                         l2187 081E  
                                       l2267 0A0C                                         l2259 09E8  
                                       l2279 0C84                                         l2397 137C  
                                       STR_1 061D                                         STR_2 0601  
                                       STR_3 060F                                         STR_4 061D  
                                       STR_5 061F                                         _BRGH 007D62  
                                       _CREN 007D5C                                         u2010 085C  
                                       u2100 09B8                                         u2021 127A  
                                       u2050 1348                                         u2060 1360  
                                       u2205 0F3A                                         u2221 12F2  
                                       u2038 10A6                                         _LATB 000F8A  
                                       u2039 10BA                                         u2231 1142  
                                       u2048 10D4                                         u2058 134C  
                                       u2138 0C16                                         u2139 0C2A  
                                       u2171 0AF0                                         u2068 1364  
                                       u2181 0B1C                                         u2191 0B5A  
                                       u2168 0C58                                         u2169 0C6C  
                                       u1900 0FD6                                         u1840 0D6C  
                                       u1961 0782                                         _PEIE 007F96  
                                       _RCIE 007CED                                         _RCIF 007CF5  
                                       _SPEN 007D5F                                         _TXIF 007CF4  
                                       _TXEN 007D65                                         _SYNC 007D64  
                     __end_of_USARTWriteByte 13AA                       __end_of_USARTWriteLine 133C  
                                       _atoi 0622                                         _main 136C  
                       __end_of_btn1getValue 1354                                         _loop 13AA  
                                       fsr0h 000FEA                                         fsr1h 000FE2  
                                       fsr2h 000FDA                                         fsr0l 000FE9  
                                       indf2 000FDF                                         fsr1l 000FE1  
                                       fsr2l 000FD9                                         btemp 0066  
                       __end_of_btn2getValue 136C                                         prodh 000FF4  
                                       prodl 000FF3                               ?_USARTWriteInt 0088  
                                       start 000E                                __CFG_IESO$OFF 000000  
                   __end_ofi2_USARTWriteByte 13D4                                 ___param_bank 000000  
                                      ??_ISR 002D                   __end_of_handleButtonEvents 0C9A  
                               _usartOccured 0A1E                        ??_initInputController 00A7  
                            __end_of___aldiv 0A1E                                        ?_atoi 0008  
                                      ?_main 0001                              __end_of___awdiv 0DAA  
                                      ?_loop 0001                              __end_of___awmod 100C  
                            ___awdiv@divisor 0082                                        i2l116 1286  
                            ??_setupSettings 0080                                        i2l139 094E  
                                      i2l904 0752                              ___awdiv@counter 0084  
                                      _RCREG 000FAE                                        _SPBRG 000FAF  
                                      _TRISB 000F93                                        _TRISD 000F95  
                                      _TXREG 000FAD                                __CFG_PWRT$OFF 000000  
                              __CFG_WRT0$OFF 000000                                __CFG_WRT1$OFF 000000  
                              __CFG_WRT2$OFF 000000                                __CFG_WRT3$OFF 000000  
                             __CFG_EBTR0$OFF 000000                               __CFG_FCMEN$OFF 000000  
                             __CFG_EBTR1$OFF 000000                               __CFG_EBTR2$OFF 000000  
                           USARTWriteByte@ch 0080                               __CFG_EBTR3$OFF 000000  
                           USARTWriteInt@val 0088                             USARTWriteInt@str 008B  
                           USARTWriteLine@ln 0003                                __CFG_WRTB$OFF 000000  
                              __CFG_WRTC$OFF 000000                                __CFG_WRTD$OFF 000000  
                             __CFG_EBTRB$OFF 000000                              __end_of_isdigit 1258  
                           ?_USARTReadString 0001                                        _setup 1138  
                                      atoi@n 0015                                        atoi@s 0008  
                                      _usart 0052                              __end_of_isspace 11BA  
                                      pclath 000FFA                                        tablat 000FF5  
                           _enableInterrupts 13F4                           __size_of_USARTInit 003A  
                           __end_ofi2___wmul 1322                                        plusw0 000FEB  
                                      plusw1 000FE3                                        plusw2 000FDB  
                            ?_USARTWriteByte 0001                              ?_USARTWriteLine 0003  
                                      ttemp5 0067                                        ttemp6 006A  
                                      ttemp7 006E                                        status 000FD8  
                                      wtemp8 0067                           __size_ofi2___awdiv 0084  
                         __size_ofi2___awmod 0070                               __CFG_PBADEN$ON 000000  
                             __CFG_MCLRE$OFF 000000                 __end_of_setPortInputsOutputs 13F4  
                            __initialization 12B0                                 __end_of_atoi 075C  
                               __end_of_main 1382                                 __end_of_loop 13BA  
                           ??_setupFunctions 0082                              ??_USARTReadChar 0001  
                                     ??_atoi 000A                                       ??_main 00E5  
                                     ??_loop 00A4                                __activetblptr 000002  
                          ??i2_USARTWriteInt 000C                             ___awdiv@dividend 0080  
                                     ?_setup 0001                                       i2l2003 0924  
                                     i2l1805 0E6A                                       i2l1821 0E9C  
                                     i2l1807 0E72                                       i2l1825 0EAA  
                                     i2l1817 0E92                                       i2l1841 102C  
                                     i2l1931 0638                                       i2l1861 1072  
                                     i2l1853 105A                                       i2l1845 103A  
                                     i2l1837 1020                                       i2l1759 11B2  
                                     i2l1951 06BE                                       i2l1767 13CA  
                                     i2l1847 1042                                       i2l1777 129C  
                                     i2l1945 068A                                       i2l1929 0634  
                                     i2l1793 0E44                                       i2l1857 1064  
                                     i2l1883 0DB4                                       i2l1955 06F4  
                                     i2l1947 0692                                       i2l1939 067A  
                                     i2l1949 0698                                       i2l1981 0894  
                                     i2l1895 0DE2                                       i2l1799 0E54  
                                     i2l1975 0870                                       i2l1993 08EA  
                                     i2l1995 08EE                                       i2l1987 08DA  
                                     i2l1997 0902                                       i2l1999 0912  
                                     _OSCCON 000FD3                              ??_USARTWriteInt 008B  
                                     _TRISC6 007CA6                                       _TRISC7 007CA7  
                           __end_of_btn1Func 10E8                             __end_of_btn2Func 1404  
                              btn1Func@deger 0094                               __CFG_XINST$OFF 000000  
                                     _bUsart 0064                                    ??___aldiv 0088  
                                  ??___awdiv 0084                        __size_of_chectButtons 0074  
                             __CFG_STVREN$ON 000000                                    ??___awmod 0084  
                   __end_of_USARTWriteString 1228                                       clear_0 12B6  
                                     clear_1 12C2                             ___awdiv@quotient 0086  
                            ___awmod@divisor 0082                              ___awmod@counter 0084  
                          __end_of_USARTInit 11F4                               i2___awdiv@sign 0006  
                                  ??_isdigit 0003                            __end_ofi2___awdiv 0EB4  
                          __end_ofi2___awmod 107C                                 __mediumconst 0000  
                                  ??_isspace 0003                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                             i2___awmod@sign 0006                        __size_of_btn1getValue 0018  
                      __size_of_btn2getValue 0018                           __size_of_addButton 0050  
                                 __accesstop 0080                      __end_of__initialization 12C8  
                           ??_USARTDataReady 0001                              _setButton1Usart 13E0  
                               _chectButtons 0EB4                                ___rparam_used 000001  
                             __pcstackCOMRAM 0001                                __end_of_setup 117C  
           initInputController@_chectButtons 0090                                 _btn1getValue 133C  
                                  ?i2___wmul 0001                                 _btn2getValue 1354  
                              chectButtons@i 00A2                             ??_calculateSpbrg 0092  
                       _setPortInputsOutputs 13EA                                      ??_setup 00E5  
                     chectButtons@controller 009A                                   __pbssBANK0 00E5  
                                 __pnvCOMRAM 0064                           i2_USARTWriteString 1284  
                          ?i2_USARTWriteByte 0001                           ??i2_USARTWriteByte 0001  
                         USARTReadString@buf 0001                           USARTReadString@tmp 000C  
                        ?i2_USARTWriteString 0001                            __end_of_addButton 1138  
                  USARTWriteInt@field_length 008A                     __end_of_enableInterrupts 13FC  
                              ?_setProcessor 0001                                   ??i2___wmul 0005  
                                  ?_btn1Func 0001                                    ?_btn2Func 0001  
                           i2USARTWriteInt@i 0013                             i2USARTWriteInt@j 0011  
                                    i2u28_40 13DC                        ?_setPortInputsOutputs 0001  
                           ??_USARTWriteByte 0080                             ??_USARTWriteLine 0005  
                    __end_of_setButton1Usart 13EA                           _handleButtonEvents 0C04  
                         USARTWriteInt@F2999 004D                         ??i2_USARTWriteString 0003  
                             USARTInit@usart 009A                          ?_handleButtonEvents 0096  
                                 _controller 00E5                                      __Hparam 0000  
                                    __Lparam 0000                  __end_of_initInputController 0B64  
                                 _initButton 1258                                      ___aldiv 0950  
                                    ___awdiv 0D24                                      ___awmod 0F9A  
                               __psmallconst 0600                                      __pcinit 12B0  
                            i2_USARTWriteInt 085E                                      __ramtop 0600  
                             ??_setProcessor 0080                                      __ptext0 136C  
                                    __ptext1 1404                                      __ptext2 1138  
                                    __ptext3 1382                                      __ptext4 13E0  
                                    __ptext5 12D6                                      __ptext6 0AC4  
                                    __ptext7 1258                                      __ptext8 10E8  
                                    __ptext9 11BA                         ??_handleButtonEvents 0098  
                    handleButtonEvents@buton 0096                                 __size_of_ISR 0D1C  
                                 ??_btn1Func 0094                                   ??_btn2Func 0080  
                                    _isdigit 1228                              addButton@button 0082  
                           ___awmod@dividend 0080                             ___aldiv@dividend 0080  
                      __end_of_setupSettings 140A                                      _isspace 117C  
                                    atoi@neg 000E                               __pintcode_body 0C9A  
                       end_of_initialization 12C8                           i2USARTWriteByte@ch 0001  
                         i2USARTWriteInt@val 0009                           i2USARTWriteInt@str 000C  
                              __Lmediumconst 0000                                      int_func 0C9A  
                        i2___wmul@multiplier 0001                            usartOccured@F3074 0039  
                   __size_of_USARTReadString 0086                             ___aldiv@quotient 008A  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc2 000FDE                            ?_USARTWriteString 0080  
                                  _PORTDbits 000F83                initInputController@controller 00B7  
                      __end_of_USARTReadChar 13C8                       setProcessor@_processor 0080  
                         ??_USARTWriteString 0082                       ??_setPortInputsOutputs 0080  
                                  _USARTInit 11BA                             ?_setButton1Usart 0080  
                                  i2___awdiv 0E30                                    i2___awmod 100C  
                        setupFunctions@usart 0080                           i2___awdiv@dividend 0001  
                             USARTWriteInt@i 0092                               USARTWriteInt@j 0090  
                      __end_of_USARTWriteInt 085E                      __end_ofi2_USARTWriteInt 0950  
                                ?_initButton 0080                   initInputController@button1 00A7  
                 initInputController@button2 00AF                             i2___wmul@product 0005  
                        start_initialization 12B0                                   ?_USARTInit 009A  
                         i2___awdiv@quotient 0007                                  __end_of_ISR 0D24  
                          __size_ofi2___wmul 0026                      __size_of_setupFunctions 00A0  
                                 ?i2___awdiv 0001                                   ?i2___awmod 0001  
                  USARTReadString@max_length 0003                             USARTReadString@i 000B  
                       __end_of_setProcessor 1396                             __CFG_OSC$INTIO67 000000  
                              usartOccured@i 002B                             __CFG_LPT1OSC$OFF 000000  
                              ?_usartOccured 0001                            ??_USARTReadString 0004  
                          ?_enableInterrupts 0001                                    _addButton 10E8  
                         ??_enableInterrupts 0080                                  __pbssCOMRAM 0039  
                  __size_ofi2_USARTWriteByte 000C                                __pcstackBANK0 0080  
                          __size_of_btn1Func 006C                            __size_of_btn2Func 0008  
                        __size_of_initButton 002C                            __CFG_CCP2MX$PORTC 000000  
                           ?i2_USARTWriteInt 0009                                    __pintcode 0008  
                                   ?___aldiv 0080                                     ?___awdiv 0080  
                                   ?___awmod 0080                               ??_usartOccured 0017  
                    __size_of_USARTDataReady 000C                                  __smallconst 0600  
                                   ?_isdigit 0001                                   ?_addButton 0080  
                                ??_USARTInit 00A0                                     ?_isspace 0001  
                          chectButtons@buton 00A0                                  ??i2___awdiv 0005  
                                ??i2___awmod 0005                               __size_of_setup 0044  
                __size_ofi2_USARTWriteString 002C                        setButton1Usart@_usart 0080  
                            ___aldiv@divisor 0084                      __size_of_calculateSpbrg 0072  
                            ___aldiv@counter 0088                                     i2u134_40 11AE  
                                   i2u135_40 1250                                     i2u143_40 0E76  
                                   i2u230_48 0CDC                                     i2u230_49 0CF0  
                                   i2u136_40 1252                                     i2u161_40 0722  
                                   i2u225_41 0A30                                     i2u162_40 0724  
                                   i2u171_40 094E                                     i2u226_48 0A4C  
                                   i2u226_49 0A60                                     i2u227_48 0A8C  
                                   i2u227_49 0AA0                                     i2u157_40 0E12  
                                   i2u149_40 1046                                     i2u228_48 0AB0  
                                   i2u166_41 087A                                     i2u159_40 0676  
                                   _PIR1bits 000F9E                             __CFG_WDTPS$32768 000000  
                      i2USARTWriteString@str 0001                             usartOccured@text 0017  
               __size_of_initInputController 00A0                                     i2___wmul 12FC  
                __size_of_handleButtonEvents 0096                            i2___awdiv@divisor 0003  
                          i2___awdiv@counter 0005                               _setupFunctions 0B64  
                      __size_of_setProcessor 0014                           i2___awmod@dividend 0001  
                  __size_of_USARTWriteString 0034   __end_of_initInputControllerDefaultFunction 12FC  
__size_of_initInputControllerDefaultFunction 0026         ??_initInputControllerDefaultFunction 00E5  
        ?_initInputControllerDefaultFunction 00CE           _initInputControllerDefaultFunction 12D6  
                              ?_chectButtons 009A                      __size_of_USARTWriteByte 0014  
                    __size_of_USARTWriteLine 001A                                     __Hrparam 0000  
                                   __Lrparam 0000                                 ??_initButton 0088  
                         __CFG_BOREN$SBORDIS 000000                       __size_of_setupSettings 0006  
                           __size_of___aldiv 00CE                             __size_of___awdiv 0086  
                i2USARTWriteInt@field_length 000B                             __size_of___awmod 0072  
                      i2___wmul@multiplicand 0003                                ?_btn1getValue 0080  
                        addButton@controller 0080                                 _setProcessor 1382  
                              ?_btn2getValue 0080                                     _btn1Func 107C  
                                ??_addButton 0084                                     _btn2Func 13FC  
                     __end_of_setupFunctions 0C04                                     _atoi$860 0012  
                                   _atoi$858 0010                                     _atoi$859 0014  
                           i2_USARTWriteByte 13C8                             __size_of_isdigit 0030  
                           __size_of_isspace 003E                                     __ptext10 0B64  
                                   __ptext11 13F4                                     __ptext20 107C  
                                   __ptext12 0F28                                     __ptext21 13FC  
                                   __ptext13 0950                                     __ptext30 100C  
                                   __ptext22 11F4                                     __ptext14 13EA  
                                   __ptext31 0E30                                     __ptext23 075C  
                                   __ptext15 13AA                                     __ptext40 13BA  
                                   __ptext32 13C8                                     __ptext24 0F9A  
                                   __ptext16 0EB4                                     __ptext41 13D4  
                                   __ptext33 0622                                     __ptext25 0D24  
                                   __ptext17 0C04                                     __ptext42 0000  
                                   __ptext34 12FC                                     __ptext26 1396  
                                   __ptext18 133C                                     __ptext35 117C  
                                   __ptext19 1354                                     __ptext36 1228  
                                   __ptext28 0A1E                                     __ptext37 1322  
                                   __ptext29 085E                                     __ptext38 1284  
                                   __ptext39 0DAA                __size_of_setPortInputsOutputs 000A  
                         __end_of_initButton 1284                         __end_of_usartOccured 0AC4  
                             ??_chectButtons 009C                                __size_of_atoi 013A  
                              __size_of_main 0016                                __size_of_loop 0010  
                            _USARTReadString 0DAA                     __size_of_setButton1Usart 000A  
                     __size_of_USARTReadChar 000E                      _USARTWriteInt$intlevel0 0762  
                            initButton@buton 0088                                     int$flags 0066  
                        calculateSpbrg@bolum 0096                               _USARTDataReady 13D4  
                             ??_btn1getValue 0082                                  _isspace$876 0007  
                             ??_btn2getValue 0082                            i2___awmod@divisor 0003  
                          i2___awmod@counter 0005                              ?_setupFunctions 0080  
                     __size_of_USARTWriteInt 0102                                _setupSettings 1404  
                                   isdigit@c 0001                                     intlevel2 0000  
                             _calculateSpbrg 0F28                    __size_of_enableInterrupts 0008  
                                   isspace@c 0001                       __end_of_USARTDataReady 13E0  
                        USARTWriteString@str 0080                          initButton@onPressed 0084  
                 _USARTWriteString$intlevel0 11FA                           initButton@getValue 0082  
                              _USARTReadChar 13BA                                _USARTReadByte 000000  
                             ?_setupSettings 0001                                 ___aldiv@sign 0089  
                    __end_of_USARTReadString 0E30                       __end_of_calculateSpbrg 0F9A  
                           _USARTWriteString 11F4                       calculateSpbrg@baudRate 008E  
                        _initInputController 0AC4                               _USARTWriteByte 1396  
                             _USARTWriteLine 1322                           initButton@portName 0080  
                              _USARTWriteInt 075C  
